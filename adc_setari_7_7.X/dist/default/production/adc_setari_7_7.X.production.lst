

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Jul 08 11:50:14 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F56Q71
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	nvBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=3
    28                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=3
    29                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=3
    30                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=2
    36                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    67   000000                     
    68                           ; Generated 24/03/2025 GMT
    69                           ; 
    70                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution. Publication is not required when
    84                           ;        this file is used in an embedded application.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F56Q71 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102   0004E0                     bsr             equ	1248
   103   0004E9                     fsr0            equ	1257
   104   0004EA                     fsr0h           equ	1258
   105   0004E9                     fsr0l           equ	1257
   106   0004E1                     fsr1            equ	1249
   107   0004E2                     fsr1h           equ	1250
   108   0004E1                     fsr1l           equ	1249
   109   0004D9                     fsr2            equ	1241
   110   0004DA                     fsr2h           equ	1242
   111   0004D9                     fsr2l           equ	1241
   112   0004EF                     indf0           equ	1263
   113   0004E7                     indf1           equ	1255
   114   0004DF                     indf2           equ	1247
   115   0004D6                     intcon          equ	1238
   116   000041                     nvmcon          equ	65
   117   0004F9                     pcl             equ	1273
   118   0004FA                     pclath          equ	1274
   119   0004FB                     pclatu          equ	1275
   120   0004EB                     plusw0          equ	1259
   121   0004E3                     plusw1          equ	1251
   122   0004DB                     plusw2          equ	1243
   123   0004ED                     postdec0        equ	1261
   124   0004E5                     postdec1        equ	1253
   125   0004DD                     postdec2        equ	1245
   126   0004EE                     postinc0        equ	1262
   127   0004E6                     postinc1        equ	1254
   128   0004DE                     postinc2        equ	1246
   129   0004EC                     preinc0         equ	1260
   130   0004E4                     preinc1         equ	1252
   131   0004DC                     preinc2         equ	1244
   132   0004F3                     prod            equ	1267
   133   0004F4                     prodh           equ	1268
   134   0004F3                     prodl           equ	1267
   135   0004D8                     status          equ	1240
   136   0004F5                     tablat          equ	1269
   137   0004F6                     tblptr          equ	1270
   138   0004F7                     tblptrh         equ	1271
   139   0004F6                     tblptrl         equ	1270
   140   0004F8                     tblptru         equ	1272
   141   0004FD                     tosl            equ	1277
   142   0004E8                     wreg            equ	1256
   143   000039                     CLKRCON         equ	57	;# 
   144   00003A                     CLKRCLK         equ	58	;# 
   145   000040                     NVMCON0         equ	64	;# 
   146   000041                     NVMCON1         equ	65	;# 
   147   000042                     NVMLOCK         equ	66	;# 
   148   000043                     NVMADR          equ	67	;# 
   149   000043                     NVMADRL         equ	67	;# 
   150   000044                     NVMADRH         equ	68	;# 
   151   000045                     NVMADRU         equ	69	;# 
   152   000046                     NVMDAT          equ	70	;# 
   153   000046                     NVMDATL         equ	70	;# 
   154   000047                     NVMDATH         equ	71	;# 
   155   000048                     VREGCON         equ	72	;# 
   156   000049                     BORCON          equ	73	;# 
   157   00004A                     HLVDCON0        equ	74	;# 
   158   00004B                     HLVDCON1        equ	75	;# 
   159   00004C                     ZCDCON          equ	76	;# 
   160   000062                     PMD0            equ	98	;# 
   161   000063                     PMD1            equ	99	;# 
   162   000064                     PMD2            equ	100	;# 
   163   000065                     PMD3            equ	101	;# 
   164   000066                     PMD4            equ	102	;# 
   165   000067                     PMD5            equ	103	;# 
   166   000068                     PMD6            equ	104	;# 
   167   00006F                     CMOUT           equ	111	;# 
   168   000070                     CM1CON0         equ	112	;# 
   169   000071                     CM1CON1         equ	113	;# 
   170   000072                     CM1NCH          equ	114	;# 
   171   000073                     CM1PCH          equ	115	;# 
   172   000074                     CM2CON0         equ	116	;# 
   173   000075                     CM2CON1         equ	117	;# 
   174   000076                     CM2NCH          equ	118	;# 
   175   000077                     CM2PCH          equ	119	;# 
   176   000078                     WDTCON0         equ	120	;# 
   177   000079                     WDTCON1         equ	121	;# 
   178   00007A                     WDTPS           equ	122	;# 
   179   00007A                     WDTPSL          equ	122	;# 
   180   00007B                     WDTPSH          equ	123	;# 
   181   00007C                     WDTTMR          equ	124	;# 
   182   00007D                     DAC1DAT         equ	125	;# 
   183   00007D                     DAC1DATL        equ	125	;# 
   184   00007E                     DAC1DATH        equ	126	;# 
   185   00007F                     DAC1CON         equ	127	;# 
   186   000080                     SPI1RXB         equ	128	;# 
   187   000081                     SPI1TXB         equ	129	;# 
   188   000082                     SPI1TCNT        equ	130	;# 
   189   000082                     SPI1TCNTL       equ	130	;# 
   190   000083                     SPI1TCNTH       equ	131	;# 
   191   000084                     SPI1CON0        equ	132	;# 
   192   000085                     SPI1CON1        equ	133	;# 
   193   000086                     SPI1CON2        equ	134	;# 
   194   000087                     SPI1STATUS      equ	135	;# 
   195   000088                     SPI1TWIDTH      equ	136	;# 
   196   000089                     SPI1BAUD        equ	137	;# 
   197   00008A                     SPI1INTF        equ	138	;# 
   198   00008B                     SPI1INTE        equ	139	;# 
   199   00008C                     SPI1CLK         equ	140	;# 
   200   0000AC                     ACTCON          equ	172	;# 
   201   0000AD                     OSCCON1         equ	173	;# 
   202   0000AE                     OSCCON2         equ	174	;# 
   203   0000AF                     OSCCON3         equ	175	;# 
   204   0000B0                     OSCTUNE         equ	176	;# 
   205   0000B1                     OSCFRQ          equ	177	;# 
   206   0000B1                     OSCFREQ         equ	177	;# 
   207   0000B2                     OSCSTAT         equ	178	;# 
   208   0000B2                     OSCSTAT1        equ	178	;# 
   209   0000B3                     OSCEN           equ	179	;# 
   210   0000B4                     PRLOCK          equ	180	;# 
   211   0000B5                     SCANPR          equ	181	;# 
   212   0000B6                     DMA1PR          equ	182	;# 
   213   0000B7                     DMA2PR          equ	183	;# 
   214   0000B8                     DMA3PR          equ	184	;# 
   215   0000B9                     DMA4PR          equ	185	;# 
   216   0000BE                     MAINPR          equ	190	;# 
   217   0000BF                     ISRPR           equ	191	;# 
   218   0000C0                     DAC2DAT         equ	192	;# 
   219   0000C0                     DAC2DATL        equ	192	;# 
   220   0000C2                     DAC2CON         equ	194	;# 
   221   0000C3                     DAC3DAT         equ	195	;# 
   222   0000C3                     DAC3DATL        equ	195	;# 
   223   0000C5                     DAC3CON         equ	197	;# 
   224   0000D4                     CLCDATA         equ	212	;# 
   225   0000D5                     CLCSELECT       equ	213	;# 
   226   0000D6                     CLCnCON         equ	214	;# 
   227   0000D7                     CLCnPOL         equ	215	;# 
   228   0000D8                     CLCnSEL0        equ	216	;# 
   229   0000D9                     CLCnSEL1        equ	217	;# 
   230   0000DA                     CLCnSEL2        equ	218	;# 
   231   0000DB                     CLCnSEL3        equ	219	;# 
   232   0000DC                     CLCnGLS0        equ	220	;# 
   233   0000DD                     CLCnGLS1        equ	221	;# 
   234   0000DE                     CLCnGLS2        equ	222	;# 
   235   0000DF                     CLCnGLS3        equ	223	;# 
   236   0000E8                     DMASELECT       equ	232	;# 
   237   0000E9                     DMAnBUF         equ	233	;# 
   238   0000EA                     DMAnDCNT        equ	234	;# 
   239   0000EA                     DMAnDCNTL       equ	234	;# 
   240   0000EB                     DMAnDCNTH       equ	235	;# 
   241   0000EC                     DMAnDPTR        equ	236	;# 
   242   0000EC                     DMAnDPTRL       equ	236	;# 
   243   0000ED                     DMAnDPTRH       equ	237	;# 
   244   0000EE                     DMAnDSZ         equ	238	;# 
   245   0000EE                     DMAnDSZL        equ	238	;# 
   246   0000EF                     DMAnDSZH        equ	239	;# 
   247   0000F0                     DMAnDSA         equ	240	;# 
   248   0000F0                     DMAnDSAL        equ	240	;# 
   249   0000F1                     DMAnDSAH        equ	241	;# 
   250   0000F2                     DMAnSCNT        equ	242	;# 
   251   0000F2                     DMAnSCNTL       equ	242	;# 
   252   0000F3                     DMAnSCNTH       equ	243	;# 
   253   0000F4                     DMAnSPTR        equ	244	;# 
   254   0000F4                     DMAnSPTRL       equ	244	;# 
   255   0000F5                     DMAnSPTRH       equ	245	;# 
   256   0000F6                     DMAnSPTRU       equ	246	;# 
   257   0000F7                     DMAnSSZ         equ	247	;# 
   258   0000F7                     DMAnSSZL        equ	247	;# 
   259   0000F8                     DMAnSSZH        equ	248	;# 
   260   0000F9                     DMAnSSA         equ	249	;# 
   261   0000F9                     DMAnSSAL        equ	249	;# 
   262   0000FA                     DMAnSSAH        equ	250	;# 
   263   0000FB                     DMAnSSAU        equ	251	;# 
   264   0000FC                     DMAnCON0        equ	252	;# 
   265   0000FD                     DMAnCON1        equ	253	;# 
   266   0000FE                     DMAnAIRQ        equ	254	;# 
   267   0000FF                     DMAnSIRQ        equ	255	;# 
   268   000100                     PORTW           equ	256	;# 
   269   000101                     LATW            equ	257	;# 
   270   000102                     PORTWIN0        equ	258	;# 
   271   000103                     PORTWIN1        equ	259	;# 
   272   000104                     PORTWIN2        equ	260	;# 
   273   000105                     PORTWIN3        equ	261	;# 
   274   000106                     PORTWIN4        equ	262	;# 
   275   000107                     PORTWIN5        equ	263	;# 
   276   000108                     PORTWIN6        equ	264	;# 
   277   000109                     PORTWIN7        equ	265	;# 
   278   00010A                     PORTWCLK        equ	266	;# 
   279   00010B                     PORTWDF         equ	267	;# 
   280   00010C                     PORTWCON        equ	268	;# 
   281   000110                     ADCGA           equ	272	;# 
   282   000111                     ADCGB           equ	273	;# 
   283   000112                     ADCGC           equ	274	;# 
   284   000113                     ADCGD           equ	275	;# 
   285   000114                     ADCGE           equ	276	;# 
   286   000115                     ADCGF           equ	277	;# 
   287   00011F                     OPA1CON0        equ	287	;# 
   288   000120                     OPA1CON1        equ	288	;# 
   289   000121                     OPA1CON2        equ	289	;# 
   290   000122                     OPA1CON3        equ	290	;# 
   291   000123                     OPA1CON4        equ	291	;# 
   292   000124                     OPA1HWC         equ	292	;# 
   293   000125                     OPA1OFFSET      equ	293	;# 
   294   000126                     OPA1ORS         equ	294	;# 
   295   000127                     OPA2CON0        equ	295	;# 
   296   000128                     OPA2CON1        equ	296	;# 
   297   000129                     OPA2CON2        equ	297	;# 
   298   00012A                     OPA2CON3        equ	298	;# 
   299   00012B                     OPA2CON4        equ	299	;# 
   300   00012C                     OPA2HWC         equ	300	;# 
   301   00012D                     OPA2OFFSET      equ	301	;# 
   302   00012E                     OPA2ORS         equ	302	;# 
   303   000140                     LATA            equ	320	;# 
   304   000141                     LATB            equ	321	;# 
   305   000142                     LATC            equ	322	;# 
   306   000143                     LATD            equ	323	;# 
   307   000144                     LATE            equ	324	;# 
   308   000145                     LATF            equ	325	;# 
   309   000148                     TRISA           equ	328	;# 
   310   000149                     TRISB           equ	329	;# 
   311   00014A                     TRISC           equ	330	;# 
   312   00014B                     TRISD           equ	331	;# 
   313   00014C                     TRISE           equ	332	;# 
   314   00014D                     TRISF           equ	333	;# 
   315   000150                     PORTA           equ	336	;# 
   316   000151                     PORTB           equ	337	;# 
   317   000152                     PORTC           equ	338	;# 
   318   000153                     PORTD           equ	339	;# 
   319   000154                     PORTE           equ	340	;# 
   320   000155                     PORTF           equ	341	;# 
   321   0001C0                     APMCON          equ	448	;# 
   322   0001C1                     APMPRE          equ	449	;# 
   323   0001C1                     APMPREL         equ	449	;# 
   324   0001C2                     APMPREH         equ	450	;# 
   325   0001C3                     APMPER          equ	451	;# 
   326   0001C3                     APMPERL         equ	451	;# 
   327   0001C4                     APMPERH         equ	452	;# 
   328   0001C5                     APMSTART1       equ	453	;# 
   329   0001C5                     APMSTART1L      equ	453	;# 
   330   0001C6                     APMSTART1H      equ	454	;# 
   331   0001C7                     APMPERS1        equ	455	;# 
   332   0001C7                     APMPERS1L       equ	455	;# 
   333   0001C8                     APMPERS1H       equ	456	;# 
   334   0001C9                     APMSTART2       equ	457	;# 
   335   0001C9                     APMSTART2L      equ	457	;# 
   336   0001CA                     APMSTART2H      equ	458	;# 
   337   0001CB                     APMSTART2U      equ	459	;# 
   338   0001CC                     APMPERS2        equ	460	;# 
   339   0001CC                     APMPERS2L       equ	460	;# 
   340   0001CD                     APMPERS2H       equ	461	;# 
   341   0001CE                     APMEND1         equ	462	;# 
   342   0001CE                     APMEND1L        equ	462	;# 
   343   0001CF                     APMEND1H        equ	463	;# 
   344   0001D0                     APMEND1U        equ	464	;# 
   345   0001D1                     APMPERE1        equ	465	;# 
   346   0001D1                     APMPERE1L       equ	465	;# 
   347   0001D2                     APMPERE1H       equ	466	;# 
   348   0001D3                     APMEND2         equ	467	;# 
   349   0001D3                     APMEND2L        equ	467	;# 
   350   0001D4                     APMEND2H        equ	468	;# 
   351   0001D5                     APMEND2U        equ	469	;# 
   352   0001D6                     APMPERE2        equ	470	;# 
   353   0001D6                     APMPERE2L       equ	470	;# 
   354   0001D7                     APMPERE2H       equ	471	;# 
   355   0001D8                     APMCLK          equ	472	;# 
   356   0001D9                     APMSTATUS       equ	473	;# 
   357   0001D9                     APMSTATUSL      equ	473	;# 
   358   0001DA                     APMSTATUSH      equ	474	;# 
   359   000200                     PPSLOCK         equ	512	;# 
   360   000201                     RA0PPS          equ	513	;# 
   361   000202                     RA1PPS          equ	514	;# 
   362   000203                     RA2PPS          equ	515	;# 
   363   000204                     RA3PPS          equ	516	;# 
   364   000205                     RA4PPS          equ	517	;# 
   365   000206                     RA5PPS          equ	518	;# 
   366   000207                     RA6PPS          equ	519	;# 
   367   000208                     RA7PPS          equ	520	;# 
   368   000209                     RB0PPS          equ	521	;# 
   369   00020A                     RB1PPS          equ	522	;# 
   370   00020B                     RB2PPS          equ	523	;# 
   371   00020C                     RB3PPS          equ	524	;# 
   372   00020D                     RB4PPS          equ	525	;# 
   373   00020E                     RB5PPS          equ	526	;# 
   374   00020F                     RB6PPS          equ	527	;# 
   375   000210                     RB7PPS          equ	528	;# 
   376   000211                     RC0PPS          equ	529	;# 
   377   000212                     RC1PPS          equ	530	;# 
   378   000213                     RC2PPS          equ	531	;# 
   379   000214                     RC3PPS          equ	532	;# 
   380   000215                     RC4PPS          equ	533	;# 
   381   000216                     RC5PPS          equ	534	;# 
   382   000217                     RC6PPS          equ	535	;# 
   383   000218                     RC7PPS          equ	536	;# 
   384   000219                     RD0PPS          equ	537	;# 
   385   00021A                     RD1PPS          equ	538	;# 
   386   00021B                     RD2PPS          equ	539	;# 
   387   00021C                     RD3PPS          equ	540	;# 
   388   00021D                     RD4PPS          equ	541	;# 
   389   00021E                     RD5PPS          equ	542	;# 
   390   00021F                     RD6PPS          equ	543	;# 
   391   000220                     RD7PPS          equ	544	;# 
   392   000221                     RE0PPS          equ	545	;# 
   393   000222                     RE1PPS          equ	546	;# 
   394   000223                     RE2PPS          equ	547	;# 
   395   000225                     RF0PPS          equ	549	;# 
   396   000226                     RF1PPS          equ	550	;# 
   397   000227                     RF2PPS          equ	551	;# 
   398   000228                     RF3PPS          equ	552	;# 
   399   000229                     RF4PPS          equ	553	;# 
   400   00022A                     RF5PPS          equ	554	;# 
   401   00022B                     RF6PPS          equ	555	;# 
   402   00022C                     RF7PPS          equ	556	;# 
   403   00023E                     INT0PPS         equ	574	;# 
   404   00023F                     INT1PPS         equ	575	;# 
   405   000240                     INT2PPS         equ	576	;# 
   406   000241                     T0CKIPPS        equ	577	;# 
   407   000242                     T1CKIPPS        equ	578	;# 
   408   000243                     T1GPPS          equ	579	;# 
   409   000244                     T3CKIPPS        equ	580	;# 
   410   000245                     T3GPPS          equ	581	;# 
   411   000248                     T2INPPS         equ	584	;# 
   412   000249                     T4INPPS         equ	585	;# 
   413   00024F                     CCP1PPS         equ	591	;# 
   414   000250                     CCP2PPS         equ	592	;# 
   415   000251                     PWM1ERSPPS      equ	593	;# 
   416   000252                     PWM2ERSPPS      equ	594	;# 
   417   000253                     PWM3ERSPPS      equ	595	;# 
   418   000257                     PWMIN0PPS       equ	599	;# 
   419   000258                     PWMIN1PPS       equ	600	;# 
   420   00025B                     CWG1PPS         equ	603	;# 
   421   00025B                     CWG1INPPS       equ	603	;# 
   422   000261                     CLCIN0PPS       equ	609	;# 
   423   000262                     CLCIN1PPS       equ	610	;# 
   424   000263                     CLCIN2PPS       equ	611	;# 
   425   000264                     CLCIN3PPS       equ	612	;# 
   426   000265                     CLCIN4PPS       equ	613	;# 
   427   000266                     CLCIN5PPS       equ	614	;# 
   428   000267                     CLCIN6PPS       equ	615	;# 
   429   000268                     CLCIN7PPS       equ	616	;# 
   430   000269                     ADACTPPS        equ	617	;# 
   431   00026A                     SPI1SCKPPS      equ	618	;# 
   432   00026B                     SPI1SDIPPS      equ	619	;# 
   433   00026C                     SPI1SSPPS       equ	620	;# 
   434   000270                     I2C1SDAPPS      equ	624	;# 
   435   000271                     I2C1SCLPPS      equ	625	;# 
   436   000272                     U1RXPPS         equ	626	;# 
   437   000273                     U1CTSPPS        equ	627	;# 
   438   000274                     U2RXPPS         equ	628	;# 
   439   000275                     U2CTSPPS        equ	629	;# 
   440   000276                     OPA1ORPPS       equ	630	;# 
   441   000277                     OPA2ORPPS       equ	631	;# 
   442   000278                     TUIN0PPS        equ	632	;# 
   443   000279                     TUIN1PPS        equ	633	;# 
   444   00027A                     APMCLKPPS       equ	634	;# 
   445   000285                     RB2I2C          equ	645	;# 
   446   000286                     RB1I2C          equ	646	;# 
   447   000287                     RC4I2C          equ	647	;# 
   448   000288                     RC3I2C          equ	648	;# 
   449   000289                     I2C1RXB         equ	649	;# 
   450   00028A                     I2C1TXB         equ	650	;# 
   451   00028B                     I2C1CNT         equ	651	;# 
   452   00028B                     I2C1CNTL        equ	651	;# 
   453   00028C                     I2C1CNTH        equ	652	;# 
   454   00028D                     I2C1ADB0        equ	653	;# 
   455   00028E                     I2C1ADB1        equ	654	;# 
   456   00028F                     I2C1ADR0        equ	655	;# 
   457   000290                     I2C1ADR1        equ	656	;# 
   458   000291                     I2C1ADR2        equ	657	;# 
   459   000292                     I2C1ADR3        equ	658	;# 
   460   000293                     I2C1CON0        equ	659	;# 
   461   000294                     I2C1CON1        equ	660	;# 
   462   000295                     I2C1CON2        equ	661	;# 
   463   000296                     I2C1CON3        equ	662	;# 
   464   000297                     I2C1ERR         equ	663	;# 
   465   000298                     I2C1STAT0       equ	664	;# 
   466   000299                     I2C1STAT1       equ	665	;# 
   467   00029A                     I2C1PIR         equ	666	;# 
   468   00029B                     I2C1PIE         equ	667	;# 
   469   00029C                     I2C1BTO         equ	668	;# 
   470   00029D                     I2C1BAUD        equ	669	;# 
   471   00029E                     I2C1CLK         equ	670	;# 
   472   00029F                     I2C1BTOC        equ	671	;# 
   473   0002A0                     U1RXB           equ	672	;# 
   474   0002A0                     U1RXBL          equ	672	;# 
   475   0002A1                     U1RXCHK         equ	673	;# 
   476   0002A2                     U1TXB           equ	674	;# 
   477   0002A2                     U1TXBL          equ	674	;# 
   478   0002A3                     U1TXCHK         equ	675	;# 
   479   0002A4                     U1P1            equ	676	;# 
   480   0002A4                     U1P1L           equ	676	;# 
   481   0002A5                     U1P1H           equ	677	;# 
   482   0002A6                     U1P2            equ	678	;# 
   483   0002A6                     U1P2L           equ	678	;# 
   484   0002A7                     U1P2H           equ	679	;# 
   485   0002A8                     U1P3            equ	680	;# 
   486   0002A8                     U1P3L           equ	680	;# 
   487   0002A9                     U1P3H           equ	681	;# 
   488   0002AA                     U1CON0          equ	682	;# 
   489   0002AB                     U1CON1          equ	683	;# 
   490   0002AC                     U1CON2          equ	684	;# 
   491   0002AD                     U1BRG           equ	685	;# 
   492   0002AD                     U1BRGL          equ	685	;# 
   493   0002AE                     U1BRGH          equ	686	;# 
   494   0002AF                     U1FIFO          equ	687	;# 
   495   0002B0                     U1UIR           equ	688	;# 
   496   0002B1                     U1ERRIR         equ	689	;# 
   497   0002B2                     U1ERRIE         equ	690	;# 
   498   0002B4                     U2RXB           equ	692	;# 
   499   0002B4                     U2RXBL          equ	692	;# 
   500   0002B6                     U2TXB           equ	694	;# 
   501   0002B6                     U2TXBL          equ	694	;# 
   502   0002B8                     U2P1            equ	696	;# 
   503   0002B8                     U2P1L           equ	696	;# 
   504   0002BA                     U2P2            equ	698	;# 
   505   0002BA                     U2P2L           equ	698	;# 
   506   0002BC                     U2P3            equ	700	;# 
   507   0002BC                     U2P3L           equ	700	;# 
   508   0002BE                     U2CON0          equ	702	;# 
   509   0002BF                     U2CON1          equ	703	;# 
   510   0002C0                     U2CON2          equ	704	;# 
   511   0002C1                     U2BRG           equ	705	;# 
   512   0002C1                     U2BRGL          equ	705	;# 
   513   0002C2                     U2BRGH          equ	706	;# 
   514   0002C3                     U2FIFO          equ	707	;# 
   515   0002C4                     U2UIR           equ	708	;# 
   516   0002C5                     U2ERRIR         equ	709	;# 
   517   0002C6                     U2ERRIE         equ	710	;# 
   518   000312                     TMR1            equ	786	;# 
   519   000312                     TMR1L           equ	786	;# 
   520   000313                     TMR1H           equ	787	;# 
   521   000314                     T1CON           equ	788	;# 
   522   000314                     TMR1CON         equ	788	;# 
   523   000315                     T1GCON          equ	789	;# 
   524   000315                     TMR1GCON        equ	789	;# 
   525   000316                     T1GATE          equ	790	;# 
   526   000316                     TMR1GATE        equ	790	;# 
   527   000317                     T1CLK           equ	791	;# 
   528   000317                     TMR1CLK         equ	791	;# 
   529   000317                     PR1             equ	791	;# 
   530   000318                     TMR0L           equ	792	;# 
   531   000318                     TMR0            equ	792	;# 
   532   000319                     TMR0H           equ	793	;# 
   533   000319                     PR0             equ	793	;# 
   534   00031A                     T0CON0          equ	794	;# 
   535   00031B                     T0CON1          equ	795	;# 
   536   00031D                     T2TMR           equ	797	;# 
   537   00031D                     TMR2            equ	797	;# 
   538   00031E                     T2PR            equ	798	;# 
   539   00031E                     PR2             equ	798	;# 
   540   00031F                     T2CON           equ	799	;# 
   541   000320                     T2HLT           equ	800	;# 
   542   000321                     T2CLKCON        equ	801	;# 
   543   000321                     T2CLK           equ	801	;# 
   544   000322                     T2RST           equ	802	;# 
   545   000323                     TMR3            equ	803	;# 
   546   000323                     TMR3L           equ	803	;# 
   547   000324                     TMR3H           equ	804	;# 
   548   000325                     T3CON           equ	805	;# 
   549   000325                     TMR3CON         equ	805	;# 
   550   000326                     T3GCON          equ	806	;# 
   551   000326                     TMR3GCON        equ	806	;# 
   552   000327                     T3GATE          equ	807	;# 
   553   000327                     TMR3GATE        equ	807	;# 
   554   000328                     T3CLK           equ	808	;# 
   555   000328                     TMR3CLK         equ	808	;# 
   556   000328                     PR3             equ	808	;# 
   557   00032A                     T4TMR           equ	810	;# 
   558   00032A                     TMR4            equ	810	;# 
   559   00032B                     T4PR            equ	811	;# 
   560   00032B                     PR4             equ	811	;# 
   561   00032C                     T4CON           equ	812	;# 
   562   00032D                     T4HLT           equ	813	;# 
   563   00032E                     T4CLKCON        equ	814	;# 
   564   00032E                     T4CLK           equ	814	;# 
   565   00032F                     T4RST           equ	815	;# 
   566   000340                     CCPR1           equ	832	;# 
   567   000340                     CCPR1L          equ	832	;# 
   568   000341                     CCPR1H          equ	833	;# 
   569   000342                     CCP1CON         equ	834	;# 
   570   000343                     CCP1CAP         equ	835	;# 
   571   000344                     CCPR2           equ	836	;# 
   572   000344                     CCPR2L          equ	836	;# 
   573   000345                     CCPR2H          equ	837	;# 
   574   000346                     CCP2CON         equ	838	;# 
   575   000347                     CCP2CAP         equ	839	;# 
   576   00034C                     CCPTMRS0        equ	844	;# 
   577   00034E                     CRCDATA         equ	846	;# 
   578   00034E                     CRCDATAL        equ	846	;# 
   579   00034F                     CRCDATAH        equ	847	;# 
   580   000350                     CRCDATAU        equ	848	;# 
   581   000351                     CRCDATAT        equ	849	;# 
   582   000352                     CRCOUT          equ	850	;# 
   583   000352                     CRCSHFT         equ	850	;# 
   584   000352                     CRCXOR          equ	850	;# 
   585   000352                     CRCOUTL         equ	850	;# 
   586   000352                     CRCSHFTL        equ	850	;# 
   587   000352                     CRCSHIFTL       equ	850	;# 
   588   000352                     CRCXORL         equ	850	;# 
   589   000353                     CRCOUTH         equ	851	;# 
   590   000353                     CRCSHFTH        equ	851	;# 
   591   000353                     CRCSHIFTH       equ	851	;# 
   592   000353                     CRCXORH         equ	851	;# 
   593   000354                     CRCOUTU         equ	852	;# 
   594   000354                     CRCSHFTU        equ	852	;# 
   595   000354                     CRCSHIFTU       equ	852	;# 
   596   000354                     CRCXORU         equ	852	;# 
   597   000355                     CRCOUTT         equ	853	;# 
   598   000355                     CRCSHFTT        equ	853	;# 
   599   000355                     CRCSHIFTT       equ	853	;# 
   600   000355                     CRCXORT         equ	853	;# 
   601   000356                     CRCCON0         equ	854	;# 
   602   000357                     CRCCON1         equ	855	;# 
   603   000358                     CRCCON2         equ	856	;# 
   604   00035A                     SCANLADR        equ	858	;# 
   605   00035A                     SCANLADRL       equ	858	;# 
   606   00035B                     SCANLADRH       equ	859	;# 
   607   00035C                     SCANLADRU       equ	860	;# 
   608   00035D                     SCANHADR        equ	861	;# 
   609   00035D                     SCANHADRL       equ	861	;# 
   610   00035E                     SCANHADRH       equ	862	;# 
   611   00035F                     SCANHADRU       equ	863	;# 
   612   000360                     SCANCON0        equ	864	;# 
   613   000361                     SCANTRIG        equ	865	;# 
   614   000373                     STATUS_CSHAD    equ	883	;# 
   615   000374                     WREG_CSHAD      equ	884	;# 
   616   000375                     BSR_CSHAD       equ	885	;# 
   617   000376                     SHADCON         equ	886	;# 
   618   000377                     STATUS_SHAD     equ	887	;# 
   619   000378                     WREG_SHAD       equ	888	;# 
   620   000379                     BSR_SHAD        equ	889	;# 
   621   00037A                     PCLATH_SHAD     equ	890	;# 
   622   00037B                     PCLATU_SHAD     equ	891	;# 
   623   00037C                     FSR0SH          equ	892	;# 
   624   00037C                     FSR0L_SHAD      equ	892	;# 
   625   00037D                     FSR0H_SHAD      equ	893	;# 
   626   00037E                     FSR1SH          equ	894	;# 
   627   00037E                     FSR1L_SHAD      equ	894	;# 
   628   00037F                     FSR1H_SHAD      equ	895	;# 
   629   000380                     FSR2SH          equ	896	;# 
   630   000380                     FSR2L_SHAD      equ	896	;# 
   631   000381                     FSR2H_SHAD      equ	897	;# 
   632   000382                     PRODSH          equ	898	;# 
   633   000382                     PRODL_SHAD      equ	898	;# 
   634   000383                     PRODH_SHAD      equ	899	;# 
   635   0003A0                     TU16ACON0       equ	928	;# 
   636   0003A1                     TU16ACON1       equ	929	;# 
   637   0003A2                     TU16AHLT        equ	930	;# 
   638   0003A3                     TU16APS         equ	931	;# 
   639   0003A4                     TU16ATMR        equ	932	;# 
   640   0003A4                     TU16ACR         equ	932	;# 
   641   0003A4                     TU16ATMRL       equ	932	;# 
   642   0003A4                     TU16ACRL        equ	932	;# 
   643   0003A5                     TU16ATMRH       equ	933	;# 
   644   0003A5                     TU16ACRH        equ	933	;# 
   645   0003A6                     TU16APR         equ	934	;# 
   646   0003A6                     TU16APRL        equ	934	;# 
   647   0003A7                     TU16APRH        equ	935	;# 
   648   0003A8                     TU16ACLK        equ	936	;# 
   649   0003A9                     TU16AERS        equ	937	;# 
   650   0003AA                     TU16BCON0       equ	938	;# 
   651   0003AB                     TU16BCON1       equ	939	;# 
   652   0003AC                     TU16BHLT        equ	940	;# 
   653   0003AD                     TU16BPS         equ	941	;# 
   654   0003AE                     TU16BTMR        equ	942	;# 
   655   0003AE                     TU16BCR         equ	942	;# 
   656   0003AE                     TU16BTMRL       equ	942	;# 
   657   0003AE                     TU16BCRL        equ	942	;# 
   658   0003AF                     TU16BTMRH       equ	943	;# 
   659   0003AF                     TU16BCRH        equ	943	;# 
   660   0003B0                     TU16BPR         equ	944	;# 
   661   0003B0                     TU16BPRL        equ	944	;# 
   662   0003B1                     TU16BPRH        equ	945	;# 
   663   0003B2                     TU16BCLK        equ	946	;# 
   664   0003B3                     TU16BERS        equ	947	;# 
   665   0003B4                     TUCHAIN         equ	948	;# 
   666   0003BC                     CWG1CLK         equ	956	;# 
   667   0003BC                     CWG1CLKCON      equ	956	;# 
   668   0003BD                     CWG1ISM         equ	957	;# 
   669   0003BD                     CWG1DAT         equ	957	;# 
   670   0003BE                     CWG1DBR         equ	958	;# 
   671   0003BF                     CWG1DBF         equ	959	;# 
   672   0003C0                     CWG1CON0        equ	960	;# 
   673   0003C1                     CWG1CON1        equ	961	;# 
   674   0003C2                     CWG1AS0         equ	962	;# 
   675   0003C3                     CWG1AS1         equ	963	;# 
   676   0003C4                     CWG1STR         equ	964	;# 
   677   0003D7                     FVRCON          equ	983	;# 
   678   0003D8                     ADCPCON         equ	984	;# 
   679   0003D8                     ADCP            equ	984	;# 
   680   0003D9                     ADLTH           equ	985	;# 
   681   0003D9                     ADLTHL          equ	985	;# 
   682   0003DA                     ADLTHH          equ	986	;# 
   683   0003DB                     ADUTH           equ	987	;# 
   684   0003DB                     ADUTHL          equ	987	;# 
   685   0003DC                     ADUTHH          equ	988	;# 
   686   0003DD                     ADERR           equ	989	;# 
   687   0003DD                     ADERRL          equ	989	;# 
   688   0003DE                     ADERRH          equ	990	;# 
   689   0003DF                     ADSTPT          equ	991	;# 
   690   0003DF                     ADSTPTL         equ	991	;# 
   691   0003E0                     ADSTPTH         equ	992	;# 
   692   0003E1                     ADFLTR          equ	993	;# 
   693   0003E1                     ADFLTRL         equ	993	;# 
   694   0003E2                     ADFLTRH         equ	994	;# 
   695   0003E3                     ADACC           equ	995	;# 
   696   0003E3                     ADACCL          equ	995	;# 
   697   0003E4                     ADACCH          equ	996	;# 
   698   0003E5                     ADACCU          equ	997	;# 
   699   0003E6                     ADCNT           equ	998	;# 
   700   0003E7                     ADRPT           equ	999	;# 
   701   0003E8                     ADPREV          equ	1000	;# 
   702   0003E8                     ADPREVL         equ	1000	;# 
   703   0003E9                     ADPREVH         equ	1001	;# 
   704   0003EA                     ADRES           equ	1002	;# 
   705   0003EA                     ADRESL          equ	1002	;# 
   706   0003EB                     ADRESH          equ	1003	;# 
   707   0003EC                     ADPCH           equ	1004	;# 
   708   0003ED                     ADNCH           equ	1005	;# 
   709   0003EE                     ADACQ           equ	1006	;# 
   710   0003EE                     ADACQL          equ	1006	;# 
   711   0003EF                     ADACQH          equ	1007	;# 
   712   0003F0                     ADCAP           equ	1008	;# 
   713   0003F1                     ADPRE           equ	1009	;# 
   714   0003F1                     ADPREL          equ	1009	;# 
   715   0003F2                     ADPREH          equ	1010	;# 
   716   0003F3                     ADCON0          equ	1011	;# 
   717   0003F4                     ADCON1          equ	1012	;# 
   718   0003F5                     ADCON2          equ	1013	;# 
   719   0003F6                     ADCON3          equ	1014	;# 
   720   0003F7                     ADSTAT          equ	1015	;# 
   721   0003F8                     ADREF           equ	1016	;# 
   722   0003F9                     ADACT           equ	1017	;# 
   723   0003FA                     ADCLK           equ	1018	;# 
   724   0003FB                     ADCTX           equ	1019	;# 
   725   0003FC                     ADCSEL1         equ	1020	;# 
   726   0003FD                     ADCSEL2         equ	1021	;# 
   727   0003FE                     ADCSEL3         equ	1022	;# 
   728   0003FF                     ADCSEL4         equ	1023	;# 
   729   000400                     ANSELA          equ	1024	;# 
   730   000401                     WPUA            equ	1025	;# 
   731   000402                     ODCONA          equ	1026	;# 
   732   000403                     SLRCONA         equ	1027	;# 
   733   000404                     INLVLA          equ	1028	;# 
   734   000405                     IOCAP           equ	1029	;# 
   735   000406                     IOCAN           equ	1030	;# 
   736   000407                     IOCAF           equ	1031	;# 
   737   000408                     ANSELB          equ	1032	;# 
   738   000409                     WPUB            equ	1033	;# 
   739   00040A                     ODCONB          equ	1034	;# 
   740   00040B                     SLRCONB         equ	1035	;# 
   741   00040C                     INLVLB          equ	1036	;# 
   742   00040D                     IOCBP           equ	1037	;# 
   743   00040E                     IOCBN           equ	1038	;# 
   744   00040F                     IOCBF           equ	1039	;# 
   745   000410                     ANSELC          equ	1040	;# 
   746   000411                     WPUC            equ	1041	;# 
   747   000412                     ODCONC          equ	1042	;# 
   748   000413                     SLRCONC         equ	1043	;# 
   749   000414                     INLVLC          equ	1044	;# 
   750   000415                     IOCCP           equ	1045	;# 
   751   000416                     IOCCN           equ	1046	;# 
   752   000417                     IOCCF           equ	1047	;# 
   753   000418                     ANSELD          equ	1048	;# 
   754   000419                     WPUD            equ	1049	;# 
   755   00041A                     ODCOND          equ	1050	;# 
   756   00041B                     SLRCOND         equ	1051	;# 
   757   00041C                     INLVLD          equ	1052	;# 
   758   000420                     ANSELE          equ	1056	;# 
   759   000421                     WPUE            equ	1057	;# 
   760   000422                     ODCONE          equ	1058	;# 
   761   000423                     SLRCONE         equ	1059	;# 
   762   000424                     INLVLE          equ	1060	;# 
   763   000425                     IOCEP           equ	1061	;# 
   764   000426                     IOCEN           equ	1062	;# 
   765   000427                     IOCEF           equ	1063	;# 
   766   000428                     ANSELF          equ	1064	;# 
   767   000429                     WPUF            equ	1065	;# 
   768   00042A                     ODCONF          equ	1066	;# 
   769   00042B                     SLRCONF         equ	1067	;# 
   770   00042C                     INLVLF          equ	1068	;# 
   771   00043D                     IOCWP           equ	1085	;# 
   772   00043E                     IOCWN           equ	1086	;# 
   773   00043F                     IOCWF           equ	1087	;# 
   774   000440                     NCO1ACC         equ	1088	;# 
   775   000440                     NCO1ACCL        equ	1088	;# 
   776   000441                     NCO1ACCH        equ	1089	;# 
   777   000442                     NCO1ACCU        equ	1090	;# 
   778   000443                     NCO1INC         equ	1091	;# 
   779   000443                     NCO1INCL        equ	1091	;# 
   780   000444                     NCO1INCH        equ	1092	;# 
   781   000445                     NCO1INCU        equ	1093	;# 
   782   000446                     NCO1CON         equ	1094	;# 
   783   000447                     NCO1CLK         equ	1095	;# 
   784   000458                     FSCMCON         equ	1112	;# 
   785   000459                     IVTLOCK         equ	1113	;# 
   786   00045A                     IVTAD           equ	1114	;# 
   787   00045A                     IVTADL          equ	1114	;# 
   788   00045B                     IVTADH          equ	1115	;# 
   789   00045C                     IVTADU          equ	1116	;# 
   790   00045D                     IVTBASE         equ	1117	;# 
   791   00045D                     IVTBASEL        equ	1117	;# 
   792   00045E                     IVTBASEH        equ	1118	;# 
   793   00045F                     IVTBASEU        equ	1119	;# 
   794   000460                     PWM1ERS         equ	1120	;# 
   795   000461                     PWM1CLK         equ	1121	;# 
   796   000462                     PWM1LDS         equ	1122	;# 
   797   000463                     PWM1PR          equ	1123	;# 
   798   000463                     PWM1PRL         equ	1123	;# 
   799   000464                     PWM1PRH         equ	1124	;# 
   800   000465                     PWM1CPRE        equ	1125	;# 
   801   000466                     PWM1PIPOS       equ	1126	;# 
   802   000467                     PWM1GIR         equ	1127	;# 
   803   000468                     PWM1GIE         equ	1128	;# 
   804   000469                     PWM1CON         equ	1129	;# 
   805   00046A                     PWM1S1CFG       equ	1130	;# 
   806   00046B                     PWM1S1P1        equ	1131	;# 
   807   00046B                     PWM1S1P1L       equ	1131	;# 
   808   00046C                     PWM1S1P1H       equ	1132	;# 
   809   00046D                     PWM1S1P2        equ	1133	;# 
   810   00046D                     PWM1S1P2L       equ	1133	;# 
   811   00046E                     PWM1S1P2H       equ	1134	;# 
   812   00046F                     PWM2ERS         equ	1135	;# 
   813   000470                     PWM2CLK         equ	1136	;# 
   814   000471                     PWM2LDS         equ	1137	;# 
   815   000472                     PWM2PR          equ	1138	;# 
   816   000472                     PWM2PRL         equ	1138	;# 
   817   000473                     PWM2PRH         equ	1139	;# 
   818   000474                     PWM2CPRE        equ	1140	;# 
   819   000475                     PWM2PIPOS       equ	1141	;# 
   820   000476                     PWM2GIR         equ	1142	;# 
   821   000477                     PWM2GIE         equ	1143	;# 
   822   000478                     PWM2CON         equ	1144	;# 
   823   000479                     PWM2S1CFG       equ	1145	;# 
   824   00047A                     PWM2S1P1        equ	1146	;# 
   825   00047A                     PWM2S1P1L       equ	1146	;# 
   826   00047B                     PWM2S1P1H       equ	1147	;# 
   827   00047C                     PWM2S1P2        equ	1148	;# 
   828   00047C                     PWM2S1P2L       equ	1148	;# 
   829   00047D                     PWM2S1P2H       equ	1149	;# 
   830   00047E                     PWM3ERS         equ	1150	;# 
   831   00047F                     PWM3CLK         equ	1151	;# 
   832   000480                     PWM3LDS         equ	1152	;# 
   833   000481                     PWM3PR          equ	1153	;# 
   834   000481                     PWM3PRL         equ	1153	;# 
   835   000482                     PWM3PRH         equ	1154	;# 
   836   000483                     PWM3CPRE        equ	1155	;# 
   837   000484                     PWM3PIPOS       equ	1156	;# 
   838   000485                     PWM3GIR         equ	1157	;# 
   839   000486                     PWM3GIE         equ	1158	;# 
   840   000487                     PWM3CON         equ	1159	;# 
   841   000488                     PWM3S1CFG       equ	1160	;# 
   842   000489                     PWM3S1P1        equ	1161	;# 
   843   000489                     PWM3S1P1L       equ	1161	;# 
   844   00048A                     PWM3S1P1H       equ	1162	;# 
   845   00048B                     PWM3S1P2        equ	1163	;# 
   846   00048B                     PWM3S1P2L       equ	1163	;# 
   847   00048C                     PWM3S1P2H       equ	1164	;# 
   848   000499                     PWMLOAD         equ	1177	;# 
   849   00049A                     PWMEN           equ	1178	;# 
   850   00049C                     IPR0            equ	1180	;# 
   851   00049D                     IPR1            equ	1181	;# 
   852   00049E                     IPR2            equ	1182	;# 
   853   00049F                     IPR3            equ	1183	;# 
   854   0004A0                     IPR4            equ	1184	;# 
   855   0004A1                     IPR5            equ	1185	;# 
   856   0004A2                     IPR6            equ	1186	;# 
   857   0004A3                     IPR7            equ	1187	;# 
   858   0004A4                     IPR8            equ	1188	;# 
   859   0004A5                     IPR9            equ	1189	;# 
   860   0004A6                     IPR10           equ	1190	;# 
   861   0004A7                     PIE0            equ	1191	;# 
   862   0004A8                     PIE1            equ	1192	;# 
   863   0004A9                     PIE2            equ	1193	;# 
   864   0004AA                     PIE3            equ	1194	;# 
   865   0004AB                     PIE4            equ	1195	;# 
   866   0004AC                     PIE5            equ	1196	;# 
   867   0004AD                     PIE6            equ	1197	;# 
   868   0004AE                     PIE7            equ	1198	;# 
   869   0004AF                     PIE8            equ	1199	;# 
   870   0004B0                     PIE9            equ	1200	;# 
   871   0004B1                     PIE10           equ	1201	;# 
   872   0004B2                     PIR0            equ	1202	;# 
   873   0004B3                     PIR1            equ	1203	;# 
   874   0004B4                     PIR2            equ	1204	;# 
   875   0004B5                     PIR3            equ	1205	;# 
   876   0004B6                     PIR4            equ	1206	;# 
   877   0004B7                     PIR5            equ	1207	;# 
   878   0004B8                     PIR6            equ	1208	;# 
   879   0004B9                     PIR7            equ	1209	;# 
   880   0004BA                     PIR8            equ	1210	;# 
   881   0004BB                     PIR9            equ	1211	;# 
   882   0004BC                     PIR10           equ	1212	;# 
   883   0004D6                     INTCON0         equ	1238	;# 
   884   0004D7                     INTCON1         equ	1239	;# 
   885   0004D8                     STATUS          equ	1240	;# 
   886   0004D9                     FSR2            equ	1241	;# 
   887   0004D9                     FSR2L           equ	1241	;# 
   888   0004DA                     FSR2H           equ	1242	;# 
   889   0004DB                     PLUSW2          equ	1243	;# 
   890   0004DC                     PREINC2         equ	1244	;# 
   891   0004DD                     POSTDEC2        equ	1245	;# 
   892   0004DE                     POSTINC2        equ	1246	;# 
   893   0004DF                     INDF2           equ	1247	;# 
   894   0004E0                     BSR             equ	1248	;# 
   895   0004E1                     FSR1            equ	1249	;# 
   896   0004E1                     FSR1L           equ	1249	;# 
   897   0004E2                     FSR1H           equ	1250	;# 
   898   0004E3                     PLUSW1          equ	1251	;# 
   899   0004E4                     PREINC1         equ	1252	;# 
   900   0004E5                     POSTDEC1        equ	1253	;# 
   901   0004E6                     POSTINC1        equ	1254	;# 
   902   0004E7                     INDF1           equ	1255	;# 
   903   0004E8                     WREG            equ	1256	;# 
   904   0004E9                     FSR0            equ	1257	;# 
   905   0004E9                     FSR0L           equ	1257	;# 
   906   0004EA                     FSR0H           equ	1258	;# 
   907   0004EB                     PLUSW0          equ	1259	;# 
   908   0004EC                     PREINC0         equ	1260	;# 
   909   0004ED                     POSTDEC0        equ	1261	;# 
   910   0004EE                     POSTINC0        equ	1262	;# 
   911   0004EF                     INDF0           equ	1263	;# 
   912   0004F0                     PCON0           equ	1264	;# 
   913   0004F1                     PCON1           equ	1265	;# 
   914   0004F2                     CPUDOZE         equ	1266	;# 
   915   0004F3                     PROD            equ	1267	;# 
   916   0004F3                     PRODL           equ	1267	;# 
   917   0004F4                     PRODH           equ	1268	;# 
   918   0004F5                     TABLAT          equ	1269	;# 
   919   0004F6                     TBLPTR          equ	1270	;# 
   920   0004F6                     TBLPTRL         equ	1270	;# 
   921   0004F7                     TBLPTRH         equ	1271	;# 
   922   0004F8                     TBLPTRU         equ	1272	;# 
   923   0004F9                     PCLAT           equ	1273	;# 
   924   0004F9                     PCL             equ	1273	;# 
   925   0004FA                     PCLATH          equ	1274	;# 
   926   0004FB                     PCLATU          equ	1275	;# 
   927   0004FC                     STKPTR          equ	1276	;# 
   928   0004FD                     TOS             equ	1277	;# 
   929   0004FD                     TOSL            equ	1277	;# 
   930   0004FE                     TOSH            equ	1278	;# 
   931   0004FF                     TOSU            equ	1279	;# 
   932   000039                     CLKRCON         equ	57	;# 
   933   00003A                     CLKRCLK         equ	58	;# 
   934   000040                     NVMCON0         equ	64	;# 
   935   000041                     NVMCON1         equ	65	;# 
   936   000042                     NVMLOCK         equ	66	;# 
   937   000043                     NVMADR          equ	67	;# 
   938   000043                     NVMADRL         equ	67	;# 
   939   000044                     NVMADRH         equ	68	;# 
   940   000045                     NVMADRU         equ	69	;# 
   941   000046                     NVMDAT          equ	70	;# 
   942   000046                     NVMDATL         equ	70	;# 
   943   000047                     NVMDATH         equ	71	;# 
   944   000048                     VREGCON         equ	72	;# 
   945   000049                     BORCON          equ	73	;# 
   946   00004A                     HLVDCON0        equ	74	;# 
   947   00004B                     HLVDCON1        equ	75	;# 
   948   00004C                     ZCDCON          equ	76	;# 
   949   000062                     PMD0            equ	98	;# 
   950   000063                     PMD1            equ	99	;# 
   951   000064                     PMD2            equ	100	;# 
   952   000065                     PMD3            equ	101	;# 
   953   000066                     PMD4            equ	102	;# 
   954   000067                     PMD5            equ	103	;# 
   955   000068                     PMD6            equ	104	;# 
   956   00006F                     CMOUT           equ	111	;# 
   957   000070                     CM1CON0         equ	112	;# 
   958   000071                     CM1CON1         equ	113	;# 
   959   000072                     CM1NCH          equ	114	;# 
   960   000073                     CM1PCH          equ	115	;# 
   961   000074                     CM2CON0         equ	116	;# 
   962   000075                     CM2CON1         equ	117	;# 
   963   000076                     CM2NCH          equ	118	;# 
   964   000077                     CM2PCH          equ	119	;# 
   965   000078                     WDTCON0         equ	120	;# 
   966   000079                     WDTCON1         equ	121	;# 
   967   00007A                     WDTPS           equ	122	;# 
   968   00007A                     WDTPSL          equ	122	;# 
   969   00007B                     WDTPSH          equ	123	;# 
   970   00007C                     WDTTMR          equ	124	;# 
   971   00007D                     DAC1DAT         equ	125	;# 
   972   00007D                     DAC1DATL        equ	125	;# 
   973   00007E                     DAC1DATH        equ	126	;# 
   974   00007F                     DAC1CON         equ	127	;# 
   975   000080                     SPI1RXB         equ	128	;# 
   976   000081                     SPI1TXB         equ	129	;# 
   977   000082                     SPI1TCNT        equ	130	;# 
   978   000082                     SPI1TCNTL       equ	130	;# 
   979   000083                     SPI1TCNTH       equ	131	;# 
   980   000084                     SPI1CON0        equ	132	;# 
   981   000085                     SPI1CON1        equ	133	;# 
   982   000086                     SPI1CON2        equ	134	;# 
   983   000087                     SPI1STATUS      equ	135	;# 
   984   000088                     SPI1TWIDTH      equ	136	;# 
   985   000089                     SPI1BAUD        equ	137	;# 
   986   00008A                     SPI1INTF        equ	138	;# 
   987   00008B                     SPI1INTE        equ	139	;# 
   988   00008C                     SPI1CLK         equ	140	;# 
   989   0000AC                     ACTCON          equ	172	;# 
   990   0000AD                     OSCCON1         equ	173	;# 
   991   0000AE                     OSCCON2         equ	174	;# 
   992   0000AF                     OSCCON3         equ	175	;# 
   993   0000B0                     OSCTUNE         equ	176	;# 
   994   0000B1                     OSCFRQ          equ	177	;# 
   995   0000B1                     OSCFREQ         equ	177	;# 
   996   0000B2                     OSCSTAT         equ	178	;# 
   997   0000B2                     OSCSTAT1        equ	178	;# 
   998   0000B3                     OSCEN           equ	179	;# 
   999   0000B4                     PRLOCK          equ	180	;# 
  1000   0000B5                     SCANPR          equ	181	;# 
  1001   0000B6                     DMA1PR          equ	182	;# 
  1002   0000B7                     DMA2PR          equ	183	;# 
  1003   0000B8                     DMA3PR          equ	184	;# 
  1004   0000B9                     DMA4PR          equ	185	;# 
  1005   0000BE                     MAINPR          equ	190	;# 
  1006   0000BF                     ISRPR           equ	191	;# 
  1007   0000C0                     DAC2DAT         equ	192	;# 
  1008   0000C0                     DAC2DATL        equ	192	;# 
  1009   0000C2                     DAC2CON         equ	194	;# 
  1010   0000C3                     DAC3DAT         equ	195	;# 
  1011   0000C3                     DAC3DATL        equ	195	;# 
  1012   0000C5                     DAC3CON         equ	197	;# 
  1013   0000D4                     CLCDATA         equ	212	;# 
  1014   0000D5                     CLCSELECT       equ	213	;# 
  1015   0000D6                     CLCnCON         equ	214	;# 
  1016   0000D7                     CLCnPOL         equ	215	;# 
  1017   0000D8                     CLCnSEL0        equ	216	;# 
  1018   0000D9                     CLCnSEL1        equ	217	;# 
  1019   0000DA                     CLCnSEL2        equ	218	;# 
  1020   0000DB                     CLCnSEL3        equ	219	;# 
  1021   0000DC                     CLCnGLS0        equ	220	;# 
  1022   0000DD                     CLCnGLS1        equ	221	;# 
  1023   0000DE                     CLCnGLS2        equ	222	;# 
  1024   0000DF                     CLCnGLS3        equ	223	;# 
  1025   0000E8                     DMASELECT       equ	232	;# 
  1026   0000E9                     DMAnBUF         equ	233	;# 
  1027   0000EA                     DMAnDCNT        equ	234	;# 
  1028   0000EA                     DMAnDCNTL       equ	234	;# 
  1029   0000EB                     DMAnDCNTH       equ	235	;# 
  1030   0000EC                     DMAnDPTR        equ	236	;# 
  1031   0000EC                     DMAnDPTRL       equ	236	;# 
  1032   0000ED                     DMAnDPTRH       equ	237	;# 
  1033   0000EE                     DMAnDSZ         equ	238	;# 
  1034   0000EE                     DMAnDSZL        equ	238	;# 
  1035   0000EF                     DMAnDSZH        equ	239	;# 
  1036   0000F0                     DMAnDSA         equ	240	;# 
  1037   0000F0                     DMAnDSAL        equ	240	;# 
  1038   0000F1                     DMAnDSAH        equ	241	;# 
  1039   0000F2                     DMAnSCNT        equ	242	;# 
  1040   0000F2                     DMAnSCNTL       equ	242	;# 
  1041   0000F3                     DMAnSCNTH       equ	243	;# 
  1042   0000F4                     DMAnSPTR        equ	244	;# 
  1043   0000F4                     DMAnSPTRL       equ	244	;# 
  1044   0000F5                     DMAnSPTRH       equ	245	;# 
  1045   0000F6                     DMAnSPTRU       equ	246	;# 
  1046   0000F7                     DMAnSSZ         equ	247	;# 
  1047   0000F7                     DMAnSSZL        equ	247	;# 
  1048   0000F8                     DMAnSSZH        equ	248	;# 
  1049   0000F9                     DMAnSSA         equ	249	;# 
  1050   0000F9                     DMAnSSAL        equ	249	;# 
  1051   0000FA                     DMAnSSAH        equ	250	;# 
  1052   0000FB                     DMAnSSAU        equ	251	;# 
  1053   0000FC                     DMAnCON0        equ	252	;# 
  1054   0000FD                     DMAnCON1        equ	253	;# 
  1055   0000FE                     DMAnAIRQ        equ	254	;# 
  1056   0000FF                     DMAnSIRQ        equ	255	;# 
  1057   000100                     PORTW           equ	256	;# 
  1058   000101                     LATW            equ	257	;# 
  1059   000102                     PORTWIN0        equ	258	;# 
  1060   000103                     PORTWIN1        equ	259	;# 
  1061   000104                     PORTWIN2        equ	260	;# 
  1062   000105                     PORTWIN3        equ	261	;# 
  1063   000106                     PORTWIN4        equ	262	;# 
  1064   000107                     PORTWIN5        equ	263	;# 
  1065   000108                     PORTWIN6        equ	264	;# 
  1066   000109                     PORTWIN7        equ	265	;# 
  1067   00010A                     PORTWCLK        equ	266	;# 
  1068   00010B                     PORTWDF         equ	267	;# 
  1069   00010C                     PORTWCON        equ	268	;# 
  1070   000110                     ADCGA           equ	272	;# 
  1071   000111                     ADCGB           equ	273	;# 
  1072   000112                     ADCGC           equ	274	;# 
  1073   000113                     ADCGD           equ	275	;# 
  1074   000114                     ADCGE           equ	276	;# 
  1075   000115                     ADCGF           equ	277	;# 
  1076   00011F                     OPA1CON0        equ	287	;# 
  1077   000120                     OPA1CON1        equ	288	;# 
  1078   000121                     OPA1CON2        equ	289	;# 
  1079   000122                     OPA1CON3        equ	290	;# 
  1080   000123                     OPA1CON4        equ	291	;# 
  1081   000124                     OPA1HWC         equ	292	;# 
  1082   000125                     OPA1OFFSET      equ	293	;# 
  1083   000126                     OPA1ORS         equ	294	;# 
  1084   000127                     OPA2CON0        equ	295	;# 
  1085   000128                     OPA2CON1        equ	296	;# 
  1086   000129                     OPA2CON2        equ	297	;# 
  1087   00012A                     OPA2CON3        equ	298	;# 
  1088   00012B                     OPA2CON4        equ	299	;# 
  1089   00012C                     OPA2HWC         equ	300	;# 
  1090   00012D                     OPA2OFFSET      equ	301	;# 
  1091   00012E                     OPA2ORS         equ	302	;# 
  1092   000140                     LATA            equ	320	;# 
  1093   000141                     LATB            equ	321	;# 
  1094   000142                     LATC            equ	322	;# 
  1095   000143                     LATD            equ	323	;# 
  1096   000144                     LATE            equ	324	;# 
  1097   000145                     LATF            equ	325	;# 
  1098   000148                     TRISA           equ	328	;# 
  1099   000149                     TRISB           equ	329	;# 
  1100   00014A                     TRISC           equ	330	;# 
  1101   00014B                     TRISD           equ	331	;# 
  1102   00014C                     TRISE           equ	332	;# 
  1103   00014D                     TRISF           equ	333	;# 
  1104   000150                     PORTA           equ	336	;# 
  1105   000151                     PORTB           equ	337	;# 
  1106   000152                     PORTC           equ	338	;# 
  1107   000153                     PORTD           equ	339	;# 
  1108   000154                     PORTE           equ	340	;# 
  1109   000155                     PORTF           equ	341	;# 
  1110   0001C0                     APMCON          equ	448	;# 
  1111   0001C1                     APMPRE          equ	449	;# 
  1112   0001C1                     APMPREL         equ	449	;# 
  1113   0001C2                     APMPREH         equ	450	;# 
  1114   0001C3                     APMPER          equ	451	;# 
  1115   0001C3                     APMPERL         equ	451	;# 
  1116   0001C4                     APMPERH         equ	452	;# 
  1117   0001C5                     APMSTART1       equ	453	;# 
  1118   0001C5                     APMSTART1L      equ	453	;# 
  1119   0001C6                     APMSTART1H      equ	454	;# 
  1120   0001C7                     APMPERS1        equ	455	;# 
  1121   0001C7                     APMPERS1L       equ	455	;# 
  1122   0001C8                     APMPERS1H       equ	456	;# 
  1123   0001C9                     APMSTART2       equ	457	;# 
  1124   0001C9                     APMSTART2L      equ	457	;# 
  1125   0001CA                     APMSTART2H      equ	458	;# 
  1126   0001CB                     APMSTART2U      equ	459	;# 
  1127   0001CC                     APMPERS2        equ	460	;# 
  1128   0001CC                     APMPERS2L       equ	460	;# 
  1129   0001CD                     APMPERS2H       equ	461	;# 
  1130   0001CE                     APMEND1         equ	462	;# 
  1131   0001CE                     APMEND1L        equ	462	;# 
  1132   0001CF                     APMEND1H        equ	463	;# 
  1133   0001D0                     APMEND1U        equ	464	;# 
  1134   0001D1                     APMPERE1        equ	465	;# 
  1135   0001D1                     APMPERE1L       equ	465	;# 
  1136   0001D2                     APMPERE1H       equ	466	;# 
  1137   0001D3                     APMEND2         equ	467	;# 
  1138   0001D3                     APMEND2L        equ	467	;# 
  1139   0001D4                     APMEND2H        equ	468	;# 
  1140   0001D5                     APMEND2U        equ	469	;# 
  1141   0001D6                     APMPERE2        equ	470	;# 
  1142   0001D6                     APMPERE2L       equ	470	;# 
  1143   0001D7                     APMPERE2H       equ	471	;# 
  1144   0001D8                     APMCLK          equ	472	;# 
  1145   0001D9                     APMSTATUS       equ	473	;# 
  1146   0001D9                     APMSTATUSL      equ	473	;# 
  1147   0001DA                     APMSTATUSH      equ	474	;# 
  1148   000200                     PPSLOCK         equ	512	;# 
  1149   000201                     RA0PPS          equ	513	;# 
  1150   000202                     RA1PPS          equ	514	;# 
  1151   000203                     RA2PPS          equ	515	;# 
  1152   000204                     RA3PPS          equ	516	;# 
  1153   000205                     RA4PPS          equ	517	;# 
  1154   000206                     RA5PPS          equ	518	;# 
  1155   000207                     RA6PPS          equ	519	;# 
  1156   000208                     RA7PPS          equ	520	;# 
  1157   000209                     RB0PPS          equ	521	;# 
  1158   00020A                     RB1PPS          equ	522	;# 
  1159   00020B                     RB2PPS          equ	523	;# 
  1160   00020C                     RB3PPS          equ	524	;# 
  1161   00020D                     RB4PPS          equ	525	;# 
  1162   00020E                     RB5PPS          equ	526	;# 
  1163   00020F                     RB6PPS          equ	527	;# 
  1164   000210                     RB7PPS          equ	528	;# 
  1165   000211                     RC0PPS          equ	529	;# 
  1166   000212                     RC1PPS          equ	530	;# 
  1167   000213                     RC2PPS          equ	531	;# 
  1168   000214                     RC3PPS          equ	532	;# 
  1169   000215                     RC4PPS          equ	533	;# 
  1170   000216                     RC5PPS          equ	534	;# 
  1171   000217                     RC6PPS          equ	535	;# 
  1172   000218                     RC7PPS          equ	536	;# 
  1173   000219                     RD0PPS          equ	537	;# 
  1174   00021A                     RD1PPS          equ	538	;# 
  1175   00021B                     RD2PPS          equ	539	;# 
  1176   00021C                     RD3PPS          equ	540	;# 
  1177   00021D                     RD4PPS          equ	541	;# 
  1178   00021E                     RD5PPS          equ	542	;# 
  1179   00021F                     RD6PPS          equ	543	;# 
  1180   000220                     RD7PPS          equ	544	;# 
  1181   000221                     RE0PPS          equ	545	;# 
  1182   000222                     RE1PPS          equ	546	;# 
  1183   000223                     RE2PPS          equ	547	;# 
  1184   000225                     RF0PPS          equ	549	;# 
  1185   000226                     RF1PPS          equ	550	;# 
  1186   000227                     RF2PPS          equ	551	;# 
  1187   000228                     RF3PPS          equ	552	;# 
  1188   000229                     RF4PPS          equ	553	;# 
  1189   00022A                     RF5PPS          equ	554	;# 
  1190   00022B                     RF6PPS          equ	555	;# 
  1191   00022C                     RF7PPS          equ	556	;# 
  1192   00023E                     INT0PPS         equ	574	;# 
  1193   00023F                     INT1PPS         equ	575	;# 
  1194   000240                     INT2PPS         equ	576	;# 
  1195   000241                     T0CKIPPS        equ	577	;# 
  1196   000242                     T1CKIPPS        equ	578	;# 
  1197   000243                     T1GPPS          equ	579	;# 
  1198   000244                     T3CKIPPS        equ	580	;# 
  1199   000245                     T3GPPS          equ	581	;# 
  1200   000248                     T2INPPS         equ	584	;# 
  1201   000249                     T4INPPS         equ	585	;# 
  1202   00024F                     CCP1PPS         equ	591	;# 
  1203   000250                     CCP2PPS         equ	592	;# 
  1204   000251                     PWM1ERSPPS      equ	593	;# 
  1205   000252                     PWM2ERSPPS      equ	594	;# 
  1206   000253                     PWM3ERSPPS      equ	595	;# 
  1207   000257                     PWMIN0PPS       equ	599	;# 
  1208   000258                     PWMIN1PPS       equ	600	;# 
  1209   00025B                     CWG1PPS         equ	603	;# 
  1210   00025B                     CWG1INPPS       equ	603	;# 
  1211   000261                     CLCIN0PPS       equ	609	;# 
  1212   000262                     CLCIN1PPS       equ	610	;# 
  1213   000263                     CLCIN2PPS       equ	611	;# 
  1214   000264                     CLCIN3PPS       equ	612	;# 
  1215   000265                     CLCIN4PPS       equ	613	;# 
  1216   000266                     CLCIN5PPS       equ	614	;# 
  1217   000267                     CLCIN6PPS       equ	615	;# 
  1218   000268                     CLCIN7PPS       equ	616	;# 
  1219   000269                     ADACTPPS        equ	617	;# 
  1220   00026A                     SPI1SCKPPS      equ	618	;# 
  1221   00026B                     SPI1SDIPPS      equ	619	;# 
  1222   00026C                     SPI1SSPPS       equ	620	;# 
  1223   000270                     I2C1SDAPPS      equ	624	;# 
  1224   000271                     I2C1SCLPPS      equ	625	;# 
  1225   000272                     U1RXPPS         equ	626	;# 
  1226   000273                     U1CTSPPS        equ	627	;# 
  1227   000274                     U2RXPPS         equ	628	;# 
  1228   000275                     U2CTSPPS        equ	629	;# 
  1229   000276                     OPA1ORPPS       equ	630	;# 
  1230   000277                     OPA2ORPPS       equ	631	;# 
  1231   000278                     TUIN0PPS        equ	632	;# 
  1232   000279                     TUIN1PPS        equ	633	;# 
  1233   00027A                     APMCLKPPS       equ	634	;# 
  1234   000285                     RB2I2C          equ	645	;# 
  1235   000286                     RB1I2C          equ	646	;# 
  1236   000287                     RC4I2C          equ	647	;# 
  1237   000288                     RC3I2C          equ	648	;# 
  1238   000289                     I2C1RXB         equ	649	;# 
  1239   00028A                     I2C1TXB         equ	650	;# 
  1240   00028B                     I2C1CNT         equ	651	;# 
  1241   00028B                     I2C1CNTL        equ	651	;# 
  1242   00028C                     I2C1CNTH        equ	652	;# 
  1243   00028D                     I2C1ADB0        equ	653	;# 
  1244   00028E                     I2C1ADB1        equ	654	;# 
  1245   00028F                     I2C1ADR0        equ	655	;# 
  1246   000290                     I2C1ADR1        equ	656	;# 
  1247   000291                     I2C1ADR2        equ	657	;# 
  1248   000292                     I2C1ADR3        equ	658	;# 
  1249   000293                     I2C1CON0        equ	659	;# 
  1250   000294                     I2C1CON1        equ	660	;# 
  1251   000295                     I2C1CON2        equ	661	;# 
  1252   000296                     I2C1CON3        equ	662	;# 
  1253   000297                     I2C1ERR         equ	663	;# 
  1254   000298                     I2C1STAT0       equ	664	;# 
  1255   000299                     I2C1STAT1       equ	665	;# 
  1256   00029A                     I2C1PIR         equ	666	;# 
  1257   00029B                     I2C1PIE         equ	667	;# 
  1258   00029C                     I2C1BTO         equ	668	;# 
  1259   00029D                     I2C1BAUD        equ	669	;# 
  1260   00029E                     I2C1CLK         equ	670	;# 
  1261   00029F                     I2C1BTOC        equ	671	;# 
  1262   0002A0                     U1RXB           equ	672	;# 
  1263   0002A0                     U1RXBL          equ	672	;# 
  1264   0002A1                     U1RXCHK         equ	673	;# 
  1265   0002A2                     U1TXB           equ	674	;# 
  1266   0002A2                     U1TXBL          equ	674	;# 
  1267   0002A3                     U1TXCHK         equ	675	;# 
  1268   0002A4                     U1P1            equ	676	;# 
  1269   0002A4                     U1P1L           equ	676	;# 
  1270   0002A5                     U1P1H           equ	677	;# 
  1271   0002A6                     U1P2            equ	678	;# 
  1272   0002A6                     U1P2L           equ	678	;# 
  1273   0002A7                     U1P2H           equ	679	;# 
  1274   0002A8                     U1P3            equ	680	;# 
  1275   0002A8                     U1P3L           equ	680	;# 
  1276   0002A9                     U1P3H           equ	681	;# 
  1277   0002AA                     U1CON0          equ	682	;# 
  1278   0002AB                     U1CON1          equ	683	;# 
  1279   0002AC                     U1CON2          equ	684	;# 
  1280   0002AD                     U1BRG           equ	685	;# 
  1281   0002AD                     U1BRGL          equ	685	;# 
  1282   0002AE                     U1BRGH          equ	686	;# 
  1283   0002AF                     U1FIFO          equ	687	;# 
  1284   0002B0                     U1UIR           equ	688	;# 
  1285   0002B1                     U1ERRIR         equ	689	;# 
  1286   0002B2                     U1ERRIE         equ	690	;# 
  1287   0002B4                     U2RXB           equ	692	;# 
  1288   0002B4                     U2RXBL          equ	692	;# 
  1289   0002B6                     U2TXB           equ	694	;# 
  1290   0002B6                     U2TXBL          equ	694	;# 
  1291   0002B8                     U2P1            equ	696	;# 
  1292   0002B8                     U2P1L           equ	696	;# 
  1293   0002BA                     U2P2            equ	698	;# 
  1294   0002BA                     U2P2L           equ	698	;# 
  1295   0002BC                     U2P3            equ	700	;# 
  1296   0002BC                     U2P3L           equ	700	;# 
  1297   0002BE                     U2CON0          equ	702	;# 
  1298   0002BF                     U2CON1          equ	703	;# 
  1299   0002C0                     U2CON2          equ	704	;# 
  1300   0002C1                     U2BRG           equ	705	;# 
  1301   0002C1                     U2BRGL          equ	705	;# 
  1302   0002C2                     U2BRGH          equ	706	;# 
  1303   0002C3                     U2FIFO          equ	707	;# 
  1304   0002C4                     U2UIR           equ	708	;# 
  1305   0002C5                     U2ERRIR         equ	709	;# 
  1306   0002C6                     U2ERRIE         equ	710	;# 
  1307   000312                     TMR1            equ	786	;# 
  1308   000312                     TMR1L           equ	786	;# 
  1309   000313                     TMR1H           equ	787	;# 
  1310   000314                     T1CON           equ	788	;# 
  1311   000314                     TMR1CON         equ	788	;# 
  1312   000315                     T1GCON          equ	789	;# 
  1313   000315                     TMR1GCON        equ	789	;# 
  1314   000316                     T1GATE          equ	790	;# 
  1315   000316                     TMR1GATE        equ	790	;# 
  1316   000317                     T1CLK           equ	791	;# 
  1317   000317                     TMR1CLK         equ	791	;# 
  1318   000317                     PR1             equ	791	;# 
  1319   000318                     TMR0L           equ	792	;# 
  1320   000318                     TMR0            equ	792	;# 
  1321   000319                     TMR0H           equ	793	;# 
  1322   000319                     PR0             equ	793	;# 
  1323   00031A                     T0CON0          equ	794	;# 
  1324   00031B                     T0CON1          equ	795	;# 
  1325   00031D                     T2TMR           equ	797	;# 
  1326   00031D                     TMR2            equ	797	;# 
  1327   00031E                     T2PR            equ	798	;# 
  1328   00031E                     PR2             equ	798	;# 
  1329   00031F                     T2CON           equ	799	;# 
  1330   000320                     T2HLT           equ	800	;# 
  1331   000321                     T2CLKCON        equ	801	;# 
  1332   000321                     T2CLK           equ	801	;# 
  1333   000322                     T2RST           equ	802	;# 
  1334   000323                     TMR3            equ	803	;# 
  1335   000323                     TMR3L           equ	803	;# 
  1336   000324                     TMR3H           equ	804	;# 
  1337   000325                     T3CON           equ	805	;# 
  1338   000325                     TMR3CON         equ	805	;# 
  1339   000326                     T3GCON          equ	806	;# 
  1340   000326                     TMR3GCON        equ	806	;# 
  1341   000327                     T3GATE          equ	807	;# 
  1342   000327                     TMR3GATE        equ	807	;# 
  1343   000328                     T3CLK           equ	808	;# 
  1344   000328                     TMR3CLK         equ	808	;# 
  1345   000328                     PR3             equ	808	;# 
  1346   00032A                     T4TMR           equ	810	;# 
  1347   00032A                     TMR4            equ	810	;# 
  1348   00032B                     T4PR            equ	811	;# 
  1349   00032B                     PR4             equ	811	;# 
  1350   00032C                     T4CON           equ	812	;# 
  1351   00032D                     T4HLT           equ	813	;# 
  1352   00032E                     T4CLKCON        equ	814	;# 
  1353   00032E                     T4CLK           equ	814	;# 
  1354   00032F                     T4RST           equ	815	;# 
  1355   000340                     CCPR1           equ	832	;# 
  1356   000340                     CCPR1L          equ	832	;# 
  1357   000341                     CCPR1H          equ	833	;# 
  1358   000342                     CCP1CON         equ	834	;# 
  1359   000343                     CCP1CAP         equ	835	;# 
  1360   000344                     CCPR2           equ	836	;# 
  1361   000344                     CCPR2L          equ	836	;# 
  1362   000345                     CCPR2H          equ	837	;# 
  1363   000346                     CCP2CON         equ	838	;# 
  1364   000347                     CCP2CAP         equ	839	;# 
  1365   00034C                     CCPTMRS0        equ	844	;# 
  1366   00034E                     CRCDATA         equ	846	;# 
  1367   00034E                     CRCDATAL        equ	846	;# 
  1368   00034F                     CRCDATAH        equ	847	;# 
  1369   000350                     CRCDATAU        equ	848	;# 
  1370   000351                     CRCDATAT        equ	849	;# 
  1371   000352                     CRCOUT          equ	850	;# 
  1372   000352                     CRCSHFT         equ	850	;# 
  1373   000352                     CRCXOR          equ	850	;# 
  1374   000352                     CRCOUTL         equ	850	;# 
  1375   000352                     CRCSHFTL        equ	850	;# 
  1376   000352                     CRCSHIFTL       equ	850	;# 
  1377   000352                     CRCXORL         equ	850	;# 
  1378   000353                     CRCOUTH         equ	851	;# 
  1379   000353                     CRCSHFTH        equ	851	;# 
  1380   000353                     CRCSHIFTH       equ	851	;# 
  1381   000353                     CRCXORH         equ	851	;# 
  1382   000354                     CRCOUTU         equ	852	;# 
  1383   000354                     CRCSHFTU        equ	852	;# 
  1384   000354                     CRCSHIFTU       equ	852	;# 
  1385   000354                     CRCXORU         equ	852	;# 
  1386   000355                     CRCOUTT         equ	853	;# 
  1387   000355                     CRCSHFTT        equ	853	;# 
  1388   000355                     CRCSHIFTT       equ	853	;# 
  1389   000355                     CRCXORT         equ	853	;# 
  1390   000356                     CRCCON0         equ	854	;# 
  1391   000357                     CRCCON1         equ	855	;# 
  1392   000358                     CRCCON2         equ	856	;# 
  1393   00035A                     SCANLADR        equ	858	;# 
  1394   00035A                     SCANLADRL       equ	858	;# 
  1395   00035B                     SCANLADRH       equ	859	;# 
  1396   00035C                     SCANLADRU       equ	860	;# 
  1397   00035D                     SCANHADR        equ	861	;# 
  1398   00035D                     SCANHADRL       equ	861	;# 
  1399   00035E                     SCANHADRH       equ	862	;# 
  1400   00035F                     SCANHADRU       equ	863	;# 
  1401   000360                     SCANCON0        equ	864	;# 
  1402   000361                     SCANTRIG        equ	865	;# 
  1403   000373                     STATUS_CSHAD    equ	883	;# 
  1404   000374                     WREG_CSHAD      equ	884	;# 
  1405   000375                     BSR_CSHAD       equ	885	;# 
  1406   000376                     SHADCON         equ	886	;# 
  1407   000377                     STATUS_SHAD     equ	887	;# 
  1408   000378                     WREG_SHAD       equ	888	;# 
  1409   000379                     BSR_SHAD        equ	889	;# 
  1410   00037A                     PCLATH_SHAD     equ	890	;# 
  1411   00037B                     PCLATU_SHAD     equ	891	;# 
  1412   00037C                     FSR0SH          equ	892	;# 
  1413   00037C                     FSR0L_SHAD      equ	892	;# 
  1414   00037D                     FSR0H_SHAD      equ	893	;# 
  1415   00037E                     FSR1SH          equ	894	;# 
  1416   00037E                     FSR1L_SHAD      equ	894	;# 
  1417   00037F                     FSR1H_SHAD      equ	895	;# 
  1418   000380                     FSR2SH          equ	896	;# 
  1419   000380                     FSR2L_SHAD      equ	896	;# 
  1420   000381                     FSR2H_SHAD      equ	897	;# 
  1421   000382                     PRODSH          equ	898	;# 
  1422   000382                     PRODL_SHAD      equ	898	;# 
  1423   000383                     PRODH_SHAD      equ	899	;# 
  1424   0003A0                     TU16ACON0       equ	928	;# 
  1425   0003A1                     TU16ACON1       equ	929	;# 
  1426   0003A2                     TU16AHLT        equ	930	;# 
  1427   0003A3                     TU16APS         equ	931	;# 
  1428   0003A4                     TU16ATMR        equ	932	;# 
  1429   0003A4                     TU16ACR         equ	932	;# 
  1430   0003A4                     TU16ATMRL       equ	932	;# 
  1431   0003A4                     TU16ACRL        equ	932	;# 
  1432   0003A5                     TU16ATMRH       equ	933	;# 
  1433   0003A5                     TU16ACRH        equ	933	;# 
  1434   0003A6                     TU16APR         equ	934	;# 
  1435   0003A6                     TU16APRL        equ	934	;# 
  1436   0003A7                     TU16APRH        equ	935	;# 
  1437   0003A8                     TU16ACLK        equ	936	;# 
  1438   0003A9                     TU16AERS        equ	937	;# 
  1439   0003AA                     TU16BCON0       equ	938	;# 
  1440   0003AB                     TU16BCON1       equ	939	;# 
  1441   0003AC                     TU16BHLT        equ	940	;# 
  1442   0003AD                     TU16BPS         equ	941	;# 
  1443   0003AE                     TU16BTMR        equ	942	;# 
  1444   0003AE                     TU16BCR         equ	942	;# 
  1445   0003AE                     TU16BTMRL       equ	942	;# 
  1446   0003AE                     TU16BCRL        equ	942	;# 
  1447   0003AF                     TU16BTMRH       equ	943	;# 
  1448   0003AF                     TU16BCRH        equ	943	;# 
  1449   0003B0                     TU16BPR         equ	944	;# 
  1450   0003B0                     TU16BPRL        equ	944	;# 
  1451   0003B1                     TU16BPRH        equ	945	;# 
  1452   0003B2                     TU16BCLK        equ	946	;# 
  1453   0003B3                     TU16BERS        equ	947	;# 
  1454   0003B4                     TUCHAIN         equ	948	;# 
  1455   0003BC                     CWG1CLK         equ	956	;# 
  1456   0003BC                     CWG1CLKCON      equ	956	;# 
  1457   0003BD                     CWG1ISM         equ	957	;# 
  1458   0003BD                     CWG1DAT         equ	957	;# 
  1459   0003BE                     CWG1DBR         equ	958	;# 
  1460   0003BF                     CWG1DBF         equ	959	;# 
  1461   0003C0                     CWG1CON0        equ	960	;# 
  1462   0003C1                     CWG1CON1        equ	961	;# 
  1463   0003C2                     CWG1AS0         equ	962	;# 
  1464   0003C3                     CWG1AS1         equ	963	;# 
  1465   0003C4                     CWG1STR         equ	964	;# 
  1466   0003D7                     FVRCON          equ	983	;# 
  1467   0003D8                     ADCPCON         equ	984	;# 
  1468   0003D8                     ADCP            equ	984	;# 
  1469   0003D9                     ADLTH           equ	985	;# 
  1470   0003D9                     ADLTHL          equ	985	;# 
  1471   0003DA                     ADLTHH          equ	986	;# 
  1472   0003DB                     ADUTH           equ	987	;# 
  1473   0003DB                     ADUTHL          equ	987	;# 
  1474   0003DC                     ADUTHH          equ	988	;# 
  1475   0003DD                     ADERR           equ	989	;# 
  1476   0003DD                     ADERRL          equ	989	;# 
  1477   0003DE                     ADERRH          equ	990	;# 
  1478   0003DF                     ADSTPT          equ	991	;# 
  1479   0003DF                     ADSTPTL         equ	991	;# 
  1480   0003E0                     ADSTPTH         equ	992	;# 
  1481   0003E1                     ADFLTR          equ	993	;# 
  1482   0003E1                     ADFLTRL         equ	993	;# 
  1483   0003E2                     ADFLTRH         equ	994	;# 
  1484   0003E3                     ADACC           equ	995	;# 
  1485   0003E3                     ADACCL          equ	995	;# 
  1486   0003E4                     ADACCH          equ	996	;# 
  1487   0003E5                     ADACCU          equ	997	;# 
  1488   0003E6                     ADCNT           equ	998	;# 
  1489   0003E7                     ADRPT           equ	999	;# 
  1490   0003E8                     ADPREV          equ	1000	;# 
  1491   0003E8                     ADPREVL         equ	1000	;# 
  1492   0003E9                     ADPREVH         equ	1001	;# 
  1493   0003EA                     ADRES           equ	1002	;# 
  1494   0003EA                     ADRESL          equ	1002	;# 
  1495   0003EB                     ADRESH          equ	1003	;# 
  1496   0003EC                     ADPCH           equ	1004	;# 
  1497   0003ED                     ADNCH           equ	1005	;# 
  1498   0003EE                     ADACQ           equ	1006	;# 
  1499   0003EE                     ADACQL          equ	1006	;# 
  1500   0003EF                     ADACQH          equ	1007	;# 
  1501   0003F0                     ADCAP           equ	1008	;# 
  1502   0003F1                     ADPRE           equ	1009	;# 
  1503   0003F1                     ADPREL          equ	1009	;# 
  1504   0003F2                     ADPREH          equ	1010	;# 
  1505   0003F3                     ADCON0          equ	1011	;# 
  1506   0003F4                     ADCON1          equ	1012	;# 
  1507   0003F5                     ADCON2          equ	1013	;# 
  1508   0003F6                     ADCON3          equ	1014	;# 
  1509   0003F7                     ADSTAT          equ	1015	;# 
  1510   0003F8                     ADREF           equ	1016	;# 
  1511   0003F9                     ADACT           equ	1017	;# 
  1512   0003FA                     ADCLK           equ	1018	;# 
  1513   0003FB                     ADCTX           equ	1019	;# 
  1514   0003FC                     ADCSEL1         equ	1020	;# 
  1515   0003FD                     ADCSEL2         equ	1021	;# 
  1516   0003FE                     ADCSEL3         equ	1022	;# 
  1517   0003FF                     ADCSEL4         equ	1023	;# 
  1518   000400                     ANSELA          equ	1024	;# 
  1519   000401                     WPUA            equ	1025	;# 
  1520   000402                     ODCONA          equ	1026	;# 
  1521   000403                     SLRCONA         equ	1027	;# 
  1522   000404                     INLVLA          equ	1028	;# 
  1523   000405                     IOCAP           equ	1029	;# 
  1524   000406                     IOCAN           equ	1030	;# 
  1525   000407                     IOCAF           equ	1031	;# 
  1526   000408                     ANSELB          equ	1032	;# 
  1527   000409                     WPUB            equ	1033	;# 
  1528   00040A                     ODCONB          equ	1034	;# 
  1529   00040B                     SLRCONB         equ	1035	;# 
  1530   00040C                     INLVLB          equ	1036	;# 
  1531   00040D                     IOCBP           equ	1037	;# 
  1532   00040E                     IOCBN           equ	1038	;# 
  1533   00040F                     IOCBF           equ	1039	;# 
  1534   000410                     ANSELC          equ	1040	;# 
  1535   000411                     WPUC            equ	1041	;# 
  1536   000412                     ODCONC          equ	1042	;# 
  1537   000413                     SLRCONC         equ	1043	;# 
  1538   000414                     INLVLC          equ	1044	;# 
  1539   000415                     IOCCP           equ	1045	;# 
  1540   000416                     IOCCN           equ	1046	;# 
  1541   000417                     IOCCF           equ	1047	;# 
  1542   000418                     ANSELD          equ	1048	;# 
  1543   000419                     WPUD            equ	1049	;# 
  1544   00041A                     ODCOND          equ	1050	;# 
  1545   00041B                     SLRCOND         equ	1051	;# 
  1546   00041C                     INLVLD          equ	1052	;# 
  1547   000420                     ANSELE          equ	1056	;# 
  1548   000421                     WPUE            equ	1057	;# 
  1549   000422                     ODCONE          equ	1058	;# 
  1550   000423                     SLRCONE         equ	1059	;# 
  1551   000424                     INLVLE          equ	1060	;# 
  1552   000425                     IOCEP           equ	1061	;# 
  1553   000426                     IOCEN           equ	1062	;# 
  1554   000427                     IOCEF           equ	1063	;# 
  1555   000428                     ANSELF          equ	1064	;# 
  1556   000429                     WPUF            equ	1065	;# 
  1557   00042A                     ODCONF          equ	1066	;# 
  1558   00042B                     SLRCONF         equ	1067	;# 
  1559   00042C                     INLVLF          equ	1068	;# 
  1560   00043D                     IOCWP           equ	1085	;# 
  1561   00043E                     IOCWN           equ	1086	;# 
  1562   00043F                     IOCWF           equ	1087	;# 
  1563   000440                     NCO1ACC         equ	1088	;# 
  1564   000440                     NCO1ACCL        equ	1088	;# 
  1565   000441                     NCO1ACCH        equ	1089	;# 
  1566   000442                     NCO1ACCU        equ	1090	;# 
  1567   000443                     NCO1INC         equ	1091	;# 
  1568   000443                     NCO1INCL        equ	1091	;# 
  1569   000444                     NCO1INCH        equ	1092	;# 
  1570   000445                     NCO1INCU        equ	1093	;# 
  1571   000446                     NCO1CON         equ	1094	;# 
  1572   000447                     NCO1CLK         equ	1095	;# 
  1573   000458                     FSCMCON         equ	1112	;# 
  1574   000459                     IVTLOCK         equ	1113	;# 
  1575   00045A                     IVTAD           equ	1114	;# 
  1576   00045A                     IVTADL          equ	1114	;# 
  1577   00045B                     IVTADH          equ	1115	;# 
  1578   00045C                     IVTADU          equ	1116	;# 
  1579   00045D                     IVTBASE         equ	1117	;# 
  1580   00045D                     IVTBASEL        equ	1117	;# 
  1581   00045E                     IVTBASEH        equ	1118	;# 
  1582   00045F                     IVTBASEU        equ	1119	;# 
  1583   000460                     PWM1ERS         equ	1120	;# 
  1584   000461                     PWM1CLK         equ	1121	;# 
  1585   000462                     PWM1LDS         equ	1122	;# 
  1586   000463                     PWM1PR          equ	1123	;# 
  1587   000463                     PWM1PRL         equ	1123	;# 
  1588   000464                     PWM1PRH         equ	1124	;# 
  1589   000465                     PWM1CPRE        equ	1125	;# 
  1590   000466                     PWM1PIPOS       equ	1126	;# 
  1591   000467                     PWM1GIR         equ	1127	;# 
  1592   000468                     PWM1GIE         equ	1128	;# 
  1593   000469                     PWM1CON         equ	1129	;# 
  1594   00046A                     PWM1S1CFG       equ	1130	;# 
  1595   00046B                     PWM1S1P1        equ	1131	;# 
  1596   00046B                     PWM1S1P1L       equ	1131	;# 
  1597   00046C                     PWM1S1P1H       equ	1132	;# 
  1598   00046D                     PWM1S1P2        equ	1133	;# 
  1599   00046D                     PWM1S1P2L       equ	1133	;# 
  1600   00046E                     PWM1S1P2H       equ	1134	;# 
  1601   00046F                     PWM2ERS         equ	1135	;# 
  1602   000470                     PWM2CLK         equ	1136	;# 
  1603   000471                     PWM2LDS         equ	1137	;# 
  1604   000472                     PWM2PR          equ	1138	;# 
  1605   000472                     PWM2PRL         equ	1138	;# 
  1606   000473                     PWM2PRH         equ	1139	;# 
  1607   000474                     PWM2CPRE        equ	1140	;# 
  1608   000475                     PWM2PIPOS       equ	1141	;# 
  1609   000476                     PWM2GIR         equ	1142	;# 
  1610   000477                     PWM2GIE         equ	1143	;# 
  1611   000478                     PWM2CON         equ	1144	;# 
  1612   000479                     PWM2S1CFG       equ	1145	;# 
  1613   00047A                     PWM2S1P1        equ	1146	;# 
  1614   00047A                     PWM2S1P1L       equ	1146	;# 
  1615   00047B                     PWM2S1P1H       equ	1147	;# 
  1616   00047C                     PWM2S1P2        equ	1148	;# 
  1617   00047C                     PWM2S1P2L       equ	1148	;# 
  1618   00047D                     PWM2S1P2H       equ	1149	;# 
  1619   00047E                     PWM3ERS         equ	1150	;# 
  1620   00047F                     PWM3CLK         equ	1151	;# 
  1621   000480                     PWM3LDS         equ	1152	;# 
  1622   000481                     PWM3PR          equ	1153	;# 
  1623   000481                     PWM3PRL         equ	1153	;# 
  1624   000482                     PWM3PRH         equ	1154	;# 
  1625   000483                     PWM3CPRE        equ	1155	;# 
  1626   000484                     PWM3PIPOS       equ	1156	;# 
  1627   000485                     PWM3GIR         equ	1157	;# 
  1628   000486                     PWM3GIE         equ	1158	;# 
  1629   000487                     PWM3CON         equ	1159	;# 
  1630   000488                     PWM3S1CFG       equ	1160	;# 
  1631   000489                     PWM3S1P1        equ	1161	;# 
  1632   000489                     PWM3S1P1L       equ	1161	;# 
  1633   00048A                     PWM3S1P1H       equ	1162	;# 
  1634   00048B                     PWM3S1P2        equ	1163	;# 
  1635   00048B                     PWM3S1P2L       equ	1163	;# 
  1636   00048C                     PWM3S1P2H       equ	1164	;# 
  1637   000499                     PWMLOAD         equ	1177	;# 
  1638   00049A                     PWMEN           equ	1178	;# 
  1639   00049C                     IPR0            equ	1180	;# 
  1640   00049D                     IPR1            equ	1181	;# 
  1641   00049E                     IPR2            equ	1182	;# 
  1642   00049F                     IPR3            equ	1183	;# 
  1643   0004A0                     IPR4            equ	1184	;# 
  1644   0004A1                     IPR5            equ	1185	;# 
  1645   0004A2                     IPR6            equ	1186	;# 
  1646   0004A3                     IPR7            equ	1187	;# 
  1647   0004A4                     IPR8            equ	1188	;# 
  1648   0004A5                     IPR9            equ	1189	;# 
  1649   0004A6                     IPR10           equ	1190	;# 
  1650   0004A7                     PIE0            equ	1191	;# 
  1651   0004A8                     PIE1            equ	1192	;# 
  1652   0004A9                     PIE2            equ	1193	;# 
  1653   0004AA                     PIE3            equ	1194	;# 
  1654   0004AB                     PIE4            equ	1195	;# 
  1655   0004AC                     PIE5            equ	1196	;# 
  1656   0004AD                     PIE6            equ	1197	;# 
  1657   0004AE                     PIE7            equ	1198	;# 
  1658   0004AF                     PIE8            equ	1199	;# 
  1659   0004B0                     PIE9            equ	1200	;# 
  1660   0004B1                     PIE10           equ	1201	;# 
  1661   0004B2                     PIR0            equ	1202	;# 
  1662   0004B3                     PIR1            equ	1203	;# 
  1663   0004B4                     PIR2            equ	1204	;# 
  1664   0004B5                     PIR3            equ	1205	;# 
  1665   0004B6                     PIR4            equ	1206	;# 
  1666   0004B7                     PIR5            equ	1207	;# 
  1667   0004B8                     PIR6            equ	1208	;# 
  1668   0004B9                     PIR7            equ	1209	;# 
  1669   0004BA                     PIR8            equ	1210	;# 
  1670   0004BB                     PIR9            equ	1211	;# 
  1671   0004BC                     PIR10           equ	1212	;# 
  1672   0004D6                     INTCON0         equ	1238	;# 
  1673   0004D7                     INTCON1         equ	1239	;# 
  1674   0004D8                     STATUS          equ	1240	;# 
  1675   0004D9                     FSR2            equ	1241	;# 
  1676   0004D9                     FSR2L           equ	1241	;# 
  1677   0004DA                     FSR2H           equ	1242	;# 
  1678   0004DB                     PLUSW2          equ	1243	;# 
  1679   0004DC                     PREINC2         equ	1244	;# 
  1680   0004DD                     POSTDEC2        equ	1245	;# 
  1681   0004DE                     POSTINC2        equ	1246	;# 
  1682   0004DF                     INDF2           equ	1247	;# 
  1683   0004E0                     BSR             equ	1248	;# 
  1684   0004E1                     FSR1            equ	1249	;# 
  1685   0004E1                     FSR1L           equ	1249	;# 
  1686   0004E2                     FSR1H           equ	1250	;# 
  1687   0004E3                     PLUSW1          equ	1251	;# 
  1688   0004E4                     PREINC1         equ	1252	;# 
  1689   0004E5                     POSTDEC1        equ	1253	;# 
  1690   0004E6                     POSTINC1        equ	1254	;# 
  1691   0004E7                     INDF1           equ	1255	;# 
  1692   0004E8                     WREG            equ	1256	;# 
  1693   0004E9                     FSR0            equ	1257	;# 
  1694   0004E9                     FSR0L           equ	1257	;# 
  1695   0004EA                     FSR0H           equ	1258	;# 
  1696   0004EB                     PLUSW0          equ	1259	;# 
  1697   0004EC                     PREINC0         equ	1260	;# 
  1698   0004ED                     POSTDEC0        equ	1261	;# 
  1699   0004EE                     POSTINC0        equ	1262	;# 
  1700   0004EF                     INDF0           equ	1263	;# 
  1701   0004F0                     PCON0           equ	1264	;# 
  1702   0004F1                     PCON1           equ	1265	;# 
  1703   0004F2                     CPUDOZE         equ	1266	;# 
  1704   0004F3                     PROD            equ	1267	;# 
  1705   0004F3                     PRODL           equ	1267	;# 
  1706   0004F4                     PRODH           equ	1268	;# 
  1707   0004F5                     TABLAT          equ	1269	;# 
  1708   0004F6                     TBLPTR          equ	1270	;# 
  1709   0004F6                     TBLPTRL         equ	1270	;# 
  1710   0004F7                     TBLPTRH         equ	1271	;# 
  1711   0004F8                     TBLPTRU         equ	1272	;# 
  1712   0004F9                     PCLAT           equ	1273	;# 
  1713   0004F9                     PCL             equ	1273	;# 
  1714   0004FA                     PCLATH          equ	1274	;# 
  1715   0004FB                     PCLATU          equ	1275	;# 
  1716   0004FC                     STKPTR          equ	1276	;# 
  1717   0004FD                     TOS             equ	1277	;# 
  1718   0004FD                     TOSL            equ	1277	;# 
  1719   0004FE                     TOSH            equ	1278	;# 
  1720   0004FF                     TOSU            equ	1279	;# 
  1721   000039                     CLKRCON         equ	57	;# 
  1722   00003A                     CLKRCLK         equ	58	;# 
  1723   000040                     NVMCON0         equ	64	;# 
  1724   000041                     NVMCON1         equ	65	;# 
  1725   000042                     NVMLOCK         equ	66	;# 
  1726   000043                     NVMADR          equ	67	;# 
  1727   000043                     NVMADRL         equ	67	;# 
  1728   000044                     NVMADRH         equ	68	;# 
  1729   000045                     NVMADRU         equ	69	;# 
  1730   000046                     NVMDAT          equ	70	;# 
  1731   000046                     NVMDATL         equ	70	;# 
  1732   000047                     NVMDATH         equ	71	;# 
  1733   000048                     VREGCON         equ	72	;# 
  1734   000049                     BORCON          equ	73	;# 
  1735   00004A                     HLVDCON0        equ	74	;# 
  1736   00004B                     HLVDCON1        equ	75	;# 
  1737   00004C                     ZCDCON          equ	76	;# 
  1738   000062                     PMD0            equ	98	;# 
  1739   000063                     PMD1            equ	99	;# 
  1740   000064                     PMD2            equ	100	;# 
  1741   000065                     PMD3            equ	101	;# 
  1742   000066                     PMD4            equ	102	;# 
  1743   000067                     PMD5            equ	103	;# 
  1744   000068                     PMD6            equ	104	;# 
  1745   00006F                     CMOUT           equ	111	;# 
  1746   000070                     CM1CON0         equ	112	;# 
  1747   000071                     CM1CON1         equ	113	;# 
  1748   000072                     CM1NCH          equ	114	;# 
  1749   000073                     CM1PCH          equ	115	;# 
  1750   000074                     CM2CON0         equ	116	;# 
  1751   000075                     CM2CON1         equ	117	;# 
  1752   000076                     CM2NCH          equ	118	;# 
  1753   000077                     CM2PCH          equ	119	;# 
  1754   000078                     WDTCON0         equ	120	;# 
  1755   000079                     WDTCON1         equ	121	;# 
  1756   00007A                     WDTPS           equ	122	;# 
  1757   00007A                     WDTPSL          equ	122	;# 
  1758   00007B                     WDTPSH          equ	123	;# 
  1759   00007C                     WDTTMR          equ	124	;# 
  1760   00007D                     DAC1DAT         equ	125	;# 
  1761   00007D                     DAC1DATL        equ	125	;# 
  1762   00007E                     DAC1DATH        equ	126	;# 
  1763   00007F                     DAC1CON         equ	127	;# 
  1764   000080                     SPI1RXB         equ	128	;# 
  1765   000081                     SPI1TXB         equ	129	;# 
  1766   000082                     SPI1TCNT        equ	130	;# 
  1767   000082                     SPI1TCNTL       equ	130	;# 
  1768   000083                     SPI1TCNTH       equ	131	;# 
  1769   000084                     SPI1CON0        equ	132	;# 
  1770   000085                     SPI1CON1        equ	133	;# 
  1771   000086                     SPI1CON2        equ	134	;# 
  1772   000087                     SPI1STATUS      equ	135	;# 
  1773   000088                     SPI1TWIDTH      equ	136	;# 
  1774   000089                     SPI1BAUD        equ	137	;# 
  1775   00008A                     SPI1INTF        equ	138	;# 
  1776   00008B                     SPI1INTE        equ	139	;# 
  1777   00008C                     SPI1CLK         equ	140	;# 
  1778   0000AC                     ACTCON          equ	172	;# 
  1779   0000AD                     OSCCON1         equ	173	;# 
  1780   0000AE                     OSCCON2         equ	174	;# 
  1781   0000AF                     OSCCON3         equ	175	;# 
  1782   0000B0                     OSCTUNE         equ	176	;# 
  1783   0000B1                     OSCFRQ          equ	177	;# 
  1784   0000B1                     OSCFREQ         equ	177	;# 
  1785   0000B2                     OSCSTAT         equ	178	;# 
  1786   0000B2                     OSCSTAT1        equ	178	;# 
  1787   0000B3                     OSCEN           equ	179	;# 
  1788   0000B4                     PRLOCK          equ	180	;# 
  1789   0000B5                     SCANPR          equ	181	;# 
  1790   0000B6                     DMA1PR          equ	182	;# 
  1791   0000B7                     DMA2PR          equ	183	;# 
  1792   0000B8                     DMA3PR          equ	184	;# 
  1793   0000B9                     DMA4PR          equ	185	;# 
  1794   0000BE                     MAINPR          equ	190	;# 
  1795   0000BF                     ISRPR           equ	191	;# 
  1796   0000C0                     DAC2DAT         equ	192	;# 
  1797   0000C0                     DAC2DATL        equ	192	;# 
  1798   0000C2                     DAC2CON         equ	194	;# 
  1799   0000C3                     DAC3DAT         equ	195	;# 
  1800   0000C3                     DAC3DATL        equ	195	;# 
  1801   0000C5                     DAC3CON         equ	197	;# 
  1802   0000D4                     CLCDATA         equ	212	;# 
  1803   0000D5                     CLCSELECT       equ	213	;# 
  1804   0000D6                     CLCnCON         equ	214	;# 
  1805   0000D7                     CLCnPOL         equ	215	;# 
  1806   0000D8                     CLCnSEL0        equ	216	;# 
  1807   0000D9                     CLCnSEL1        equ	217	;# 
  1808   0000DA                     CLCnSEL2        equ	218	;# 
  1809   0000DB                     CLCnSEL3        equ	219	;# 
  1810   0000DC                     CLCnGLS0        equ	220	;# 
  1811   0000DD                     CLCnGLS1        equ	221	;# 
  1812   0000DE                     CLCnGLS2        equ	222	;# 
  1813   0000DF                     CLCnGLS3        equ	223	;# 
  1814   0000E8                     DMASELECT       equ	232	;# 
  1815   0000E9                     DMAnBUF         equ	233	;# 
  1816   0000EA                     DMAnDCNT        equ	234	;# 
  1817   0000EA                     DMAnDCNTL       equ	234	;# 
  1818   0000EB                     DMAnDCNTH       equ	235	;# 
  1819   0000EC                     DMAnDPTR        equ	236	;# 
  1820   0000EC                     DMAnDPTRL       equ	236	;# 
  1821   0000ED                     DMAnDPTRH       equ	237	;# 
  1822   0000EE                     DMAnDSZ         equ	238	;# 
  1823   0000EE                     DMAnDSZL        equ	238	;# 
  1824   0000EF                     DMAnDSZH        equ	239	;# 
  1825   0000F0                     DMAnDSA         equ	240	;# 
  1826   0000F0                     DMAnDSAL        equ	240	;# 
  1827   0000F1                     DMAnDSAH        equ	241	;# 
  1828   0000F2                     DMAnSCNT        equ	242	;# 
  1829   0000F2                     DMAnSCNTL       equ	242	;# 
  1830   0000F3                     DMAnSCNTH       equ	243	;# 
  1831   0000F4                     DMAnSPTR        equ	244	;# 
  1832   0000F4                     DMAnSPTRL       equ	244	;# 
  1833   0000F5                     DMAnSPTRH       equ	245	;# 
  1834   0000F6                     DMAnSPTRU       equ	246	;# 
  1835   0000F7                     DMAnSSZ         equ	247	;# 
  1836   0000F7                     DMAnSSZL        equ	247	;# 
  1837   0000F8                     DMAnSSZH        equ	248	;# 
  1838   0000F9                     DMAnSSA         equ	249	;# 
  1839   0000F9                     DMAnSSAL        equ	249	;# 
  1840   0000FA                     DMAnSSAH        equ	250	;# 
  1841   0000FB                     DMAnSSAU        equ	251	;# 
  1842   0000FC                     DMAnCON0        equ	252	;# 
  1843   0000FD                     DMAnCON1        equ	253	;# 
  1844   0000FE                     DMAnAIRQ        equ	254	;# 
  1845   0000FF                     DMAnSIRQ        equ	255	;# 
  1846   000100                     PORTW           equ	256	;# 
  1847   000101                     LATW            equ	257	;# 
  1848   000102                     PORTWIN0        equ	258	;# 
  1849   000103                     PORTWIN1        equ	259	;# 
  1850   000104                     PORTWIN2        equ	260	;# 
  1851   000105                     PORTWIN3        equ	261	;# 
  1852   000106                     PORTWIN4        equ	262	;# 
  1853   000107                     PORTWIN5        equ	263	;# 
  1854   000108                     PORTWIN6        equ	264	;# 
  1855   000109                     PORTWIN7        equ	265	;# 
  1856   00010A                     PORTWCLK        equ	266	;# 
  1857   00010B                     PORTWDF         equ	267	;# 
  1858   00010C                     PORTWCON        equ	268	;# 
  1859   000110                     ADCGA           equ	272	;# 
  1860   000111                     ADCGB           equ	273	;# 
  1861   000112                     ADCGC           equ	274	;# 
  1862   000113                     ADCGD           equ	275	;# 
  1863   000114                     ADCGE           equ	276	;# 
  1864   000115                     ADCGF           equ	277	;# 
  1865   00011F                     OPA1CON0        equ	287	;# 
  1866   000120                     OPA1CON1        equ	288	;# 
  1867   000121                     OPA1CON2        equ	289	;# 
  1868   000122                     OPA1CON3        equ	290	;# 
  1869   000123                     OPA1CON4        equ	291	;# 
  1870   000124                     OPA1HWC         equ	292	;# 
  1871   000125                     OPA1OFFSET      equ	293	;# 
  1872   000126                     OPA1ORS         equ	294	;# 
  1873   000127                     OPA2CON0        equ	295	;# 
  1874   000128                     OPA2CON1        equ	296	;# 
  1875   000129                     OPA2CON2        equ	297	;# 
  1876   00012A                     OPA2CON3        equ	298	;# 
  1877   00012B                     OPA2CON4        equ	299	;# 
  1878   00012C                     OPA2HWC         equ	300	;# 
  1879   00012D                     OPA2OFFSET      equ	301	;# 
  1880   00012E                     OPA2ORS         equ	302	;# 
  1881   000140                     LATA            equ	320	;# 
  1882   000141                     LATB            equ	321	;# 
  1883   000142                     LATC            equ	322	;# 
  1884   000143                     LATD            equ	323	;# 
  1885   000144                     LATE            equ	324	;# 
  1886   000145                     LATF            equ	325	;# 
  1887   000148                     TRISA           equ	328	;# 
  1888   000149                     TRISB           equ	329	;# 
  1889   00014A                     TRISC           equ	330	;# 
  1890   00014B                     TRISD           equ	331	;# 
  1891   00014C                     TRISE           equ	332	;# 
  1892   00014D                     TRISF           equ	333	;# 
  1893   000150                     PORTA           equ	336	;# 
  1894   000151                     PORTB           equ	337	;# 
  1895   000152                     PORTC           equ	338	;# 
  1896   000153                     PORTD           equ	339	;# 
  1897   000154                     PORTE           equ	340	;# 
  1898   000155                     PORTF           equ	341	;# 
  1899   0001C0                     APMCON          equ	448	;# 
  1900   0001C1                     APMPRE          equ	449	;# 
  1901   0001C1                     APMPREL         equ	449	;# 
  1902   0001C2                     APMPREH         equ	450	;# 
  1903   0001C3                     APMPER          equ	451	;# 
  1904   0001C3                     APMPERL         equ	451	;# 
  1905   0001C4                     APMPERH         equ	452	;# 
  1906   0001C5                     APMSTART1       equ	453	;# 
  1907   0001C5                     APMSTART1L      equ	453	;# 
  1908   0001C6                     APMSTART1H      equ	454	;# 
  1909   0001C7                     APMPERS1        equ	455	;# 
  1910   0001C7                     APMPERS1L       equ	455	;# 
  1911   0001C8                     APMPERS1H       equ	456	;# 
  1912   0001C9                     APMSTART2       equ	457	;# 
  1913   0001C9                     APMSTART2L      equ	457	;# 
  1914   0001CA                     APMSTART2H      equ	458	;# 
  1915   0001CB                     APMSTART2U      equ	459	;# 
  1916   0001CC                     APMPERS2        equ	460	;# 
  1917   0001CC                     APMPERS2L       equ	460	;# 
  1918   0001CD                     APMPERS2H       equ	461	;# 
  1919   0001CE                     APMEND1         equ	462	;# 
  1920   0001CE                     APMEND1L        equ	462	;# 
  1921   0001CF                     APMEND1H        equ	463	;# 
  1922   0001D0                     APMEND1U        equ	464	;# 
  1923   0001D1                     APMPERE1        equ	465	;# 
  1924   0001D1                     APMPERE1L       equ	465	;# 
  1925   0001D2                     APMPERE1H       equ	466	;# 
  1926   0001D3                     APMEND2         equ	467	;# 
  1927   0001D3                     APMEND2L        equ	467	;# 
  1928   0001D4                     APMEND2H        equ	468	;# 
  1929   0001D5                     APMEND2U        equ	469	;# 
  1930   0001D6                     APMPERE2        equ	470	;# 
  1931   0001D6                     APMPERE2L       equ	470	;# 
  1932   0001D7                     APMPERE2H       equ	471	;# 
  1933   0001D8                     APMCLK          equ	472	;# 
  1934   0001D9                     APMSTATUS       equ	473	;# 
  1935   0001D9                     APMSTATUSL      equ	473	;# 
  1936   0001DA                     APMSTATUSH      equ	474	;# 
  1937   000200                     PPSLOCK         equ	512	;# 
  1938   000201                     RA0PPS          equ	513	;# 
  1939   000202                     RA1PPS          equ	514	;# 
  1940   000203                     RA2PPS          equ	515	;# 
  1941   000204                     RA3PPS          equ	516	;# 
  1942   000205                     RA4PPS          equ	517	;# 
  1943   000206                     RA5PPS          equ	518	;# 
  1944   000207                     RA6PPS          equ	519	;# 
  1945   000208                     RA7PPS          equ	520	;# 
  1946   000209                     RB0PPS          equ	521	;# 
  1947   00020A                     RB1PPS          equ	522	;# 
  1948   00020B                     RB2PPS          equ	523	;# 
  1949   00020C                     RB3PPS          equ	524	;# 
  1950   00020D                     RB4PPS          equ	525	;# 
  1951   00020E                     RB5PPS          equ	526	;# 
  1952   00020F                     RB6PPS          equ	527	;# 
  1953   000210                     RB7PPS          equ	528	;# 
  1954   000211                     RC0PPS          equ	529	;# 
  1955   000212                     RC1PPS          equ	530	;# 
  1956   000213                     RC2PPS          equ	531	;# 
  1957   000214                     RC3PPS          equ	532	;# 
  1958   000215                     RC4PPS          equ	533	;# 
  1959   000216                     RC5PPS          equ	534	;# 
  1960   000217                     RC6PPS          equ	535	;# 
  1961   000218                     RC7PPS          equ	536	;# 
  1962   000219                     RD0PPS          equ	537	;# 
  1963   00021A                     RD1PPS          equ	538	;# 
  1964   00021B                     RD2PPS          equ	539	;# 
  1965   00021C                     RD3PPS          equ	540	;# 
  1966   00021D                     RD4PPS          equ	541	;# 
  1967   00021E                     RD5PPS          equ	542	;# 
  1968   00021F                     RD6PPS          equ	543	;# 
  1969   000220                     RD7PPS          equ	544	;# 
  1970   000221                     RE0PPS          equ	545	;# 
  1971   000222                     RE1PPS          equ	546	;# 
  1972   000223                     RE2PPS          equ	547	;# 
  1973   000225                     RF0PPS          equ	549	;# 
  1974   000226                     RF1PPS          equ	550	;# 
  1975   000227                     RF2PPS          equ	551	;# 
  1976   000228                     RF3PPS          equ	552	;# 
  1977   000229                     RF4PPS          equ	553	;# 
  1978   00022A                     RF5PPS          equ	554	;# 
  1979   00022B                     RF6PPS          equ	555	;# 
  1980   00022C                     RF7PPS          equ	556	;# 
  1981   00023E                     INT0PPS         equ	574	;# 
  1982   00023F                     INT1PPS         equ	575	;# 
  1983   000240                     INT2PPS         equ	576	;# 
  1984   000241                     T0CKIPPS        equ	577	;# 
  1985   000242                     T1CKIPPS        equ	578	;# 
  1986   000243                     T1GPPS          equ	579	;# 
  1987   000244                     T3CKIPPS        equ	580	;# 
  1988   000245                     T3GPPS          equ	581	;# 
  1989   000248                     T2INPPS         equ	584	;# 
  1990   000249                     T4INPPS         equ	585	;# 
  1991   00024F                     CCP1PPS         equ	591	;# 
  1992   000250                     CCP2PPS         equ	592	;# 
  1993   000251                     PWM1ERSPPS      equ	593	;# 
  1994   000252                     PWM2ERSPPS      equ	594	;# 
  1995   000253                     PWM3ERSPPS      equ	595	;# 
  1996   000257                     PWMIN0PPS       equ	599	;# 
  1997   000258                     PWMIN1PPS       equ	600	;# 
  1998   00025B                     CWG1PPS         equ	603	;# 
  1999   00025B                     CWG1INPPS       equ	603	;# 
  2000   000261                     CLCIN0PPS       equ	609	;# 
  2001   000262                     CLCIN1PPS       equ	610	;# 
  2002   000263                     CLCIN2PPS       equ	611	;# 
  2003   000264                     CLCIN3PPS       equ	612	;# 
  2004   000265                     CLCIN4PPS       equ	613	;# 
  2005   000266                     CLCIN5PPS       equ	614	;# 
  2006   000267                     CLCIN6PPS       equ	615	;# 
  2007   000268                     CLCIN7PPS       equ	616	;# 
  2008   000269                     ADACTPPS        equ	617	;# 
  2009   00026A                     SPI1SCKPPS      equ	618	;# 
  2010   00026B                     SPI1SDIPPS      equ	619	;# 
  2011   00026C                     SPI1SSPPS       equ	620	;# 
  2012   000270                     I2C1SDAPPS      equ	624	;# 
  2013   000271                     I2C1SCLPPS      equ	625	;# 
  2014   000272                     U1RXPPS         equ	626	;# 
  2015   000273                     U1CTSPPS        equ	627	;# 
  2016   000274                     U2RXPPS         equ	628	;# 
  2017   000275                     U2CTSPPS        equ	629	;# 
  2018   000276                     OPA1ORPPS       equ	630	;# 
  2019   000277                     OPA2ORPPS       equ	631	;# 
  2020   000278                     TUIN0PPS        equ	632	;# 
  2021   000279                     TUIN1PPS        equ	633	;# 
  2022   00027A                     APMCLKPPS       equ	634	;# 
  2023   000285                     RB2I2C          equ	645	;# 
  2024   000286                     RB1I2C          equ	646	;# 
  2025   000287                     RC4I2C          equ	647	;# 
  2026   000288                     RC3I2C          equ	648	;# 
  2027   000289                     I2C1RXB         equ	649	;# 
  2028   00028A                     I2C1TXB         equ	650	;# 
  2029   00028B                     I2C1CNT         equ	651	;# 
  2030   00028B                     I2C1CNTL        equ	651	;# 
  2031   00028C                     I2C1CNTH        equ	652	;# 
  2032   00028D                     I2C1ADB0        equ	653	;# 
  2033   00028E                     I2C1ADB1        equ	654	;# 
  2034   00028F                     I2C1ADR0        equ	655	;# 
  2035   000290                     I2C1ADR1        equ	656	;# 
  2036   000291                     I2C1ADR2        equ	657	;# 
  2037   000292                     I2C1ADR3        equ	658	;# 
  2038   000293                     I2C1CON0        equ	659	;# 
  2039   000294                     I2C1CON1        equ	660	;# 
  2040   000295                     I2C1CON2        equ	661	;# 
  2041   000296                     I2C1CON3        equ	662	;# 
  2042   000297                     I2C1ERR         equ	663	;# 
  2043   000298                     I2C1STAT0       equ	664	;# 
  2044   000299                     I2C1STAT1       equ	665	;# 
  2045   00029A                     I2C1PIR         equ	666	;# 
  2046   00029B                     I2C1PIE         equ	667	;# 
  2047   00029C                     I2C1BTO         equ	668	;# 
  2048   00029D                     I2C1BAUD        equ	669	;# 
  2049   00029E                     I2C1CLK         equ	670	;# 
  2050   00029F                     I2C1BTOC        equ	671	;# 
  2051   0002A0                     U1RXB           equ	672	;# 
  2052   0002A0                     U1RXBL          equ	672	;# 
  2053   0002A1                     U1RXCHK         equ	673	;# 
  2054   0002A2                     U1TXB           equ	674	;# 
  2055   0002A2                     U1TXBL          equ	674	;# 
  2056   0002A3                     U1TXCHK         equ	675	;# 
  2057   0002A4                     U1P1            equ	676	;# 
  2058   0002A4                     U1P1L           equ	676	;# 
  2059   0002A5                     U1P1H           equ	677	;# 
  2060   0002A6                     U1P2            equ	678	;# 
  2061   0002A6                     U1P2L           equ	678	;# 
  2062   0002A7                     U1P2H           equ	679	;# 
  2063   0002A8                     U1P3            equ	680	;# 
  2064   0002A8                     U1P3L           equ	680	;# 
  2065   0002A9                     U1P3H           equ	681	;# 
  2066   0002AA                     U1CON0          equ	682	;# 
  2067   0002AB                     U1CON1          equ	683	;# 
  2068   0002AC                     U1CON2          equ	684	;# 
  2069   0002AD                     U1BRG           equ	685	;# 
  2070   0002AD                     U1BRGL          equ	685	;# 
  2071   0002AE                     U1BRGH          equ	686	;# 
  2072   0002AF                     U1FIFO          equ	687	;# 
  2073   0002B0                     U1UIR           equ	688	;# 
  2074   0002B1                     U1ERRIR         equ	689	;# 
  2075   0002B2                     U1ERRIE         equ	690	;# 
  2076   0002B4                     U2RXB           equ	692	;# 
  2077   0002B4                     U2RXBL          equ	692	;# 
  2078   0002B6                     U2TXB           equ	694	;# 
  2079   0002B6                     U2TXBL          equ	694	;# 
  2080   0002B8                     U2P1            equ	696	;# 
  2081   0002B8                     U2P1L           equ	696	;# 
  2082   0002BA                     U2P2            equ	698	;# 
  2083   0002BA                     U2P2L           equ	698	;# 
  2084   0002BC                     U2P3            equ	700	;# 
  2085   0002BC                     U2P3L           equ	700	;# 
  2086   0002BE                     U2CON0          equ	702	;# 
  2087   0002BF                     U2CON1          equ	703	;# 
  2088   0002C0                     U2CON2          equ	704	;# 
  2089   0002C1                     U2BRG           equ	705	;# 
  2090   0002C1                     U2BRGL          equ	705	;# 
  2091   0002C2                     U2BRGH          equ	706	;# 
  2092   0002C3                     U2FIFO          equ	707	;# 
  2093   0002C4                     U2UIR           equ	708	;# 
  2094   0002C5                     U2ERRIR         equ	709	;# 
  2095   0002C6                     U2ERRIE         equ	710	;# 
  2096   000312                     TMR1            equ	786	;# 
  2097   000312                     TMR1L           equ	786	;# 
  2098   000313                     TMR1H           equ	787	;# 
  2099   000314                     T1CON           equ	788	;# 
  2100   000314                     TMR1CON         equ	788	;# 
  2101   000315                     T1GCON          equ	789	;# 
  2102   000315                     TMR1GCON        equ	789	;# 
  2103   000316                     T1GATE          equ	790	;# 
  2104   000316                     TMR1GATE        equ	790	;# 
  2105   000317                     T1CLK           equ	791	;# 
  2106   000317                     TMR1CLK         equ	791	;# 
  2107   000317                     PR1             equ	791	;# 
  2108   000318                     TMR0L           equ	792	;# 
  2109   000318                     TMR0            equ	792	;# 
  2110   000319                     TMR0H           equ	793	;# 
  2111   000319                     PR0             equ	793	;# 
  2112   00031A                     T0CON0          equ	794	;# 
  2113   00031B                     T0CON1          equ	795	;# 
  2114   00031D                     T2TMR           equ	797	;# 
  2115   00031D                     TMR2            equ	797	;# 
  2116   00031E                     T2PR            equ	798	;# 
  2117   00031E                     PR2             equ	798	;# 
  2118   00031F                     T2CON           equ	799	;# 
  2119   000320                     T2HLT           equ	800	;# 
  2120   000321                     T2CLKCON        equ	801	;# 
  2121   000321                     T2CLK           equ	801	;# 
  2122   000322                     T2RST           equ	802	;# 
  2123   000323                     TMR3            equ	803	;# 
  2124   000323                     TMR3L           equ	803	;# 
  2125   000324                     TMR3H           equ	804	;# 
  2126   000325                     T3CON           equ	805	;# 
  2127   000325                     TMR3CON         equ	805	;# 
  2128   000326                     T3GCON          equ	806	;# 
  2129   000326                     TMR3GCON        equ	806	;# 
  2130   000327                     T3GATE          equ	807	;# 
  2131   000327                     TMR3GATE        equ	807	;# 
  2132   000328                     T3CLK           equ	808	;# 
  2133   000328                     TMR3CLK         equ	808	;# 
  2134   000328                     PR3             equ	808	;# 
  2135   00032A                     T4TMR           equ	810	;# 
  2136   00032A                     TMR4            equ	810	;# 
  2137   00032B                     T4PR            equ	811	;# 
  2138   00032B                     PR4             equ	811	;# 
  2139   00032C                     T4CON           equ	812	;# 
  2140   00032D                     T4HLT           equ	813	;# 
  2141   00032E                     T4CLKCON        equ	814	;# 
  2142   00032E                     T4CLK           equ	814	;# 
  2143   00032F                     T4RST           equ	815	;# 
  2144   000340                     CCPR1           equ	832	;# 
  2145   000340                     CCPR1L          equ	832	;# 
  2146   000341                     CCPR1H          equ	833	;# 
  2147   000342                     CCP1CON         equ	834	;# 
  2148   000343                     CCP1CAP         equ	835	;# 
  2149   000344                     CCPR2           equ	836	;# 
  2150   000344                     CCPR2L          equ	836	;# 
  2151   000345                     CCPR2H          equ	837	;# 
  2152   000346                     CCP2CON         equ	838	;# 
  2153   000347                     CCP2CAP         equ	839	;# 
  2154   00034C                     CCPTMRS0        equ	844	;# 
  2155   00034E                     CRCDATA         equ	846	;# 
  2156   00034E                     CRCDATAL        equ	846	;# 
  2157   00034F                     CRCDATAH        equ	847	;# 
  2158   000350                     CRCDATAU        equ	848	;# 
  2159   000351                     CRCDATAT        equ	849	;# 
  2160   000352                     CRCOUT          equ	850	;# 
  2161   000352                     CRCSHFT         equ	850	;# 
  2162   000352                     CRCXOR          equ	850	;# 
  2163   000352                     CRCOUTL         equ	850	;# 
  2164   000352                     CRCSHFTL        equ	850	;# 
  2165   000352                     CRCSHIFTL       equ	850	;# 
  2166   000352                     CRCXORL         equ	850	;# 
  2167   000353                     CRCOUTH         equ	851	;# 
  2168   000353                     CRCSHFTH        equ	851	;# 
  2169   000353                     CRCSHIFTH       equ	851	;# 
  2170   000353                     CRCXORH         equ	851	;# 
  2171   000354                     CRCOUTU         equ	852	;# 
  2172   000354                     CRCSHFTU        equ	852	;# 
  2173   000354                     CRCSHIFTU       equ	852	;# 
  2174   000354                     CRCXORU         equ	852	;# 
  2175   000355                     CRCOUTT         equ	853	;# 
  2176   000355                     CRCSHFTT        equ	853	;# 
  2177   000355                     CRCSHIFTT       equ	853	;# 
  2178   000355                     CRCXORT         equ	853	;# 
  2179   000356                     CRCCON0         equ	854	;# 
  2180   000357                     CRCCON1         equ	855	;# 
  2181   000358                     CRCCON2         equ	856	;# 
  2182   00035A                     SCANLADR        equ	858	;# 
  2183   00035A                     SCANLADRL       equ	858	;# 
  2184   00035B                     SCANLADRH       equ	859	;# 
  2185   00035C                     SCANLADRU       equ	860	;# 
  2186   00035D                     SCANHADR        equ	861	;# 
  2187   00035D                     SCANHADRL       equ	861	;# 
  2188   00035E                     SCANHADRH       equ	862	;# 
  2189   00035F                     SCANHADRU       equ	863	;# 
  2190   000360                     SCANCON0        equ	864	;# 
  2191   000361                     SCANTRIG        equ	865	;# 
  2192   000373                     STATUS_CSHAD    equ	883	;# 
  2193   000374                     WREG_CSHAD      equ	884	;# 
  2194   000375                     BSR_CSHAD       equ	885	;# 
  2195   000376                     SHADCON         equ	886	;# 
  2196   000377                     STATUS_SHAD     equ	887	;# 
  2197   000378                     WREG_SHAD       equ	888	;# 
  2198   000379                     BSR_SHAD        equ	889	;# 
  2199   00037A                     PCLATH_SHAD     equ	890	;# 
  2200   00037B                     PCLATU_SHAD     equ	891	;# 
  2201   00037C                     FSR0SH          equ	892	;# 
  2202   00037C                     FSR0L_SHAD      equ	892	;# 
  2203   00037D                     FSR0H_SHAD      equ	893	;# 
  2204   00037E                     FSR1SH          equ	894	;# 
  2205   00037E                     FSR1L_SHAD      equ	894	;# 
  2206   00037F                     FSR1H_SHAD      equ	895	;# 
  2207   000380                     FSR2SH          equ	896	;# 
  2208   000380                     FSR2L_SHAD      equ	896	;# 
  2209   000381                     FSR2H_SHAD      equ	897	;# 
  2210   000382                     PRODSH          equ	898	;# 
  2211   000382                     PRODL_SHAD      equ	898	;# 
  2212   000383                     PRODH_SHAD      equ	899	;# 
  2213   0003A0                     TU16ACON0       equ	928	;# 
  2214   0003A1                     TU16ACON1       equ	929	;# 
  2215   0003A2                     TU16AHLT        equ	930	;# 
  2216   0003A3                     TU16APS         equ	931	;# 
  2217   0003A4                     TU16ATMR        equ	932	;# 
  2218   0003A4                     TU16ACR         equ	932	;# 
  2219   0003A4                     TU16ATMRL       equ	932	;# 
  2220   0003A4                     TU16ACRL        equ	932	;# 
  2221   0003A5                     TU16ATMRH       equ	933	;# 
  2222   0003A5                     TU16ACRH        equ	933	;# 
  2223   0003A6                     TU16APR         equ	934	;# 
  2224   0003A6                     TU16APRL        equ	934	;# 
  2225   0003A7                     TU16APRH        equ	935	;# 
  2226   0003A8                     TU16ACLK        equ	936	;# 
  2227   0003A9                     TU16AERS        equ	937	;# 
  2228   0003AA                     TU16BCON0       equ	938	;# 
  2229   0003AB                     TU16BCON1       equ	939	;# 
  2230   0003AC                     TU16BHLT        equ	940	;# 
  2231   0003AD                     TU16BPS         equ	941	;# 
  2232   0003AE                     TU16BTMR        equ	942	;# 
  2233   0003AE                     TU16BCR         equ	942	;# 
  2234   0003AE                     TU16BTMRL       equ	942	;# 
  2235   0003AE                     TU16BCRL        equ	942	;# 
  2236   0003AF                     TU16BTMRH       equ	943	;# 
  2237   0003AF                     TU16BCRH        equ	943	;# 
  2238   0003B0                     TU16BPR         equ	944	;# 
  2239   0003B0                     TU16BPRL        equ	944	;# 
  2240   0003B1                     TU16BPRH        equ	945	;# 
  2241   0003B2                     TU16BCLK        equ	946	;# 
  2242   0003B3                     TU16BERS        equ	947	;# 
  2243   0003B4                     TUCHAIN         equ	948	;# 
  2244   0003BC                     CWG1CLK         equ	956	;# 
  2245   0003BC                     CWG1CLKCON      equ	956	;# 
  2246   0003BD                     CWG1ISM         equ	957	;# 
  2247   0003BD                     CWG1DAT         equ	957	;# 
  2248   0003BE                     CWG1DBR         equ	958	;# 
  2249   0003BF                     CWG1DBF         equ	959	;# 
  2250   0003C0                     CWG1CON0        equ	960	;# 
  2251   0003C1                     CWG1CON1        equ	961	;# 
  2252   0003C2                     CWG1AS0         equ	962	;# 
  2253   0003C3                     CWG1AS1         equ	963	;# 
  2254   0003C4                     CWG1STR         equ	964	;# 
  2255   0003D7                     FVRCON          equ	983	;# 
  2256   0003D8                     ADCPCON         equ	984	;# 
  2257   0003D8                     ADCP            equ	984	;# 
  2258   0003D9                     ADLTH           equ	985	;# 
  2259   0003D9                     ADLTHL          equ	985	;# 
  2260   0003DA                     ADLTHH          equ	986	;# 
  2261   0003DB                     ADUTH           equ	987	;# 
  2262   0003DB                     ADUTHL          equ	987	;# 
  2263   0003DC                     ADUTHH          equ	988	;# 
  2264   0003DD                     ADERR           equ	989	;# 
  2265   0003DD                     ADERRL          equ	989	;# 
  2266   0003DE                     ADERRH          equ	990	;# 
  2267   0003DF                     ADSTPT          equ	991	;# 
  2268   0003DF                     ADSTPTL         equ	991	;# 
  2269   0003E0                     ADSTPTH         equ	992	;# 
  2270   0003E1                     ADFLTR          equ	993	;# 
  2271   0003E1                     ADFLTRL         equ	993	;# 
  2272   0003E2                     ADFLTRH         equ	994	;# 
  2273   0003E3                     ADACC           equ	995	;# 
  2274   0003E3                     ADACCL          equ	995	;# 
  2275   0003E4                     ADACCH          equ	996	;# 
  2276   0003E5                     ADACCU          equ	997	;# 
  2277   0003E6                     ADCNT           equ	998	;# 
  2278   0003E7                     ADRPT           equ	999	;# 
  2279   0003E8                     ADPREV          equ	1000	;# 
  2280   0003E8                     ADPREVL         equ	1000	;# 
  2281   0003E9                     ADPREVH         equ	1001	;# 
  2282   0003EA                     ADRES           equ	1002	;# 
  2283   0003EA                     ADRESL          equ	1002	;# 
  2284   0003EB                     ADRESH          equ	1003	;# 
  2285   0003EC                     ADPCH           equ	1004	;# 
  2286   0003ED                     ADNCH           equ	1005	;# 
  2287   0003EE                     ADACQ           equ	1006	;# 
  2288   0003EE                     ADACQL          equ	1006	;# 
  2289   0003EF                     ADACQH          equ	1007	;# 
  2290   0003F0                     ADCAP           equ	1008	;# 
  2291   0003F1                     ADPRE           equ	1009	;# 
  2292   0003F1                     ADPREL          equ	1009	;# 
  2293   0003F2                     ADPREH          equ	1010	;# 
  2294   0003F3                     ADCON0          equ	1011	;# 
  2295   0003F4                     ADCON1          equ	1012	;# 
  2296   0003F5                     ADCON2          equ	1013	;# 
  2297   0003F6                     ADCON3          equ	1014	;# 
  2298   0003F7                     ADSTAT          equ	1015	;# 
  2299   0003F8                     ADREF           equ	1016	;# 
  2300   0003F9                     ADACT           equ	1017	;# 
  2301   0003FA                     ADCLK           equ	1018	;# 
  2302   0003FB                     ADCTX           equ	1019	;# 
  2303   0003FC                     ADCSEL1         equ	1020	;# 
  2304   0003FD                     ADCSEL2         equ	1021	;# 
  2305   0003FE                     ADCSEL3         equ	1022	;# 
  2306   0003FF                     ADCSEL4         equ	1023	;# 
  2307   000400                     ANSELA          equ	1024	;# 
  2308   000401                     WPUA            equ	1025	;# 
  2309   000402                     ODCONA          equ	1026	;# 
  2310   000403                     SLRCONA         equ	1027	;# 
  2311   000404                     INLVLA          equ	1028	;# 
  2312   000405                     IOCAP           equ	1029	;# 
  2313   000406                     IOCAN           equ	1030	;# 
  2314   000407                     IOCAF           equ	1031	;# 
  2315   000408                     ANSELB          equ	1032	;# 
  2316   000409                     WPUB            equ	1033	;# 
  2317   00040A                     ODCONB          equ	1034	;# 
  2318   00040B                     SLRCONB         equ	1035	;# 
  2319   00040C                     INLVLB          equ	1036	;# 
  2320   00040D                     IOCBP           equ	1037	;# 
  2321   00040E                     IOCBN           equ	1038	;# 
  2322   00040F                     IOCBF           equ	1039	;# 
  2323   000410                     ANSELC          equ	1040	;# 
  2324   000411                     WPUC            equ	1041	;# 
  2325   000412                     ODCONC          equ	1042	;# 
  2326   000413                     SLRCONC         equ	1043	;# 
  2327   000414                     INLVLC          equ	1044	;# 
  2328   000415                     IOCCP           equ	1045	;# 
  2329   000416                     IOCCN           equ	1046	;# 
  2330   000417                     IOCCF           equ	1047	;# 
  2331   000418                     ANSELD          equ	1048	;# 
  2332   000419                     WPUD            equ	1049	;# 
  2333   00041A                     ODCOND          equ	1050	;# 
  2334   00041B                     SLRCOND         equ	1051	;# 
  2335   00041C                     INLVLD          equ	1052	;# 
  2336   000420                     ANSELE          equ	1056	;# 
  2337   000421                     WPUE            equ	1057	;# 
  2338   000422                     ODCONE          equ	1058	;# 
  2339   000423                     SLRCONE         equ	1059	;# 
  2340   000424                     INLVLE          equ	1060	;# 
  2341   000425                     IOCEP           equ	1061	;# 
  2342   000426                     IOCEN           equ	1062	;# 
  2343   000427                     IOCEF           equ	1063	;# 
  2344   000428                     ANSELF          equ	1064	;# 
  2345   000429                     WPUF            equ	1065	;# 
  2346   00042A                     ODCONF          equ	1066	;# 
  2347   00042B                     SLRCONF         equ	1067	;# 
  2348   00042C                     INLVLF          equ	1068	;# 
  2349   00043D                     IOCWP           equ	1085	;# 
  2350   00043E                     IOCWN           equ	1086	;# 
  2351   00043F                     IOCWF           equ	1087	;# 
  2352   000440                     NCO1ACC         equ	1088	;# 
  2353   000440                     NCO1ACCL        equ	1088	;# 
  2354   000441                     NCO1ACCH        equ	1089	;# 
  2355   000442                     NCO1ACCU        equ	1090	;# 
  2356   000443                     NCO1INC         equ	1091	;# 
  2357   000443                     NCO1INCL        equ	1091	;# 
  2358   000444                     NCO1INCH        equ	1092	;# 
  2359   000445                     NCO1INCU        equ	1093	;# 
  2360   000446                     NCO1CON         equ	1094	;# 
  2361   000447                     NCO1CLK         equ	1095	;# 
  2362   000458                     FSCMCON         equ	1112	;# 
  2363   000459                     IVTLOCK         equ	1113	;# 
  2364   00045A                     IVTAD           equ	1114	;# 
  2365   00045A                     IVTADL          equ	1114	;# 
  2366   00045B                     IVTADH          equ	1115	;# 
  2367   00045C                     IVTADU          equ	1116	;# 
  2368   00045D                     IVTBASE         equ	1117	;# 
  2369   00045D                     IVTBASEL        equ	1117	;# 
  2370   00045E                     IVTBASEH        equ	1118	;# 
  2371   00045F                     IVTBASEU        equ	1119	;# 
  2372   000460                     PWM1ERS         equ	1120	;# 
  2373   000461                     PWM1CLK         equ	1121	;# 
  2374   000462                     PWM1LDS         equ	1122	;# 
  2375   000463                     PWM1PR          equ	1123	;# 
  2376   000463                     PWM1PRL         equ	1123	;# 
  2377   000464                     PWM1PRH         equ	1124	;# 
  2378   000465                     PWM1CPRE        equ	1125	;# 
  2379   000466                     PWM1PIPOS       equ	1126	;# 
  2380   000467                     PWM1GIR         equ	1127	;# 
  2381   000468                     PWM1GIE         equ	1128	;# 
  2382   000469                     PWM1CON         equ	1129	;# 
  2383   00046A                     PWM1S1CFG       equ	1130	;# 
  2384   00046B                     PWM1S1P1        equ	1131	;# 
  2385   00046B                     PWM1S1P1L       equ	1131	;# 
  2386   00046C                     PWM1S1P1H       equ	1132	;# 
  2387   00046D                     PWM1S1P2        equ	1133	;# 
  2388   00046D                     PWM1S1P2L       equ	1133	;# 
  2389   00046E                     PWM1S1P2H       equ	1134	;# 
  2390   00046F                     PWM2ERS         equ	1135	;# 
  2391   000470                     PWM2CLK         equ	1136	;# 
  2392   000471                     PWM2LDS         equ	1137	;# 
  2393   000472                     PWM2PR          equ	1138	;# 
  2394   000472                     PWM2PRL         equ	1138	;# 
  2395   000473                     PWM2PRH         equ	1139	;# 
  2396   000474                     PWM2CPRE        equ	1140	;# 
  2397   000475                     PWM2PIPOS       equ	1141	;# 
  2398   000476                     PWM2GIR         equ	1142	;# 
  2399   000477                     PWM2GIE         equ	1143	;# 
  2400   000478                     PWM2CON         equ	1144	;# 
  2401   000479                     PWM2S1CFG       equ	1145	;# 
  2402   00047A                     PWM2S1P1        equ	1146	;# 
  2403   00047A                     PWM2S1P1L       equ	1146	;# 
  2404   00047B                     PWM2S1P1H       equ	1147	;# 
  2405   00047C                     PWM2S1P2        equ	1148	;# 
  2406   00047C                     PWM2S1P2L       equ	1148	;# 
  2407   00047D                     PWM2S1P2H       equ	1149	;# 
  2408   00047E                     PWM3ERS         equ	1150	;# 
  2409   00047F                     PWM3CLK         equ	1151	;# 
  2410   000480                     PWM3LDS         equ	1152	;# 
  2411   000481                     PWM3PR          equ	1153	;# 
  2412   000481                     PWM3PRL         equ	1153	;# 
  2413   000482                     PWM3PRH         equ	1154	;# 
  2414   000483                     PWM3CPRE        equ	1155	;# 
  2415   000484                     PWM3PIPOS       equ	1156	;# 
  2416   000485                     PWM3GIR         equ	1157	;# 
  2417   000486                     PWM3GIE         equ	1158	;# 
  2418   000487                     PWM3CON         equ	1159	;# 
  2419   000488                     PWM3S1CFG       equ	1160	;# 
  2420   000489                     PWM3S1P1        equ	1161	;# 
  2421   000489                     PWM3S1P1L       equ	1161	;# 
  2422   00048A                     PWM3S1P1H       equ	1162	;# 
  2423   00048B                     PWM3S1P2        equ	1163	;# 
  2424   00048B                     PWM3S1P2L       equ	1163	;# 
  2425   00048C                     PWM3S1P2H       equ	1164	;# 
  2426   000499                     PWMLOAD         equ	1177	;# 
  2427   00049A                     PWMEN           equ	1178	;# 
  2428   00049C                     IPR0            equ	1180	;# 
  2429   00049D                     IPR1            equ	1181	;# 
  2430   00049E                     IPR2            equ	1182	;# 
  2431   00049F                     IPR3            equ	1183	;# 
  2432   0004A0                     IPR4            equ	1184	;# 
  2433   0004A1                     IPR5            equ	1185	;# 
  2434   0004A2                     IPR6            equ	1186	;# 
  2435   0004A3                     IPR7            equ	1187	;# 
  2436   0004A4                     IPR8            equ	1188	;# 
  2437   0004A5                     IPR9            equ	1189	;# 
  2438   0004A6                     IPR10           equ	1190	;# 
  2439   0004A7                     PIE0            equ	1191	;# 
  2440   0004A8                     PIE1            equ	1192	;# 
  2441   0004A9                     PIE2            equ	1193	;# 
  2442   0004AA                     PIE3            equ	1194	;# 
  2443   0004AB                     PIE4            equ	1195	;# 
  2444   0004AC                     PIE5            equ	1196	;# 
  2445   0004AD                     PIE6            equ	1197	;# 
  2446   0004AE                     PIE7            equ	1198	;# 
  2447   0004AF                     PIE8            equ	1199	;# 
  2448   0004B0                     PIE9            equ	1200	;# 
  2449   0004B1                     PIE10           equ	1201	;# 
  2450   0004B2                     PIR0            equ	1202	;# 
  2451   0004B3                     PIR1            equ	1203	;# 
  2452   0004B4                     PIR2            equ	1204	;# 
  2453   0004B5                     PIR3            equ	1205	;# 
  2454   0004B6                     PIR4            equ	1206	;# 
  2455   0004B7                     PIR5            equ	1207	;# 
  2456   0004B8                     PIR6            equ	1208	;# 
  2457   0004B9                     PIR7            equ	1209	;# 
  2458   0004BA                     PIR8            equ	1210	;# 
  2459   0004BB                     PIR9            equ	1211	;# 
  2460   0004BC                     PIR10           equ	1212	;# 
  2461   0004D6                     INTCON0         equ	1238	;# 
  2462   0004D7                     INTCON1         equ	1239	;# 
  2463   0004D8                     STATUS          equ	1240	;# 
  2464   0004D9                     FSR2            equ	1241	;# 
  2465   0004D9                     FSR2L           equ	1241	;# 
  2466   0004DA                     FSR2H           equ	1242	;# 
  2467   0004DB                     PLUSW2          equ	1243	;# 
  2468   0004DC                     PREINC2         equ	1244	;# 
  2469   0004DD                     POSTDEC2        equ	1245	;# 
  2470   0004DE                     POSTINC2        equ	1246	;# 
  2471   0004DF                     INDF2           equ	1247	;# 
  2472   0004E0                     BSR             equ	1248	;# 
  2473   0004E1                     FSR1            equ	1249	;# 
  2474   0004E1                     FSR1L           equ	1249	;# 
  2475   0004E2                     FSR1H           equ	1250	;# 
  2476   0004E3                     PLUSW1          equ	1251	;# 
  2477   0004E4                     PREINC1         equ	1252	;# 
  2478   0004E5                     POSTDEC1        equ	1253	;# 
  2479   0004E6                     POSTINC1        equ	1254	;# 
  2480   0004E7                     INDF1           equ	1255	;# 
  2481   0004E8                     WREG            equ	1256	;# 
  2482   0004E9                     FSR0            equ	1257	;# 
  2483   0004E9                     FSR0L           equ	1257	;# 
  2484   0004EA                     FSR0H           equ	1258	;# 
  2485   0004EB                     PLUSW0          equ	1259	;# 
  2486   0004EC                     PREINC0         equ	1260	;# 
  2487   0004ED                     POSTDEC0        equ	1261	;# 
  2488   0004EE                     POSTINC0        equ	1262	;# 
  2489   0004EF                     INDF0           equ	1263	;# 
  2490   0004F0                     PCON0           equ	1264	;# 
  2491   0004F1                     PCON1           equ	1265	;# 
  2492   0004F2                     CPUDOZE         equ	1266	;# 
  2493   0004F3                     PROD            equ	1267	;# 
  2494   0004F3                     PRODL           equ	1267	;# 
  2495   0004F4                     PRODH           equ	1268	;# 
  2496   0004F5                     TABLAT          equ	1269	;# 
  2497   0004F6                     TBLPTR          equ	1270	;# 
  2498   0004F6                     TBLPTRL         equ	1270	;# 
  2499   0004F7                     TBLPTRH         equ	1271	;# 
  2500   0004F8                     TBLPTRU         equ	1272	;# 
  2501   0004F9                     PCLAT           equ	1273	;# 
  2502   0004F9                     PCL             equ	1273	;# 
  2503   0004FA                     PCLATH          equ	1274	;# 
  2504   0004FB                     PCLATU          equ	1275	;# 
  2505   0004FC                     STKPTR          equ	1276	;# 
  2506   0004FD                     TOS             equ	1277	;# 
  2507   0004FD                     TOSL            equ	1277	;# 
  2508   0004FE                     TOSH            equ	1278	;# 
  2509   0004FF                     TOSU            equ	1279	;# 
  2510   000039                     CLKRCON         equ	57	;# 
  2511   00003A                     CLKRCLK         equ	58	;# 
  2512   000040                     NVMCON0         equ	64	;# 
  2513   000041                     NVMCON1         equ	65	;# 
  2514   000042                     NVMLOCK         equ	66	;# 
  2515   000043                     NVMADR          equ	67	;# 
  2516   000043                     NVMADRL         equ	67	;# 
  2517   000044                     NVMADRH         equ	68	;# 
  2518   000045                     NVMADRU         equ	69	;# 
  2519   000046                     NVMDAT          equ	70	;# 
  2520   000046                     NVMDATL         equ	70	;# 
  2521   000047                     NVMDATH         equ	71	;# 
  2522   000048                     VREGCON         equ	72	;# 
  2523   000049                     BORCON          equ	73	;# 
  2524   00004A                     HLVDCON0        equ	74	;# 
  2525   00004B                     HLVDCON1        equ	75	;# 
  2526   00004C                     ZCDCON          equ	76	;# 
  2527   000062                     PMD0            equ	98	;# 
  2528   000063                     PMD1            equ	99	;# 
  2529   000064                     PMD2            equ	100	;# 
  2530   000065                     PMD3            equ	101	;# 
  2531   000066                     PMD4            equ	102	;# 
  2532   000067                     PMD5            equ	103	;# 
  2533   000068                     PMD6            equ	104	;# 
  2534   00006F                     CMOUT           equ	111	;# 
  2535   000070                     CM1CON0         equ	112	;# 
  2536   000071                     CM1CON1         equ	113	;# 
  2537   000072                     CM1NCH          equ	114	;# 
  2538   000073                     CM1PCH          equ	115	;# 
  2539   000074                     CM2CON0         equ	116	;# 
  2540   000075                     CM2CON1         equ	117	;# 
  2541   000076                     CM2NCH          equ	118	;# 
  2542   000077                     CM2PCH          equ	119	;# 
  2543   000078                     WDTCON0         equ	120	;# 
  2544   000079                     WDTCON1         equ	121	;# 
  2545   00007A                     WDTPS           equ	122	;# 
  2546   00007A                     WDTPSL          equ	122	;# 
  2547   00007B                     WDTPSH          equ	123	;# 
  2548   00007C                     WDTTMR          equ	124	;# 
  2549   00007D                     DAC1DAT         equ	125	;# 
  2550   00007D                     DAC1DATL        equ	125	;# 
  2551   00007E                     DAC1DATH        equ	126	;# 
  2552   00007F                     DAC1CON         equ	127	;# 
  2553   000080                     SPI1RXB         equ	128	;# 
  2554   000081                     SPI1TXB         equ	129	;# 
  2555   000082                     SPI1TCNT        equ	130	;# 
  2556   000082                     SPI1TCNTL       equ	130	;# 
  2557   000083                     SPI1TCNTH       equ	131	;# 
  2558   000084                     SPI1CON0        equ	132	;# 
  2559   000085                     SPI1CON1        equ	133	;# 
  2560   000086                     SPI1CON2        equ	134	;# 
  2561   000087                     SPI1STATUS      equ	135	;# 
  2562   000088                     SPI1TWIDTH      equ	136	;# 
  2563   000089                     SPI1BAUD        equ	137	;# 
  2564   00008A                     SPI1INTF        equ	138	;# 
  2565   00008B                     SPI1INTE        equ	139	;# 
  2566   00008C                     SPI1CLK         equ	140	;# 
  2567   0000AC                     ACTCON          equ	172	;# 
  2568   0000AD                     OSCCON1         equ	173	;# 
  2569   0000AE                     OSCCON2         equ	174	;# 
  2570   0000AF                     OSCCON3         equ	175	;# 
  2571   0000B0                     OSCTUNE         equ	176	;# 
  2572   0000B1                     OSCFRQ          equ	177	;# 
  2573   0000B1                     OSCFREQ         equ	177	;# 
  2574   0000B2                     OSCSTAT         equ	178	;# 
  2575   0000B2                     OSCSTAT1        equ	178	;# 
  2576   0000B3                     OSCEN           equ	179	;# 
  2577   0000B4                     PRLOCK          equ	180	;# 
  2578   0000B5                     SCANPR          equ	181	;# 
  2579   0000B6                     DMA1PR          equ	182	;# 
  2580   0000B7                     DMA2PR          equ	183	;# 
  2581   0000B8                     DMA3PR          equ	184	;# 
  2582   0000B9                     DMA4PR          equ	185	;# 
  2583   0000BE                     MAINPR          equ	190	;# 
  2584   0000BF                     ISRPR           equ	191	;# 
  2585   0000C0                     DAC2DAT         equ	192	;# 
  2586   0000C0                     DAC2DATL        equ	192	;# 
  2587   0000C2                     DAC2CON         equ	194	;# 
  2588   0000C3                     DAC3DAT         equ	195	;# 
  2589   0000C3                     DAC3DATL        equ	195	;# 
  2590   0000C5                     DAC3CON         equ	197	;# 
  2591   0000D4                     CLCDATA         equ	212	;# 
  2592   0000D5                     CLCSELECT       equ	213	;# 
  2593   0000D6                     CLCnCON         equ	214	;# 
  2594   0000D7                     CLCnPOL         equ	215	;# 
  2595   0000D8                     CLCnSEL0        equ	216	;# 
  2596   0000D9                     CLCnSEL1        equ	217	;# 
  2597   0000DA                     CLCnSEL2        equ	218	;# 
  2598   0000DB                     CLCnSEL3        equ	219	;# 
  2599   0000DC                     CLCnGLS0        equ	220	;# 
  2600   0000DD                     CLCnGLS1        equ	221	;# 
  2601   0000DE                     CLCnGLS2        equ	222	;# 
  2602   0000DF                     CLCnGLS3        equ	223	;# 
  2603   0000E8                     DMASELECT       equ	232	;# 
  2604   0000E9                     DMAnBUF         equ	233	;# 
  2605   0000EA                     DMAnDCNT        equ	234	;# 
  2606   0000EA                     DMAnDCNTL       equ	234	;# 
  2607   0000EB                     DMAnDCNTH       equ	235	;# 
  2608   0000EC                     DMAnDPTR        equ	236	;# 
  2609   0000EC                     DMAnDPTRL       equ	236	;# 
  2610   0000ED                     DMAnDPTRH       equ	237	;# 
  2611   0000EE                     DMAnDSZ         equ	238	;# 
  2612   0000EE                     DMAnDSZL        equ	238	;# 
  2613   0000EF                     DMAnDSZH        equ	239	;# 
  2614   0000F0                     DMAnDSA         equ	240	;# 
  2615   0000F0                     DMAnDSAL        equ	240	;# 
  2616   0000F1                     DMAnDSAH        equ	241	;# 
  2617   0000F2                     DMAnSCNT        equ	242	;# 
  2618   0000F2                     DMAnSCNTL       equ	242	;# 
  2619   0000F3                     DMAnSCNTH       equ	243	;# 
  2620   0000F4                     DMAnSPTR        equ	244	;# 
  2621   0000F4                     DMAnSPTRL       equ	244	;# 
  2622   0000F5                     DMAnSPTRH       equ	245	;# 
  2623   0000F6                     DMAnSPTRU       equ	246	;# 
  2624   0000F7                     DMAnSSZ         equ	247	;# 
  2625   0000F7                     DMAnSSZL        equ	247	;# 
  2626   0000F8                     DMAnSSZH        equ	248	;# 
  2627   0000F9                     DMAnSSA         equ	249	;# 
  2628   0000F9                     DMAnSSAL        equ	249	;# 
  2629   0000FA                     DMAnSSAH        equ	250	;# 
  2630   0000FB                     DMAnSSAU        equ	251	;# 
  2631   0000FC                     DMAnCON0        equ	252	;# 
  2632   0000FD                     DMAnCON1        equ	253	;# 
  2633   0000FE                     DMAnAIRQ        equ	254	;# 
  2634   0000FF                     DMAnSIRQ        equ	255	;# 
  2635   000100                     PORTW           equ	256	;# 
  2636   000101                     LATW            equ	257	;# 
  2637   000102                     PORTWIN0        equ	258	;# 
  2638   000103                     PORTWIN1        equ	259	;# 
  2639   000104                     PORTWIN2        equ	260	;# 
  2640   000105                     PORTWIN3        equ	261	;# 
  2641   000106                     PORTWIN4        equ	262	;# 
  2642   000107                     PORTWIN5        equ	263	;# 
  2643   000108                     PORTWIN6        equ	264	;# 
  2644   000109                     PORTWIN7        equ	265	;# 
  2645   00010A                     PORTWCLK        equ	266	;# 
  2646   00010B                     PORTWDF         equ	267	;# 
  2647   00010C                     PORTWCON        equ	268	;# 
  2648   000110                     ADCGA           equ	272	;# 
  2649   000111                     ADCGB           equ	273	;# 
  2650   000112                     ADCGC           equ	274	;# 
  2651   000113                     ADCGD           equ	275	;# 
  2652   000114                     ADCGE           equ	276	;# 
  2653   000115                     ADCGF           equ	277	;# 
  2654   00011F                     OPA1CON0        equ	287	;# 
  2655   000120                     OPA1CON1        equ	288	;# 
  2656   000121                     OPA1CON2        equ	289	;# 
  2657   000122                     OPA1CON3        equ	290	;# 
  2658   000123                     OPA1CON4        equ	291	;# 
  2659   000124                     OPA1HWC         equ	292	;# 
  2660   000125                     OPA1OFFSET      equ	293	;# 
  2661   000126                     OPA1ORS         equ	294	;# 
  2662   000127                     OPA2CON0        equ	295	;# 
  2663   000128                     OPA2CON1        equ	296	;# 
  2664   000129                     OPA2CON2        equ	297	;# 
  2665   00012A                     OPA2CON3        equ	298	;# 
  2666   00012B                     OPA2CON4        equ	299	;# 
  2667   00012C                     OPA2HWC         equ	300	;# 
  2668   00012D                     OPA2OFFSET      equ	301	;# 
  2669   00012E                     OPA2ORS         equ	302	;# 
  2670   000140                     LATA            equ	320	;# 
  2671   000141                     LATB            equ	321	;# 
  2672   000142                     LATC            equ	322	;# 
  2673   000143                     LATD            equ	323	;# 
  2674   000144                     LATE            equ	324	;# 
  2675   000145                     LATF            equ	325	;# 
  2676   000148                     TRISA           equ	328	;# 
  2677   000149                     TRISB           equ	329	;# 
  2678   00014A                     TRISC           equ	330	;# 
  2679   00014B                     TRISD           equ	331	;# 
  2680   00014C                     TRISE           equ	332	;# 
  2681   00014D                     TRISF           equ	333	;# 
  2682   000150                     PORTA           equ	336	;# 
  2683   000151                     PORTB           equ	337	;# 
  2684   000152                     PORTC           equ	338	;# 
  2685   000153                     PORTD           equ	339	;# 
  2686   000154                     PORTE           equ	340	;# 
  2687   000155                     PORTF           equ	341	;# 
  2688   0001C0                     APMCON          equ	448	;# 
  2689   0001C1                     APMPRE          equ	449	;# 
  2690   0001C1                     APMPREL         equ	449	;# 
  2691   0001C2                     APMPREH         equ	450	;# 
  2692   0001C3                     APMPER          equ	451	;# 
  2693   0001C3                     APMPERL         equ	451	;# 
  2694   0001C4                     APMPERH         equ	452	;# 
  2695   0001C5                     APMSTART1       equ	453	;# 
  2696   0001C5                     APMSTART1L      equ	453	;# 
  2697   0001C6                     APMSTART1H      equ	454	;# 
  2698   0001C7                     APMPERS1        equ	455	;# 
  2699   0001C7                     APMPERS1L       equ	455	;# 
  2700   0001C8                     APMPERS1H       equ	456	;# 
  2701   0001C9                     APMSTART2       equ	457	;# 
  2702   0001C9                     APMSTART2L      equ	457	;# 
  2703   0001CA                     APMSTART2H      equ	458	;# 
  2704   0001CB                     APMSTART2U      equ	459	;# 
  2705   0001CC                     APMPERS2        equ	460	;# 
  2706   0001CC                     APMPERS2L       equ	460	;# 
  2707   0001CD                     APMPERS2H       equ	461	;# 
  2708   0001CE                     APMEND1         equ	462	;# 
  2709   0001CE                     APMEND1L        equ	462	;# 
  2710   0001CF                     APMEND1H        equ	463	;# 
  2711   0001D0                     APMEND1U        equ	464	;# 
  2712   0001D1                     APMPERE1        equ	465	;# 
  2713   0001D1                     APMPERE1L       equ	465	;# 
  2714   0001D2                     APMPERE1H       equ	466	;# 
  2715   0001D3                     APMEND2         equ	467	;# 
  2716   0001D3                     APMEND2L        equ	467	;# 
  2717   0001D4                     APMEND2H        equ	468	;# 
  2718   0001D5                     APMEND2U        equ	469	;# 
  2719   0001D6                     APMPERE2        equ	470	;# 
  2720   0001D6                     APMPERE2L       equ	470	;# 
  2721   0001D7                     APMPERE2H       equ	471	;# 
  2722   0001D8                     APMCLK          equ	472	;# 
  2723   0001D9                     APMSTATUS       equ	473	;# 
  2724   0001D9                     APMSTATUSL      equ	473	;# 
  2725   0001DA                     APMSTATUSH      equ	474	;# 
  2726   000200                     PPSLOCK         equ	512	;# 
  2727   000201                     RA0PPS          equ	513	;# 
  2728   000202                     RA1PPS          equ	514	;# 
  2729   000203                     RA2PPS          equ	515	;# 
  2730   000204                     RA3PPS          equ	516	;# 
  2731   000205                     RA4PPS          equ	517	;# 
  2732   000206                     RA5PPS          equ	518	;# 
  2733   000207                     RA6PPS          equ	519	;# 
  2734   000208                     RA7PPS          equ	520	;# 
  2735   000209                     RB0PPS          equ	521	;# 
  2736   00020A                     RB1PPS          equ	522	;# 
  2737   00020B                     RB2PPS          equ	523	;# 
  2738   00020C                     RB3PPS          equ	524	;# 
  2739   00020D                     RB4PPS          equ	525	;# 
  2740   00020E                     RB5PPS          equ	526	;# 
  2741   00020F                     RB6PPS          equ	527	;# 
  2742   000210                     RB7PPS          equ	528	;# 
  2743   000211                     RC0PPS          equ	529	;# 
  2744   000212                     RC1PPS          equ	530	;# 
  2745   000213                     RC2PPS          equ	531	;# 
  2746   000214                     RC3PPS          equ	532	;# 
  2747   000215                     RC4PPS          equ	533	;# 
  2748   000216                     RC5PPS          equ	534	;# 
  2749   000217                     RC6PPS          equ	535	;# 
  2750   000218                     RC7PPS          equ	536	;# 
  2751   000219                     RD0PPS          equ	537	;# 
  2752   00021A                     RD1PPS          equ	538	;# 
  2753   00021B                     RD2PPS          equ	539	;# 
  2754   00021C                     RD3PPS          equ	540	;# 
  2755   00021D                     RD4PPS          equ	541	;# 
  2756   00021E                     RD5PPS          equ	542	;# 
  2757   00021F                     RD6PPS          equ	543	;# 
  2758   000220                     RD7PPS          equ	544	;# 
  2759   000221                     RE0PPS          equ	545	;# 
  2760   000222                     RE1PPS          equ	546	;# 
  2761   000223                     RE2PPS          equ	547	;# 
  2762   000225                     RF0PPS          equ	549	;# 
  2763   000226                     RF1PPS          equ	550	;# 
  2764   000227                     RF2PPS          equ	551	;# 
  2765   000228                     RF3PPS          equ	552	;# 
  2766   000229                     RF4PPS          equ	553	;# 
  2767   00022A                     RF5PPS          equ	554	;# 
  2768   00022B                     RF6PPS          equ	555	;# 
  2769   00022C                     RF7PPS          equ	556	;# 
  2770   00023E                     INT0PPS         equ	574	;# 
  2771   00023F                     INT1PPS         equ	575	;# 
  2772   000240                     INT2PPS         equ	576	;# 
  2773   000241                     T0CKIPPS        equ	577	;# 
  2774   000242                     T1CKIPPS        equ	578	;# 
  2775   000243                     T1GPPS          equ	579	;# 
  2776   000244                     T3CKIPPS        equ	580	;# 
  2777   000245                     T3GPPS          equ	581	;# 
  2778   000248                     T2INPPS         equ	584	;# 
  2779   000249                     T4INPPS         equ	585	;# 
  2780   00024F                     CCP1PPS         equ	591	;# 
  2781   000250                     CCP2PPS         equ	592	;# 
  2782   000251                     PWM1ERSPPS      equ	593	;# 
  2783   000252                     PWM2ERSPPS      equ	594	;# 
  2784   000253                     PWM3ERSPPS      equ	595	;# 
  2785   000257                     PWMIN0PPS       equ	599	;# 
  2786   000258                     PWMIN1PPS       equ	600	;# 
  2787   00025B                     CWG1PPS         equ	603	;# 
  2788   00025B                     CWG1INPPS       equ	603	;# 
  2789   000261                     CLCIN0PPS       equ	609	;# 
  2790   000262                     CLCIN1PPS       equ	610	;# 
  2791   000263                     CLCIN2PPS       equ	611	;# 
  2792   000264                     CLCIN3PPS       equ	612	;# 
  2793   000265                     CLCIN4PPS       equ	613	;# 
  2794   000266                     CLCIN5PPS       equ	614	;# 
  2795   000267                     CLCIN6PPS       equ	615	;# 
  2796   000268                     CLCIN7PPS       equ	616	;# 
  2797   000269                     ADACTPPS        equ	617	;# 
  2798   00026A                     SPI1SCKPPS      equ	618	;# 
  2799   00026B                     SPI1SDIPPS      equ	619	;# 
  2800   00026C                     SPI1SSPPS       equ	620	;# 
  2801   000270                     I2C1SDAPPS      equ	624	;# 
  2802   000271                     I2C1SCLPPS      equ	625	;# 
  2803   000272                     U1RXPPS         equ	626	;# 
  2804   000273                     U1CTSPPS        equ	627	;# 
  2805   000274                     U2RXPPS         equ	628	;# 
  2806   000275                     U2CTSPPS        equ	629	;# 
  2807   000276                     OPA1ORPPS       equ	630	;# 
  2808   000277                     OPA2ORPPS       equ	631	;# 
  2809   000278                     TUIN0PPS        equ	632	;# 
  2810   000279                     TUIN1PPS        equ	633	;# 
  2811   00027A                     APMCLKPPS       equ	634	;# 
  2812   000285                     RB2I2C          equ	645	;# 
  2813   000286                     RB1I2C          equ	646	;# 
  2814   000287                     RC4I2C          equ	647	;# 
  2815   000288                     RC3I2C          equ	648	;# 
  2816   000289                     I2C1RXB         equ	649	;# 
  2817   00028A                     I2C1TXB         equ	650	;# 
  2818   00028B                     I2C1CNT         equ	651	;# 
  2819   00028B                     I2C1CNTL        equ	651	;# 
  2820   00028C                     I2C1CNTH        equ	652	;# 
  2821   00028D                     I2C1ADB0        equ	653	;# 
  2822   00028E                     I2C1ADB1        equ	654	;# 
  2823   00028F                     I2C1ADR0        equ	655	;# 
  2824   000290                     I2C1ADR1        equ	656	;# 
  2825   000291                     I2C1ADR2        equ	657	;# 
  2826   000292                     I2C1ADR3        equ	658	;# 
  2827   000293                     I2C1CON0        equ	659	;# 
  2828   000294                     I2C1CON1        equ	660	;# 
  2829   000295                     I2C1CON2        equ	661	;# 
  2830   000296                     I2C1CON3        equ	662	;# 
  2831   000297                     I2C1ERR         equ	663	;# 
  2832   000298                     I2C1STAT0       equ	664	;# 
  2833   000299                     I2C1STAT1       equ	665	;# 
  2834   00029A                     I2C1PIR         equ	666	;# 
  2835   00029B                     I2C1PIE         equ	667	;# 
  2836   00029C                     I2C1BTO         equ	668	;# 
  2837   00029D                     I2C1BAUD        equ	669	;# 
  2838   00029E                     I2C1CLK         equ	670	;# 
  2839   00029F                     I2C1BTOC        equ	671	;# 
  2840   0002A0                     U1RXB           equ	672	;# 
  2841   0002A0                     U1RXBL          equ	672	;# 
  2842   0002A1                     U1RXCHK         equ	673	;# 
  2843   0002A2                     U1TXB           equ	674	;# 
  2844   0002A2                     U1TXBL          equ	674	;# 
  2845   0002A3                     U1TXCHK         equ	675	;# 
  2846   0002A4                     U1P1            equ	676	;# 
  2847   0002A4                     U1P1L           equ	676	;# 
  2848   0002A5                     U1P1H           equ	677	;# 
  2849   0002A6                     U1P2            equ	678	;# 
  2850   0002A6                     U1P2L           equ	678	;# 
  2851   0002A7                     U1P2H           equ	679	;# 
  2852   0002A8                     U1P3            equ	680	;# 
  2853   0002A8                     U1P3L           equ	680	;# 
  2854   0002A9                     U1P3H           equ	681	;# 
  2855   0002AA                     U1CON0          equ	682	;# 
  2856   0002AB                     U1CON1          equ	683	;# 
  2857   0002AC                     U1CON2          equ	684	;# 
  2858   0002AD                     U1BRG           equ	685	;# 
  2859   0002AD                     U1BRGL          equ	685	;# 
  2860   0002AE                     U1BRGH          equ	686	;# 
  2861   0002AF                     U1FIFO          equ	687	;# 
  2862   0002B0                     U1UIR           equ	688	;# 
  2863   0002B1                     U1ERRIR         equ	689	;# 
  2864   0002B2                     U1ERRIE         equ	690	;# 
  2865   0002B4                     U2RXB           equ	692	;# 
  2866   0002B4                     U2RXBL          equ	692	;# 
  2867   0002B6                     U2TXB           equ	694	;# 
  2868   0002B6                     U2TXBL          equ	694	;# 
  2869   0002B8                     U2P1            equ	696	;# 
  2870   0002B8                     U2P1L           equ	696	;# 
  2871   0002BA                     U2P2            equ	698	;# 
  2872   0002BA                     U2P2L           equ	698	;# 
  2873   0002BC                     U2P3            equ	700	;# 
  2874   0002BC                     U2P3L           equ	700	;# 
  2875   0002BE                     U2CON0          equ	702	;# 
  2876   0002BF                     U2CON1          equ	703	;# 
  2877   0002C0                     U2CON2          equ	704	;# 
  2878   0002C1                     U2BRG           equ	705	;# 
  2879   0002C1                     U2BRGL          equ	705	;# 
  2880   0002C2                     U2BRGH          equ	706	;# 
  2881   0002C3                     U2FIFO          equ	707	;# 
  2882   0002C4                     U2UIR           equ	708	;# 
  2883   0002C5                     U2ERRIR         equ	709	;# 
  2884   0002C6                     U2ERRIE         equ	710	;# 
  2885   000312                     TMR1            equ	786	;# 
  2886   000312                     TMR1L           equ	786	;# 
  2887   000313                     TMR1H           equ	787	;# 
  2888   000314                     T1CON           equ	788	;# 
  2889   000314                     TMR1CON         equ	788	;# 
  2890   000315                     T1GCON          equ	789	;# 
  2891   000315                     TMR1GCON        equ	789	;# 
  2892   000316                     T1GATE          equ	790	;# 
  2893   000316                     TMR1GATE        equ	790	;# 
  2894   000317                     T1CLK           equ	791	;# 
  2895   000317                     TMR1CLK         equ	791	;# 
  2896   000317                     PR1             equ	791	;# 
  2897   000318                     TMR0L           equ	792	;# 
  2898   000318                     TMR0            equ	792	;# 
  2899   000319                     TMR0H           equ	793	;# 
  2900   000319                     PR0             equ	793	;# 
  2901   00031A                     T0CON0          equ	794	;# 
  2902   00031B                     T0CON1          equ	795	;# 
  2903   00031D                     T2TMR           equ	797	;# 
  2904   00031D                     TMR2            equ	797	;# 
  2905   00031E                     T2PR            equ	798	;# 
  2906   00031E                     PR2             equ	798	;# 
  2907   00031F                     T2CON           equ	799	;# 
  2908   000320                     T2HLT           equ	800	;# 
  2909   000321                     T2CLKCON        equ	801	;# 
  2910   000321                     T2CLK           equ	801	;# 
  2911   000322                     T2RST           equ	802	;# 
  2912   000323                     TMR3            equ	803	;# 
  2913   000323                     TMR3L           equ	803	;# 
  2914   000324                     TMR3H           equ	804	;# 
  2915   000325                     T3CON           equ	805	;# 
  2916   000325                     TMR3CON         equ	805	;# 
  2917   000326                     T3GCON          equ	806	;# 
  2918   000326                     TMR3GCON        equ	806	;# 
  2919   000327                     T3GATE          equ	807	;# 
  2920   000327                     TMR3GATE        equ	807	;# 
  2921   000328                     T3CLK           equ	808	;# 
  2922   000328                     TMR3CLK         equ	808	;# 
  2923   000328                     PR3             equ	808	;# 
  2924   00032A                     T4TMR           equ	810	;# 
  2925   00032A                     TMR4            equ	810	;# 
  2926   00032B                     T4PR            equ	811	;# 
  2927   00032B                     PR4             equ	811	;# 
  2928   00032C                     T4CON           equ	812	;# 
  2929   00032D                     T4HLT           equ	813	;# 
  2930   00032E                     T4CLKCON        equ	814	;# 
  2931   00032E                     T4CLK           equ	814	;# 
  2932   00032F                     T4RST           equ	815	;# 
  2933   000340                     CCPR1           equ	832	;# 
  2934   000340                     CCPR1L          equ	832	;# 
  2935   000341                     CCPR1H          equ	833	;# 
  2936   000342                     CCP1CON         equ	834	;# 
  2937   000343                     CCP1CAP         equ	835	;# 
  2938   000344                     CCPR2           equ	836	;# 
  2939   000344                     CCPR2L          equ	836	;# 
  2940   000345                     CCPR2H          equ	837	;# 
  2941   000346                     CCP2CON         equ	838	;# 
  2942   000347                     CCP2CAP         equ	839	;# 
  2943   00034C                     CCPTMRS0        equ	844	;# 
  2944   00034E                     CRCDATA         equ	846	;# 
  2945   00034E                     CRCDATAL        equ	846	;# 
  2946   00034F                     CRCDATAH        equ	847	;# 
  2947   000350                     CRCDATAU        equ	848	;# 
  2948   000351                     CRCDATAT        equ	849	;# 
  2949   000352                     CRCOUT          equ	850	;# 
  2950   000352                     CRCSHFT         equ	850	;# 
  2951   000352                     CRCXOR          equ	850	;# 
  2952   000352                     CRCOUTL         equ	850	;# 
  2953   000352                     CRCSHFTL        equ	850	;# 
  2954   000352                     CRCSHIFTL       equ	850	;# 
  2955   000352                     CRCXORL         equ	850	;# 
  2956   000353                     CRCOUTH         equ	851	;# 
  2957   000353                     CRCSHFTH        equ	851	;# 
  2958   000353                     CRCSHIFTH       equ	851	;# 
  2959   000353                     CRCXORH         equ	851	;# 
  2960   000354                     CRCOUTU         equ	852	;# 
  2961   000354                     CRCSHFTU        equ	852	;# 
  2962   000354                     CRCSHIFTU       equ	852	;# 
  2963   000354                     CRCXORU         equ	852	;# 
  2964   000355                     CRCOUTT         equ	853	;# 
  2965   000355                     CRCSHFTT        equ	853	;# 
  2966   000355                     CRCSHIFTT       equ	853	;# 
  2967   000355                     CRCXORT         equ	853	;# 
  2968   000356                     CRCCON0         equ	854	;# 
  2969   000357                     CRCCON1         equ	855	;# 
  2970   000358                     CRCCON2         equ	856	;# 
  2971   00035A                     SCANLADR        equ	858	;# 
  2972   00035A                     SCANLADRL       equ	858	;# 
  2973   00035B                     SCANLADRH       equ	859	;# 
  2974   00035C                     SCANLADRU       equ	860	;# 
  2975   00035D                     SCANHADR        equ	861	;# 
  2976   00035D                     SCANHADRL       equ	861	;# 
  2977   00035E                     SCANHADRH       equ	862	;# 
  2978   00035F                     SCANHADRU       equ	863	;# 
  2979   000360                     SCANCON0        equ	864	;# 
  2980   000361                     SCANTRIG        equ	865	;# 
  2981   000373                     STATUS_CSHAD    equ	883	;# 
  2982   000374                     WREG_CSHAD      equ	884	;# 
  2983   000375                     BSR_CSHAD       equ	885	;# 
  2984   000376                     SHADCON         equ	886	;# 
  2985   000377                     STATUS_SHAD     equ	887	;# 
  2986   000378                     WREG_SHAD       equ	888	;# 
  2987   000379                     BSR_SHAD        equ	889	;# 
  2988   00037A                     PCLATH_SHAD     equ	890	;# 
  2989   00037B                     PCLATU_SHAD     equ	891	;# 
  2990   00037C                     FSR0SH          equ	892	;# 
  2991   00037C                     FSR0L_SHAD      equ	892	;# 
  2992   00037D                     FSR0H_SHAD      equ	893	;# 
  2993   00037E                     FSR1SH          equ	894	;# 
  2994   00037E                     FSR1L_SHAD      equ	894	;# 
  2995   00037F                     FSR1H_SHAD      equ	895	;# 
  2996   000380                     FSR2SH          equ	896	;# 
  2997   000380                     FSR2L_SHAD      equ	896	;# 
  2998   000381                     FSR2H_SHAD      equ	897	;# 
  2999   000382                     PRODSH          equ	898	;# 
  3000   000382                     PRODL_SHAD      equ	898	;# 
  3001   000383                     PRODH_SHAD      equ	899	;# 
  3002   0003A0                     TU16ACON0       equ	928	;# 
  3003   0003A1                     TU16ACON1       equ	929	;# 
  3004   0003A2                     TU16AHLT        equ	930	;# 
  3005   0003A3                     TU16APS         equ	931	;# 
  3006   0003A4                     TU16ATMR        equ	932	;# 
  3007   0003A4                     TU16ACR         equ	932	;# 
  3008   0003A4                     TU16ATMRL       equ	932	;# 
  3009   0003A4                     TU16ACRL        equ	932	;# 
  3010   0003A5                     TU16ATMRH       equ	933	;# 
  3011   0003A5                     TU16ACRH        equ	933	;# 
  3012   0003A6                     TU16APR         equ	934	;# 
  3013   0003A6                     TU16APRL        equ	934	;# 
  3014   0003A7                     TU16APRH        equ	935	;# 
  3015   0003A8                     TU16ACLK        equ	936	;# 
  3016   0003A9                     TU16AERS        equ	937	;# 
  3017   0003AA                     TU16BCON0       equ	938	;# 
  3018   0003AB                     TU16BCON1       equ	939	;# 
  3019   0003AC                     TU16BHLT        equ	940	;# 
  3020   0003AD                     TU16BPS         equ	941	;# 
  3021   0003AE                     TU16BTMR        equ	942	;# 
  3022   0003AE                     TU16BCR         equ	942	;# 
  3023   0003AE                     TU16BTMRL       equ	942	;# 
  3024   0003AE                     TU16BCRL        equ	942	;# 
  3025   0003AF                     TU16BTMRH       equ	943	;# 
  3026   0003AF                     TU16BCRH        equ	943	;# 
  3027   0003B0                     TU16BPR         equ	944	;# 
  3028   0003B0                     TU16BPRL        equ	944	;# 
  3029   0003B1                     TU16BPRH        equ	945	;# 
  3030   0003B2                     TU16BCLK        equ	946	;# 
  3031   0003B3                     TU16BERS        equ	947	;# 
  3032   0003B4                     TUCHAIN         equ	948	;# 
  3033   0003BC                     CWG1CLK         equ	956	;# 
  3034   0003BC                     CWG1CLKCON      equ	956	;# 
  3035   0003BD                     CWG1ISM         equ	957	;# 
  3036   0003BD                     CWG1DAT         equ	957	;# 
  3037   0003BE                     CWG1DBR         equ	958	;# 
  3038   0003BF                     CWG1DBF         equ	959	;# 
  3039   0003C0                     CWG1CON0        equ	960	;# 
  3040   0003C1                     CWG1CON1        equ	961	;# 
  3041   0003C2                     CWG1AS0         equ	962	;# 
  3042   0003C3                     CWG1AS1         equ	963	;# 
  3043   0003C4                     CWG1STR         equ	964	;# 
  3044   0003D7                     FVRCON          equ	983	;# 
  3045   0003D8                     ADCPCON         equ	984	;# 
  3046   0003D8                     ADCP            equ	984	;# 
  3047   0003D9                     ADLTH           equ	985	;# 
  3048   0003D9                     ADLTHL          equ	985	;# 
  3049   0003DA                     ADLTHH          equ	986	;# 
  3050   0003DB                     ADUTH           equ	987	;# 
  3051   0003DB                     ADUTHL          equ	987	;# 
  3052   0003DC                     ADUTHH          equ	988	;# 
  3053   0003DD                     ADERR           equ	989	;# 
  3054   0003DD                     ADERRL          equ	989	;# 
  3055   0003DE                     ADERRH          equ	990	;# 
  3056   0003DF                     ADSTPT          equ	991	;# 
  3057   0003DF                     ADSTPTL         equ	991	;# 
  3058   0003E0                     ADSTPTH         equ	992	;# 
  3059   0003E1                     ADFLTR          equ	993	;# 
  3060   0003E1                     ADFLTRL         equ	993	;# 
  3061   0003E2                     ADFLTRH         equ	994	;# 
  3062   0003E3                     ADACC           equ	995	;# 
  3063   0003E3                     ADACCL          equ	995	;# 
  3064   0003E4                     ADACCH          equ	996	;# 
  3065   0003E5                     ADACCU          equ	997	;# 
  3066   0003E6                     ADCNT           equ	998	;# 
  3067   0003E7                     ADRPT           equ	999	;# 
  3068   0003E8                     ADPREV          equ	1000	;# 
  3069   0003E8                     ADPREVL         equ	1000	;# 
  3070   0003E9                     ADPREVH         equ	1001	;# 
  3071   0003EA                     ADRES           equ	1002	;# 
  3072   0003EA                     ADRESL          equ	1002	;# 
  3073   0003EB                     ADRESH          equ	1003	;# 
  3074   0003EC                     ADPCH           equ	1004	;# 
  3075   0003ED                     ADNCH           equ	1005	;# 
  3076   0003EE                     ADACQ           equ	1006	;# 
  3077   0003EE                     ADACQL          equ	1006	;# 
  3078   0003EF                     ADACQH          equ	1007	;# 
  3079   0003F0                     ADCAP           equ	1008	;# 
  3080   0003F1                     ADPRE           equ	1009	;# 
  3081   0003F1                     ADPREL          equ	1009	;# 
  3082   0003F2                     ADPREH          equ	1010	;# 
  3083   0003F3                     ADCON0          equ	1011	;# 
  3084   0003F4                     ADCON1          equ	1012	;# 
  3085   0003F5                     ADCON2          equ	1013	;# 
  3086   0003F6                     ADCON3          equ	1014	;# 
  3087   0003F7                     ADSTAT          equ	1015	;# 
  3088   0003F8                     ADREF           equ	1016	;# 
  3089   0003F9                     ADACT           equ	1017	;# 
  3090   0003FA                     ADCLK           equ	1018	;# 
  3091   0003FB                     ADCTX           equ	1019	;# 
  3092   0003FC                     ADCSEL1         equ	1020	;# 
  3093   0003FD                     ADCSEL2         equ	1021	;# 
  3094   0003FE                     ADCSEL3         equ	1022	;# 
  3095   0003FF                     ADCSEL4         equ	1023	;# 
  3096   000400                     ANSELA          equ	1024	;# 
  3097   000401                     WPUA            equ	1025	;# 
  3098   000402                     ODCONA          equ	1026	;# 
  3099   000403                     SLRCONA         equ	1027	;# 
  3100   000404                     INLVLA          equ	1028	;# 
  3101   000405                     IOCAP           equ	1029	;# 
  3102   000406                     IOCAN           equ	1030	;# 
  3103   000407                     IOCAF           equ	1031	;# 
  3104   000408                     ANSELB          equ	1032	;# 
  3105   000409                     WPUB            equ	1033	;# 
  3106   00040A                     ODCONB          equ	1034	;# 
  3107   00040B                     SLRCONB         equ	1035	;# 
  3108   00040C                     INLVLB          equ	1036	;# 
  3109   00040D                     IOCBP           equ	1037	;# 
  3110   00040E                     IOCBN           equ	1038	;# 
  3111   00040F                     IOCBF           equ	1039	;# 
  3112   000410                     ANSELC          equ	1040	;# 
  3113   000411                     WPUC            equ	1041	;# 
  3114   000412                     ODCONC          equ	1042	;# 
  3115   000413                     SLRCONC         equ	1043	;# 
  3116   000414                     INLVLC          equ	1044	;# 
  3117   000415                     IOCCP           equ	1045	;# 
  3118   000416                     IOCCN           equ	1046	;# 
  3119   000417                     IOCCF           equ	1047	;# 
  3120   000418                     ANSELD          equ	1048	;# 
  3121   000419                     WPUD            equ	1049	;# 
  3122   00041A                     ODCOND          equ	1050	;# 
  3123   00041B                     SLRCOND         equ	1051	;# 
  3124   00041C                     INLVLD          equ	1052	;# 
  3125   000420                     ANSELE          equ	1056	;# 
  3126   000421                     WPUE            equ	1057	;# 
  3127   000422                     ODCONE          equ	1058	;# 
  3128   000423                     SLRCONE         equ	1059	;# 
  3129   000424                     INLVLE          equ	1060	;# 
  3130   000425                     IOCEP           equ	1061	;# 
  3131   000426                     IOCEN           equ	1062	;# 
  3132   000427                     IOCEF           equ	1063	;# 
  3133   000428                     ANSELF          equ	1064	;# 
  3134   000429                     WPUF            equ	1065	;# 
  3135   00042A                     ODCONF          equ	1066	;# 
  3136   00042B                     SLRCONF         equ	1067	;# 
  3137   00042C                     INLVLF          equ	1068	;# 
  3138   00043D                     IOCWP           equ	1085	;# 
  3139   00043E                     IOCWN           equ	1086	;# 
  3140   00043F                     IOCWF           equ	1087	;# 
  3141   000440                     NCO1ACC         equ	1088	;# 
  3142   000440                     NCO1ACCL        equ	1088	;# 
  3143   000441                     NCO1ACCH        equ	1089	;# 
  3144   000442                     NCO1ACCU        equ	1090	;# 
  3145   000443                     NCO1INC         equ	1091	;# 
  3146   000443                     NCO1INCL        equ	1091	;# 
  3147   000444                     NCO1INCH        equ	1092	;# 
  3148   000445                     NCO1INCU        equ	1093	;# 
  3149   000446                     NCO1CON         equ	1094	;# 
  3150   000447                     NCO1CLK         equ	1095	;# 
  3151   000458                     FSCMCON         equ	1112	;# 
  3152   000459                     IVTLOCK         equ	1113	;# 
  3153   00045A                     IVTAD           equ	1114	;# 
  3154   00045A                     IVTADL          equ	1114	;# 
  3155   00045B                     IVTADH          equ	1115	;# 
  3156   00045C                     IVTADU          equ	1116	;# 
  3157   00045D                     IVTBASE         equ	1117	;# 
  3158   00045D                     IVTBASEL        equ	1117	;# 
  3159   00045E                     IVTBASEH        equ	1118	;# 
  3160   00045F                     IVTBASEU        equ	1119	;# 
  3161   000460                     PWM1ERS         equ	1120	;# 
  3162   000461                     PWM1CLK         equ	1121	;# 
  3163   000462                     PWM1LDS         equ	1122	;# 
  3164   000463                     PWM1PR          equ	1123	;# 
  3165   000463                     PWM1PRL         equ	1123	;# 
  3166   000464                     PWM1PRH         equ	1124	;# 
  3167   000465                     PWM1CPRE        equ	1125	;# 
  3168   000466                     PWM1PIPOS       equ	1126	;# 
  3169   000467                     PWM1GIR         equ	1127	;# 
  3170   000468                     PWM1GIE         equ	1128	;# 
  3171   000469                     PWM1CON         equ	1129	;# 
  3172   00046A                     PWM1S1CFG       equ	1130	;# 
  3173   00046B                     PWM1S1P1        equ	1131	;# 
  3174   00046B                     PWM1S1P1L       equ	1131	;# 
  3175   00046C                     PWM1S1P1H       equ	1132	;# 
  3176   00046D                     PWM1S1P2        equ	1133	;# 
  3177   00046D                     PWM1S1P2L       equ	1133	;# 
  3178   00046E                     PWM1S1P2H       equ	1134	;# 
  3179   00046F                     PWM2ERS         equ	1135	;# 
  3180   000470                     PWM2CLK         equ	1136	;# 
  3181   000471                     PWM2LDS         equ	1137	;# 
  3182   000472                     PWM2PR          equ	1138	;# 
  3183   000472                     PWM2PRL         equ	1138	;# 
  3184   000473                     PWM2PRH         equ	1139	;# 
  3185   000474                     PWM2CPRE        equ	1140	;# 
  3186   000475                     PWM2PIPOS       equ	1141	;# 
  3187   000476                     PWM2GIR         equ	1142	;# 
  3188   000477                     PWM2GIE         equ	1143	;# 
  3189   000478                     PWM2CON         equ	1144	;# 
  3190   000479                     PWM2S1CFG       equ	1145	;# 
  3191   00047A                     PWM2S1P1        equ	1146	;# 
  3192   00047A                     PWM2S1P1L       equ	1146	;# 
  3193   00047B                     PWM2S1P1H       equ	1147	;# 
  3194   00047C                     PWM2S1P2        equ	1148	;# 
  3195   00047C                     PWM2S1P2L       equ	1148	;# 
  3196   00047D                     PWM2S1P2H       equ	1149	;# 
  3197   00047E                     PWM3ERS         equ	1150	;# 
  3198   00047F                     PWM3CLK         equ	1151	;# 
  3199   000480                     PWM3LDS         equ	1152	;# 
  3200   000481                     PWM3PR          equ	1153	;# 
  3201   000481                     PWM3PRL         equ	1153	;# 
  3202   000482                     PWM3PRH         equ	1154	;# 
  3203   000483                     PWM3CPRE        equ	1155	;# 
  3204   000484                     PWM3PIPOS       equ	1156	;# 
  3205   000485                     PWM3GIR         equ	1157	;# 
  3206   000486                     PWM3GIE         equ	1158	;# 
  3207   000487                     PWM3CON         equ	1159	;# 
  3208   000488                     PWM3S1CFG       equ	1160	;# 
  3209   000489                     PWM3S1P1        equ	1161	;# 
  3210   000489                     PWM3S1P1L       equ	1161	;# 
  3211   00048A                     PWM3S1P1H       equ	1162	;# 
  3212   00048B                     PWM3S1P2        equ	1163	;# 
  3213   00048B                     PWM3S1P2L       equ	1163	;# 
  3214   00048C                     PWM3S1P2H       equ	1164	;# 
  3215   000499                     PWMLOAD         equ	1177	;# 
  3216   00049A                     PWMEN           equ	1178	;# 
  3217   00049C                     IPR0            equ	1180	;# 
  3218   00049D                     IPR1            equ	1181	;# 
  3219   00049E                     IPR2            equ	1182	;# 
  3220   00049F                     IPR3            equ	1183	;# 
  3221   0004A0                     IPR4            equ	1184	;# 
  3222   0004A1                     IPR5            equ	1185	;# 
  3223   0004A2                     IPR6            equ	1186	;# 
  3224   0004A3                     IPR7            equ	1187	;# 
  3225   0004A4                     IPR8            equ	1188	;# 
  3226   0004A5                     IPR9            equ	1189	;# 
  3227   0004A6                     IPR10           equ	1190	;# 
  3228   0004A7                     PIE0            equ	1191	;# 
  3229   0004A8                     PIE1            equ	1192	;# 
  3230   0004A9                     PIE2            equ	1193	;# 
  3231   0004AA                     PIE3            equ	1194	;# 
  3232   0004AB                     PIE4            equ	1195	;# 
  3233   0004AC                     PIE5            equ	1196	;# 
  3234   0004AD                     PIE6            equ	1197	;# 
  3235   0004AE                     PIE7            equ	1198	;# 
  3236   0004AF                     PIE8            equ	1199	;# 
  3237   0004B0                     PIE9            equ	1200	;# 
  3238   0004B1                     PIE10           equ	1201	;# 
  3239   0004B2                     PIR0            equ	1202	;# 
  3240   0004B3                     PIR1            equ	1203	;# 
  3241   0004B4                     PIR2            equ	1204	;# 
  3242   0004B5                     PIR3            equ	1205	;# 
  3243   0004B6                     PIR4            equ	1206	;# 
  3244   0004B7                     PIR5            equ	1207	;# 
  3245   0004B8                     PIR6            equ	1208	;# 
  3246   0004B9                     PIR7            equ	1209	;# 
  3247   0004BA                     PIR8            equ	1210	;# 
  3248   0004BB                     PIR9            equ	1211	;# 
  3249   0004BC                     PIR10           equ	1212	;# 
  3250   0004D6                     INTCON0         equ	1238	;# 
  3251   0004D7                     INTCON1         equ	1239	;# 
  3252   0004D8                     STATUS          equ	1240	;# 
  3253   0004D9                     FSR2            equ	1241	;# 
  3254   0004D9                     FSR2L           equ	1241	;# 
  3255   0004DA                     FSR2H           equ	1242	;# 
  3256   0004DB                     PLUSW2          equ	1243	;# 
  3257   0004DC                     PREINC2         equ	1244	;# 
  3258   0004DD                     POSTDEC2        equ	1245	;# 
  3259   0004DE                     POSTINC2        equ	1246	;# 
  3260   0004DF                     INDF2           equ	1247	;# 
  3261   0004E0                     BSR             equ	1248	;# 
  3262   0004E1                     FSR1            equ	1249	;# 
  3263   0004E1                     FSR1L           equ	1249	;# 
  3264   0004E2                     FSR1H           equ	1250	;# 
  3265   0004E3                     PLUSW1          equ	1251	;# 
  3266   0004E4                     PREINC1         equ	1252	;# 
  3267   0004E5                     POSTDEC1        equ	1253	;# 
  3268   0004E6                     POSTINC1        equ	1254	;# 
  3269   0004E7                     INDF1           equ	1255	;# 
  3270   0004E8                     WREG            equ	1256	;# 
  3271   0004E9                     FSR0            equ	1257	;# 
  3272   0004E9                     FSR0L           equ	1257	;# 
  3273   0004EA                     FSR0H           equ	1258	;# 
  3274   0004EB                     PLUSW0          equ	1259	;# 
  3275   0004EC                     PREINC0         equ	1260	;# 
  3276   0004ED                     POSTDEC0        equ	1261	;# 
  3277   0004EE                     POSTINC0        equ	1262	;# 
  3278   0004EF                     INDF0           equ	1263	;# 
  3279   0004F0                     PCON0           equ	1264	;# 
  3280   0004F1                     PCON1           equ	1265	;# 
  3281   0004F2                     CPUDOZE         equ	1266	;# 
  3282   0004F3                     PROD            equ	1267	;# 
  3283   0004F3                     PRODL           equ	1267	;# 
  3284   0004F4                     PRODH           equ	1268	;# 
  3285   0004F5                     TABLAT          equ	1269	;# 
  3286   0004F6                     TBLPTR          equ	1270	;# 
  3287   0004F6                     TBLPTRL         equ	1270	;# 
  3288   0004F7                     TBLPTRH         equ	1271	;# 
  3289   0004F8                     TBLPTRU         equ	1272	;# 
  3290   0004F9                     PCLAT           equ	1273	;# 
  3291   0004F9                     PCL             equ	1273	;# 
  3292   0004FA                     PCLATH          equ	1274	;# 
  3293   0004FB                     PCLATU          equ	1275	;# 
  3294   0004FC                     STKPTR          equ	1276	;# 
  3295   0004FD                     TOS             equ	1277	;# 
  3296   0004FD                     TOSL            equ	1277	;# 
  3297   0004FE                     TOSH            equ	1278	;# 
  3298   0004FF                     TOSU            equ	1279	;# 
  3299   000039                     CLKRCON         equ	57	;# 
  3300   00003A                     CLKRCLK         equ	58	;# 
  3301   000040                     NVMCON0         equ	64	;# 
  3302   000041                     NVMCON1         equ	65	;# 
  3303   000042                     NVMLOCK         equ	66	;# 
  3304   000043                     NVMADR          equ	67	;# 
  3305   000043                     NVMADRL         equ	67	;# 
  3306   000044                     NVMADRH         equ	68	;# 
  3307   000045                     NVMADRU         equ	69	;# 
  3308   000046                     NVMDAT          equ	70	;# 
  3309   000046                     NVMDATL         equ	70	;# 
  3310   000047                     NVMDATH         equ	71	;# 
  3311   000048                     VREGCON         equ	72	;# 
  3312   000049                     BORCON          equ	73	;# 
  3313   00004A                     HLVDCON0        equ	74	;# 
  3314   00004B                     HLVDCON1        equ	75	;# 
  3315   00004C                     ZCDCON          equ	76	;# 
  3316   000062                     PMD0            equ	98	;# 
  3317   000063                     PMD1            equ	99	;# 
  3318   000064                     PMD2            equ	100	;# 
  3319   000065                     PMD3            equ	101	;# 
  3320   000066                     PMD4            equ	102	;# 
  3321   000067                     PMD5            equ	103	;# 
  3322   000068                     PMD6            equ	104	;# 
  3323   00006F                     CMOUT           equ	111	;# 
  3324   000070                     CM1CON0         equ	112	;# 
  3325   000071                     CM1CON1         equ	113	;# 
  3326   000072                     CM1NCH          equ	114	;# 
  3327   000073                     CM1PCH          equ	115	;# 
  3328   000074                     CM2CON0         equ	116	;# 
  3329   000075                     CM2CON1         equ	117	;# 
  3330   000076                     CM2NCH          equ	118	;# 
  3331   000077                     CM2PCH          equ	119	;# 
  3332   000078                     WDTCON0         equ	120	;# 
  3333   000079                     WDTCON1         equ	121	;# 
  3334   00007A                     WDTPS           equ	122	;# 
  3335   00007A                     WDTPSL          equ	122	;# 
  3336   00007B                     WDTPSH          equ	123	;# 
  3337   00007C                     WDTTMR          equ	124	;# 
  3338   00007D                     DAC1DAT         equ	125	;# 
  3339   00007D                     DAC1DATL        equ	125	;# 
  3340   00007E                     DAC1DATH        equ	126	;# 
  3341   00007F                     DAC1CON         equ	127	;# 
  3342   000080                     SPI1RXB         equ	128	;# 
  3343   000081                     SPI1TXB         equ	129	;# 
  3344   000082                     SPI1TCNT        equ	130	;# 
  3345   000082                     SPI1TCNTL       equ	130	;# 
  3346   000083                     SPI1TCNTH       equ	131	;# 
  3347   000084                     SPI1CON0        equ	132	;# 
  3348   000085                     SPI1CON1        equ	133	;# 
  3349   000086                     SPI1CON2        equ	134	;# 
  3350   000087                     SPI1STATUS      equ	135	;# 
  3351   000088                     SPI1TWIDTH      equ	136	;# 
  3352   000089                     SPI1BAUD        equ	137	;# 
  3353   00008A                     SPI1INTF        equ	138	;# 
  3354   00008B                     SPI1INTE        equ	139	;# 
  3355   00008C                     SPI1CLK         equ	140	;# 
  3356   0000AC                     ACTCON          equ	172	;# 
  3357   0000AD                     OSCCON1         equ	173	;# 
  3358   0000AE                     OSCCON2         equ	174	;# 
  3359   0000AF                     OSCCON3         equ	175	;# 
  3360   0000B0                     OSCTUNE         equ	176	;# 
  3361   0000B1                     OSCFRQ          equ	177	;# 
  3362   0000B1                     OSCFREQ         equ	177	;# 
  3363   0000B2                     OSCSTAT         equ	178	;# 
  3364   0000B2                     OSCSTAT1        equ	178	;# 
  3365   0000B3                     OSCEN           equ	179	;# 
  3366   0000B4                     PRLOCK          equ	180	;# 
  3367   0000B5                     SCANPR          equ	181	;# 
  3368   0000B6                     DMA1PR          equ	182	;# 
  3369   0000B7                     DMA2PR          equ	183	;# 
  3370   0000B8                     DMA3PR          equ	184	;# 
  3371   0000B9                     DMA4PR          equ	185	;# 
  3372   0000BE                     MAINPR          equ	190	;# 
  3373   0000BF                     ISRPR           equ	191	;# 
  3374   0000C0                     DAC2DAT         equ	192	;# 
  3375   0000C0                     DAC2DATL        equ	192	;# 
  3376   0000C2                     DAC2CON         equ	194	;# 
  3377   0000C3                     DAC3DAT         equ	195	;# 
  3378   0000C3                     DAC3DATL        equ	195	;# 
  3379   0000C5                     DAC3CON         equ	197	;# 
  3380   0000D4                     CLCDATA         equ	212	;# 
  3381   0000D5                     CLCSELECT       equ	213	;# 
  3382   0000D6                     CLCnCON         equ	214	;# 
  3383   0000D7                     CLCnPOL         equ	215	;# 
  3384   0000D8                     CLCnSEL0        equ	216	;# 
  3385   0000D9                     CLCnSEL1        equ	217	;# 
  3386   0000DA                     CLCnSEL2        equ	218	;# 
  3387   0000DB                     CLCnSEL3        equ	219	;# 
  3388   0000DC                     CLCnGLS0        equ	220	;# 
  3389   0000DD                     CLCnGLS1        equ	221	;# 
  3390   0000DE                     CLCnGLS2        equ	222	;# 
  3391   0000DF                     CLCnGLS3        equ	223	;# 
  3392   0000E8                     DMASELECT       equ	232	;# 
  3393   0000E9                     DMAnBUF         equ	233	;# 
  3394   0000EA                     DMAnDCNT        equ	234	;# 
  3395   0000EA                     DMAnDCNTL       equ	234	;# 
  3396   0000EB                     DMAnDCNTH       equ	235	;# 
  3397   0000EC                     DMAnDPTR        equ	236	;# 
  3398   0000EC                     DMAnDPTRL       equ	236	;# 
  3399   0000ED                     DMAnDPTRH       equ	237	;# 
  3400   0000EE                     DMAnDSZ         equ	238	;# 
  3401   0000EE                     DMAnDSZL        equ	238	;# 
  3402   0000EF                     DMAnDSZH        equ	239	;# 
  3403   0000F0                     DMAnDSA         equ	240	;# 
  3404   0000F0                     DMAnDSAL        equ	240	;# 
  3405   0000F1                     DMAnDSAH        equ	241	;# 
  3406   0000F2                     DMAnSCNT        equ	242	;# 
  3407   0000F2                     DMAnSCNTL       equ	242	;# 
  3408   0000F3                     DMAnSCNTH       equ	243	;# 
  3409   0000F4                     DMAnSPTR        equ	244	;# 
  3410   0000F4                     DMAnSPTRL       equ	244	;# 
  3411   0000F5                     DMAnSPTRH       equ	245	;# 
  3412   0000F6                     DMAnSPTRU       equ	246	;# 
  3413   0000F7                     DMAnSSZ         equ	247	;# 
  3414   0000F7                     DMAnSSZL        equ	247	;# 
  3415   0000F8                     DMAnSSZH        equ	248	;# 
  3416   0000F9                     DMAnSSA         equ	249	;# 
  3417   0000F9                     DMAnSSAL        equ	249	;# 
  3418   0000FA                     DMAnSSAH        equ	250	;# 
  3419   0000FB                     DMAnSSAU        equ	251	;# 
  3420   0000FC                     DMAnCON0        equ	252	;# 
  3421   0000FD                     DMAnCON1        equ	253	;# 
  3422   0000FE                     DMAnAIRQ        equ	254	;# 
  3423   0000FF                     DMAnSIRQ        equ	255	;# 
  3424   000100                     PORTW           equ	256	;# 
  3425   000101                     LATW            equ	257	;# 
  3426   000102                     PORTWIN0        equ	258	;# 
  3427   000103                     PORTWIN1        equ	259	;# 
  3428   000104                     PORTWIN2        equ	260	;# 
  3429   000105                     PORTWIN3        equ	261	;# 
  3430   000106                     PORTWIN4        equ	262	;# 
  3431   000107                     PORTWIN5        equ	263	;# 
  3432   000108                     PORTWIN6        equ	264	;# 
  3433   000109                     PORTWIN7        equ	265	;# 
  3434   00010A                     PORTWCLK        equ	266	;# 
  3435   00010B                     PORTWDF         equ	267	;# 
  3436   00010C                     PORTWCON        equ	268	;# 
  3437   000110                     ADCGA           equ	272	;# 
  3438   000111                     ADCGB           equ	273	;# 
  3439   000112                     ADCGC           equ	274	;# 
  3440   000113                     ADCGD           equ	275	;# 
  3441   000114                     ADCGE           equ	276	;# 
  3442   000115                     ADCGF           equ	277	;# 
  3443   00011F                     OPA1CON0        equ	287	;# 
  3444   000120                     OPA1CON1        equ	288	;# 
  3445   000121                     OPA1CON2        equ	289	;# 
  3446   000122                     OPA1CON3        equ	290	;# 
  3447   000123                     OPA1CON4        equ	291	;# 
  3448   000124                     OPA1HWC         equ	292	;# 
  3449   000125                     OPA1OFFSET      equ	293	;# 
  3450   000126                     OPA1ORS         equ	294	;# 
  3451   000127                     OPA2CON0        equ	295	;# 
  3452   000128                     OPA2CON1        equ	296	;# 
  3453   000129                     OPA2CON2        equ	297	;# 
  3454   00012A                     OPA2CON3        equ	298	;# 
  3455   00012B                     OPA2CON4        equ	299	;# 
  3456   00012C                     OPA2HWC         equ	300	;# 
  3457   00012D                     OPA2OFFSET      equ	301	;# 
  3458   00012E                     OPA2ORS         equ	302	;# 
  3459   000140                     LATA            equ	320	;# 
  3460   000141                     LATB            equ	321	;# 
  3461   000142                     LATC            equ	322	;# 
  3462   000143                     LATD            equ	323	;# 
  3463   000144                     LATE            equ	324	;# 
  3464   000145                     LATF            equ	325	;# 
  3465   000148                     TRISA           equ	328	;# 
  3466   000149                     TRISB           equ	329	;# 
  3467   00014A                     TRISC           equ	330	;# 
  3468   00014B                     TRISD           equ	331	;# 
  3469   00014C                     TRISE           equ	332	;# 
  3470   00014D                     TRISF           equ	333	;# 
  3471   000150                     PORTA           equ	336	;# 
  3472   000151                     PORTB           equ	337	;# 
  3473   000152                     PORTC           equ	338	;# 
  3474   000153                     PORTD           equ	339	;# 
  3475   000154                     PORTE           equ	340	;# 
  3476   000155                     PORTF           equ	341	;# 
  3477   0001C0                     APMCON          equ	448	;# 
  3478   0001C1                     APMPRE          equ	449	;# 
  3479   0001C1                     APMPREL         equ	449	;# 
  3480   0001C2                     APMPREH         equ	450	;# 
  3481   0001C3                     APMPER          equ	451	;# 
  3482   0001C3                     APMPERL         equ	451	;# 
  3483   0001C4                     APMPERH         equ	452	;# 
  3484   0001C5                     APMSTART1       equ	453	;# 
  3485   0001C5                     APMSTART1L      equ	453	;# 
  3486   0001C6                     APMSTART1H      equ	454	;# 
  3487   0001C7                     APMPERS1        equ	455	;# 
  3488   0001C7                     APMPERS1L       equ	455	;# 
  3489   0001C8                     APMPERS1H       equ	456	;# 
  3490   0001C9                     APMSTART2       equ	457	;# 
  3491   0001C9                     APMSTART2L      equ	457	;# 
  3492   0001CA                     APMSTART2H      equ	458	;# 
  3493   0001CB                     APMSTART2U      equ	459	;# 
  3494   0001CC                     APMPERS2        equ	460	;# 
  3495   0001CC                     APMPERS2L       equ	460	;# 
  3496   0001CD                     APMPERS2H       equ	461	;# 
  3497   0001CE                     APMEND1         equ	462	;# 
  3498   0001CE                     APMEND1L        equ	462	;# 
  3499   0001CF                     APMEND1H        equ	463	;# 
  3500   0001D0                     APMEND1U        equ	464	;# 
  3501   0001D1                     APMPERE1        equ	465	;# 
  3502   0001D1                     APMPERE1L       equ	465	;# 
  3503   0001D2                     APMPERE1H       equ	466	;# 
  3504   0001D3                     APMEND2         equ	467	;# 
  3505   0001D3                     APMEND2L        equ	467	;# 
  3506   0001D4                     APMEND2H        equ	468	;# 
  3507   0001D5                     APMEND2U        equ	469	;# 
  3508   0001D6                     APMPERE2        equ	470	;# 
  3509   0001D6                     APMPERE2L       equ	470	;# 
  3510   0001D7                     APMPERE2H       equ	471	;# 
  3511   0001D8                     APMCLK          equ	472	;# 
  3512   0001D9                     APMSTATUS       equ	473	;# 
  3513   0001D9                     APMSTATUSL      equ	473	;# 
  3514   0001DA                     APMSTATUSH      equ	474	;# 
  3515   000200                     PPSLOCK         equ	512	;# 
  3516   000201                     RA0PPS          equ	513	;# 
  3517   000202                     RA1PPS          equ	514	;# 
  3518   000203                     RA2PPS          equ	515	;# 
  3519   000204                     RA3PPS          equ	516	;# 
  3520   000205                     RA4PPS          equ	517	;# 
  3521   000206                     RA5PPS          equ	518	;# 
  3522   000207                     RA6PPS          equ	519	;# 
  3523   000208                     RA7PPS          equ	520	;# 
  3524   000209                     RB0PPS          equ	521	;# 
  3525   00020A                     RB1PPS          equ	522	;# 
  3526   00020B                     RB2PPS          equ	523	;# 
  3527   00020C                     RB3PPS          equ	524	;# 
  3528   00020D                     RB4PPS          equ	525	;# 
  3529   00020E                     RB5PPS          equ	526	;# 
  3530   00020F                     RB6PPS          equ	527	;# 
  3531   000210                     RB7PPS          equ	528	;# 
  3532   000211                     RC0PPS          equ	529	;# 
  3533   000212                     RC1PPS          equ	530	;# 
  3534   000213                     RC2PPS          equ	531	;# 
  3535   000214                     RC3PPS          equ	532	;# 
  3536   000215                     RC4PPS          equ	533	;# 
  3537   000216                     RC5PPS          equ	534	;# 
  3538   000217                     RC6PPS          equ	535	;# 
  3539   000218                     RC7PPS          equ	536	;# 
  3540   000219                     RD0PPS          equ	537	;# 
  3541   00021A                     RD1PPS          equ	538	;# 
  3542   00021B                     RD2PPS          equ	539	;# 
  3543   00021C                     RD3PPS          equ	540	;# 
  3544   00021D                     RD4PPS          equ	541	;# 
  3545   00021E                     RD5PPS          equ	542	;# 
  3546   00021F                     RD6PPS          equ	543	;# 
  3547   000220                     RD7PPS          equ	544	;# 
  3548   000221                     RE0PPS          equ	545	;# 
  3549   000222                     RE1PPS          equ	546	;# 
  3550   000223                     RE2PPS          equ	547	;# 
  3551   000225                     RF0PPS          equ	549	;# 
  3552   000226                     RF1PPS          equ	550	;# 
  3553   000227                     RF2PPS          equ	551	;# 
  3554   000228                     RF3PPS          equ	552	;# 
  3555   000229                     RF4PPS          equ	553	;# 
  3556   00022A                     RF5PPS          equ	554	;# 
  3557   00022B                     RF6PPS          equ	555	;# 
  3558   00022C                     RF7PPS          equ	556	;# 
  3559   00023E                     INT0PPS         equ	574	;# 
  3560   00023F                     INT1PPS         equ	575	;# 
  3561   000240                     INT2PPS         equ	576	;# 
  3562   000241                     T0CKIPPS        equ	577	;# 
  3563   000242                     T1CKIPPS        equ	578	;# 
  3564   000243                     T1GPPS          equ	579	;# 
  3565   000244                     T3CKIPPS        equ	580	;# 
  3566   000245                     T3GPPS          equ	581	;# 
  3567   000248                     T2INPPS         equ	584	;# 
  3568   000249                     T4INPPS         equ	585	;# 
  3569   00024F                     CCP1PPS         equ	591	;# 
  3570   000250                     CCP2PPS         equ	592	;# 
  3571   000251                     PWM1ERSPPS      equ	593	;# 
  3572   000252                     PWM2ERSPPS      equ	594	;# 
  3573   000253                     PWM3ERSPPS      equ	595	;# 
  3574   000257                     PWMIN0PPS       equ	599	;# 
  3575   000258                     PWMIN1PPS       equ	600	;# 
  3576   00025B                     CWG1PPS         equ	603	;# 
  3577   00025B                     CWG1INPPS       equ	603	;# 
  3578   000261                     CLCIN0PPS       equ	609	;# 
  3579   000262                     CLCIN1PPS       equ	610	;# 
  3580   000263                     CLCIN2PPS       equ	611	;# 
  3581   000264                     CLCIN3PPS       equ	612	;# 
  3582   000265                     CLCIN4PPS       equ	613	;# 
  3583   000266                     CLCIN5PPS       equ	614	;# 
  3584   000267                     CLCIN6PPS       equ	615	;# 
  3585   000268                     CLCIN7PPS       equ	616	;# 
  3586   000269                     ADACTPPS        equ	617	;# 
  3587   00026A                     SPI1SCKPPS      equ	618	;# 
  3588   00026B                     SPI1SDIPPS      equ	619	;# 
  3589   00026C                     SPI1SSPPS       equ	620	;# 
  3590   000270                     I2C1SDAPPS      equ	624	;# 
  3591   000271                     I2C1SCLPPS      equ	625	;# 
  3592   000272                     U1RXPPS         equ	626	;# 
  3593   000273                     U1CTSPPS        equ	627	;# 
  3594   000274                     U2RXPPS         equ	628	;# 
  3595   000275                     U2CTSPPS        equ	629	;# 
  3596   000276                     OPA1ORPPS       equ	630	;# 
  3597   000277                     OPA2ORPPS       equ	631	;# 
  3598   000278                     TUIN0PPS        equ	632	;# 
  3599   000279                     TUIN1PPS        equ	633	;# 
  3600   00027A                     APMCLKPPS       equ	634	;# 
  3601   000285                     RB2I2C          equ	645	;# 
  3602   000286                     RB1I2C          equ	646	;# 
  3603   000287                     RC4I2C          equ	647	;# 
  3604   000288                     RC3I2C          equ	648	;# 
  3605   000289                     I2C1RXB         equ	649	;# 
  3606   00028A                     I2C1TXB         equ	650	;# 
  3607   00028B                     I2C1CNT         equ	651	;# 
  3608   00028B                     I2C1CNTL        equ	651	;# 
  3609   00028C                     I2C1CNTH        equ	652	;# 
  3610   00028D                     I2C1ADB0        equ	653	;# 
  3611   00028E                     I2C1ADB1        equ	654	;# 
  3612   00028F                     I2C1ADR0        equ	655	;# 
  3613   000290                     I2C1ADR1        equ	656	;# 
  3614   000291                     I2C1ADR2        equ	657	;# 
  3615   000292                     I2C1ADR3        equ	658	;# 
  3616   000293                     I2C1CON0        equ	659	;# 
  3617   000294                     I2C1CON1        equ	660	;# 
  3618   000295                     I2C1CON2        equ	661	;# 
  3619   000296                     I2C1CON3        equ	662	;# 
  3620   000297                     I2C1ERR         equ	663	;# 
  3621   000298                     I2C1STAT0       equ	664	;# 
  3622   000299                     I2C1STAT1       equ	665	;# 
  3623   00029A                     I2C1PIR         equ	666	;# 
  3624   00029B                     I2C1PIE         equ	667	;# 
  3625   00029C                     I2C1BTO         equ	668	;# 
  3626   00029D                     I2C1BAUD        equ	669	;# 
  3627   00029E                     I2C1CLK         equ	670	;# 
  3628   00029F                     I2C1BTOC        equ	671	;# 
  3629   0002A0                     U1RXB           equ	672	;# 
  3630   0002A0                     U1RXBL          equ	672	;# 
  3631   0002A1                     U1RXCHK         equ	673	;# 
  3632   0002A2                     U1TXB           equ	674	;# 
  3633   0002A2                     U1TXBL          equ	674	;# 
  3634   0002A3                     U1TXCHK         equ	675	;# 
  3635   0002A4                     U1P1            equ	676	;# 
  3636   0002A4                     U1P1L           equ	676	;# 
  3637   0002A5                     U1P1H           equ	677	;# 
  3638   0002A6                     U1P2            equ	678	;# 
  3639   0002A6                     U1P2L           equ	678	;# 
  3640   0002A7                     U1P2H           equ	679	;# 
  3641   0002A8                     U1P3            equ	680	;# 
  3642   0002A8                     U1P3L           equ	680	;# 
  3643   0002A9                     U1P3H           equ	681	;# 
  3644   0002AA                     U1CON0          equ	682	;# 
  3645   0002AB                     U1CON1          equ	683	;# 
  3646   0002AC                     U1CON2          equ	684	;# 
  3647   0002AD                     U1BRG           equ	685	;# 
  3648   0002AD                     U1BRGL          equ	685	;# 
  3649   0002AE                     U1BRGH          equ	686	;# 
  3650   0002AF                     U1FIFO          equ	687	;# 
  3651   0002B0                     U1UIR           equ	688	;# 
  3652   0002B1                     U1ERRIR         equ	689	;# 
  3653   0002B2                     U1ERRIE         equ	690	;# 
  3654   0002B4                     U2RXB           equ	692	;# 
  3655   0002B4                     U2RXBL          equ	692	;# 
  3656   0002B6                     U2TXB           equ	694	;# 
  3657   0002B6                     U2TXBL          equ	694	;# 
  3658   0002B8                     U2P1            equ	696	;# 
  3659   0002B8                     U2P1L           equ	696	;# 
  3660   0002BA                     U2P2            equ	698	;# 
  3661   0002BA                     U2P2L           equ	698	;# 
  3662   0002BC                     U2P3            equ	700	;# 
  3663   0002BC                     U2P3L           equ	700	;# 
  3664   0002BE                     U2CON0          equ	702	;# 
  3665   0002BF                     U2CON1          equ	703	;# 
  3666   0002C0                     U2CON2          equ	704	;# 
  3667   0002C1                     U2BRG           equ	705	;# 
  3668   0002C1                     U2BRGL          equ	705	;# 
  3669   0002C2                     U2BRGH          equ	706	;# 
  3670   0002C3                     U2FIFO          equ	707	;# 
  3671   0002C4                     U2UIR           equ	708	;# 
  3672   0002C5                     U2ERRIR         equ	709	;# 
  3673   0002C6                     U2ERRIE         equ	710	;# 
  3674   000312                     TMR1            equ	786	;# 
  3675   000312                     TMR1L           equ	786	;# 
  3676   000313                     TMR1H           equ	787	;# 
  3677   000314                     T1CON           equ	788	;# 
  3678   000314                     TMR1CON         equ	788	;# 
  3679   000315                     T1GCON          equ	789	;# 
  3680   000315                     TMR1GCON        equ	789	;# 
  3681   000316                     T1GATE          equ	790	;# 
  3682   000316                     TMR1GATE        equ	790	;# 
  3683   000317                     T1CLK           equ	791	;# 
  3684   000317                     TMR1CLK         equ	791	;# 
  3685   000317                     PR1             equ	791	;# 
  3686   000318                     TMR0L           equ	792	;# 
  3687   000318                     TMR0            equ	792	;# 
  3688   000319                     TMR0H           equ	793	;# 
  3689   000319                     PR0             equ	793	;# 
  3690   00031A                     T0CON0          equ	794	;# 
  3691   00031B                     T0CON1          equ	795	;# 
  3692   00031D                     T2TMR           equ	797	;# 
  3693   00031D                     TMR2            equ	797	;# 
  3694   00031E                     T2PR            equ	798	;# 
  3695   00031E                     PR2             equ	798	;# 
  3696   00031F                     T2CON           equ	799	;# 
  3697   000320                     T2HLT           equ	800	;# 
  3698   000321                     T2CLKCON        equ	801	;# 
  3699   000321                     T2CLK           equ	801	;# 
  3700   000322                     T2RST           equ	802	;# 
  3701   000323                     TMR3            equ	803	;# 
  3702   000323                     TMR3L           equ	803	;# 
  3703   000324                     TMR3H           equ	804	;# 
  3704   000325                     T3CON           equ	805	;# 
  3705   000325                     TMR3CON         equ	805	;# 
  3706   000326                     T3GCON          equ	806	;# 
  3707   000326                     TMR3GCON        equ	806	;# 
  3708   000327                     T3GATE          equ	807	;# 
  3709   000327                     TMR3GATE        equ	807	;# 
  3710   000328                     T3CLK           equ	808	;# 
  3711   000328                     TMR3CLK         equ	808	;# 
  3712   000328                     PR3             equ	808	;# 
  3713   00032A                     T4TMR           equ	810	;# 
  3714   00032A                     TMR4            equ	810	;# 
  3715   00032B                     T4PR            equ	811	;# 
  3716   00032B                     PR4             equ	811	;# 
  3717   00032C                     T4CON           equ	812	;# 
  3718   00032D                     T4HLT           equ	813	;# 
  3719   00032E                     T4CLKCON        equ	814	;# 
  3720   00032E                     T4CLK           equ	814	;# 
  3721   00032F                     T4RST           equ	815	;# 
  3722   000340                     CCPR1           equ	832	;# 
  3723   000340                     CCPR1L          equ	832	;# 
  3724   000341                     CCPR1H          equ	833	;# 
  3725   000342                     CCP1CON         equ	834	;# 
  3726   000343                     CCP1CAP         equ	835	;# 
  3727   000344                     CCPR2           equ	836	;# 
  3728   000344                     CCPR2L          equ	836	;# 
  3729   000345                     CCPR2H          equ	837	;# 
  3730   000346                     CCP2CON         equ	838	;# 
  3731   000347                     CCP2CAP         equ	839	;# 
  3732   00034C                     CCPTMRS0        equ	844	;# 
  3733   00034E                     CRCDATA         equ	846	;# 
  3734   00034E                     CRCDATAL        equ	846	;# 
  3735   00034F                     CRCDATAH        equ	847	;# 
  3736   000350                     CRCDATAU        equ	848	;# 
  3737   000351                     CRCDATAT        equ	849	;# 
  3738   000352                     CRCOUT          equ	850	;# 
  3739   000352                     CRCSHFT         equ	850	;# 
  3740   000352                     CRCXOR          equ	850	;# 
  3741   000352                     CRCOUTL         equ	850	;# 
  3742   000352                     CRCSHFTL        equ	850	;# 
  3743   000352                     CRCSHIFTL       equ	850	;# 
  3744   000352                     CRCXORL         equ	850	;# 
  3745   000353                     CRCOUTH         equ	851	;# 
  3746   000353                     CRCSHFTH        equ	851	;# 
  3747   000353                     CRCSHIFTH       equ	851	;# 
  3748   000353                     CRCXORH         equ	851	;# 
  3749   000354                     CRCOUTU         equ	852	;# 
  3750   000354                     CRCSHFTU        equ	852	;# 
  3751   000354                     CRCSHIFTU       equ	852	;# 
  3752   000354                     CRCXORU         equ	852	;# 
  3753   000355                     CRCOUTT         equ	853	;# 
  3754   000355                     CRCSHFTT        equ	853	;# 
  3755   000355                     CRCSHIFTT       equ	853	;# 
  3756   000355                     CRCXORT         equ	853	;# 
  3757   000356                     CRCCON0         equ	854	;# 
  3758   000357                     CRCCON1         equ	855	;# 
  3759   000358                     CRCCON2         equ	856	;# 
  3760   00035A                     SCANLADR        equ	858	;# 
  3761   00035A                     SCANLADRL       equ	858	;# 
  3762   00035B                     SCANLADRH       equ	859	;# 
  3763   00035C                     SCANLADRU       equ	860	;# 
  3764   00035D                     SCANHADR        equ	861	;# 
  3765   00035D                     SCANHADRL       equ	861	;# 
  3766   00035E                     SCANHADRH       equ	862	;# 
  3767   00035F                     SCANHADRU       equ	863	;# 
  3768   000360                     SCANCON0        equ	864	;# 
  3769   000361                     SCANTRIG        equ	865	;# 
  3770   000373                     STATUS_CSHAD    equ	883	;# 
  3771   000374                     WREG_CSHAD      equ	884	;# 
  3772   000375                     BSR_CSHAD       equ	885	;# 
  3773   000376                     SHADCON         equ	886	;# 
  3774   000377                     STATUS_SHAD     equ	887	;# 
  3775   000378                     WREG_SHAD       equ	888	;# 
  3776   000379                     BSR_SHAD        equ	889	;# 
  3777   00037A                     PCLATH_SHAD     equ	890	;# 
  3778   00037B                     PCLATU_SHAD     equ	891	;# 
  3779   00037C                     FSR0SH          equ	892	;# 
  3780   00037C                     FSR0L_SHAD      equ	892	;# 
  3781   00037D                     FSR0H_SHAD      equ	893	;# 
  3782   00037E                     FSR1SH          equ	894	;# 
  3783   00037E                     FSR1L_SHAD      equ	894	;# 
  3784   00037F                     FSR1H_SHAD      equ	895	;# 
  3785   000380                     FSR2SH          equ	896	;# 
  3786   000380                     FSR2L_SHAD      equ	896	;# 
  3787   000381                     FSR2H_SHAD      equ	897	;# 
  3788   000382                     PRODSH          equ	898	;# 
  3789   000382                     PRODL_SHAD      equ	898	;# 
  3790   000383                     PRODH_SHAD      equ	899	;# 
  3791   0003A0                     TU16ACON0       equ	928	;# 
  3792   0003A1                     TU16ACON1       equ	929	;# 
  3793   0003A2                     TU16AHLT        equ	930	;# 
  3794   0003A3                     TU16APS         equ	931	;# 
  3795   0003A4                     TU16ATMR        equ	932	;# 
  3796   0003A4                     TU16ACR         equ	932	;# 
  3797   0003A4                     TU16ATMRL       equ	932	;# 
  3798   0003A4                     TU16ACRL        equ	932	;# 
  3799   0003A5                     TU16ATMRH       equ	933	;# 
  3800   0003A5                     TU16ACRH        equ	933	;# 
  3801   0003A6                     TU16APR         equ	934	;# 
  3802   0003A6                     TU16APRL        equ	934	;# 
  3803   0003A7                     TU16APRH        equ	935	;# 
  3804   0003A8                     TU16ACLK        equ	936	;# 
  3805   0003A9                     TU16AERS        equ	937	;# 
  3806   0003AA                     TU16BCON0       equ	938	;# 
  3807   0003AB                     TU16BCON1       equ	939	;# 
  3808   0003AC                     TU16BHLT        equ	940	;# 
  3809   0003AD                     TU16BPS         equ	941	;# 
  3810   0003AE                     TU16BTMR        equ	942	;# 
  3811   0003AE                     TU16BCR         equ	942	;# 
  3812   0003AE                     TU16BTMRL       equ	942	;# 
  3813   0003AE                     TU16BCRL        equ	942	;# 
  3814   0003AF                     TU16BTMRH       equ	943	;# 
  3815   0003AF                     TU16BCRH        equ	943	;# 
  3816   0003B0                     TU16BPR         equ	944	;# 
  3817   0003B0                     TU16BPRL        equ	944	;# 
  3818   0003B1                     TU16BPRH        equ	945	;# 
  3819   0003B2                     TU16BCLK        equ	946	;# 
  3820   0003B3                     TU16BERS        equ	947	;# 
  3821   0003B4                     TUCHAIN         equ	948	;# 
  3822   0003BC                     CWG1CLK         equ	956	;# 
  3823   0003BC                     CWG1CLKCON      equ	956	;# 
  3824   0003BD                     CWG1ISM         equ	957	;# 
  3825   0003BD                     CWG1DAT         equ	957	;# 
  3826   0003BE                     CWG1DBR         equ	958	;# 
  3827   0003BF                     CWG1DBF         equ	959	;# 
  3828   0003C0                     CWG1CON0        equ	960	;# 
  3829   0003C1                     CWG1CON1        equ	961	;# 
  3830   0003C2                     CWG1AS0         equ	962	;# 
  3831   0003C3                     CWG1AS1         equ	963	;# 
  3832   0003C4                     CWG1STR         equ	964	;# 
  3833   0003D7                     FVRCON          equ	983	;# 
  3834   0003D8                     ADCPCON         equ	984	;# 
  3835   0003D8                     ADCP            equ	984	;# 
  3836   0003D9                     ADLTH           equ	985	;# 
  3837   0003D9                     ADLTHL          equ	985	;# 
  3838   0003DA                     ADLTHH          equ	986	;# 
  3839   0003DB                     ADUTH           equ	987	;# 
  3840   0003DB                     ADUTHL          equ	987	;# 
  3841   0003DC                     ADUTHH          equ	988	;# 
  3842   0003DD                     ADERR           equ	989	;# 
  3843   0003DD                     ADERRL          equ	989	;# 
  3844   0003DE                     ADERRH          equ	990	;# 
  3845   0003DF                     ADSTPT          equ	991	;# 
  3846   0003DF                     ADSTPTL         equ	991	;# 
  3847   0003E0                     ADSTPTH         equ	992	;# 
  3848   0003E1                     ADFLTR          equ	993	;# 
  3849   0003E1                     ADFLTRL         equ	993	;# 
  3850   0003E2                     ADFLTRH         equ	994	;# 
  3851   0003E3                     ADACC           equ	995	;# 
  3852   0003E3                     ADACCL          equ	995	;# 
  3853   0003E4                     ADACCH          equ	996	;# 
  3854   0003E5                     ADACCU          equ	997	;# 
  3855   0003E6                     ADCNT           equ	998	;# 
  3856   0003E7                     ADRPT           equ	999	;# 
  3857   0003E8                     ADPREV          equ	1000	;# 
  3858   0003E8                     ADPREVL         equ	1000	;# 
  3859   0003E9                     ADPREVH         equ	1001	;# 
  3860   0003EA                     ADRES           equ	1002	;# 
  3861   0003EA                     ADRESL          equ	1002	;# 
  3862   0003EB                     ADRESH          equ	1003	;# 
  3863   0003EC                     ADPCH           equ	1004	;# 
  3864   0003ED                     ADNCH           equ	1005	;# 
  3865   0003EE                     ADACQ           equ	1006	;# 
  3866   0003EE                     ADACQL          equ	1006	;# 
  3867   0003EF                     ADACQH          equ	1007	;# 
  3868   0003F0                     ADCAP           equ	1008	;# 
  3869   0003F1                     ADPRE           equ	1009	;# 
  3870   0003F1                     ADPREL          equ	1009	;# 
  3871   0003F2                     ADPREH          equ	1010	;# 
  3872   0003F3                     ADCON0          equ	1011	;# 
  3873   0003F4                     ADCON1          equ	1012	;# 
  3874   0003F5                     ADCON2          equ	1013	;# 
  3875   0003F6                     ADCON3          equ	1014	;# 
  3876   0003F7                     ADSTAT          equ	1015	;# 
  3877   0003F8                     ADREF           equ	1016	;# 
  3878   0003F9                     ADACT           equ	1017	;# 
  3879   0003FA                     ADCLK           equ	1018	;# 
  3880   0003FB                     ADCTX           equ	1019	;# 
  3881   0003FC                     ADCSEL1         equ	1020	;# 
  3882   0003FD                     ADCSEL2         equ	1021	;# 
  3883   0003FE                     ADCSEL3         equ	1022	;# 
  3884   0003FF                     ADCSEL4         equ	1023	;# 
  3885   000400                     ANSELA          equ	1024	;# 
  3886   000401                     WPUA            equ	1025	;# 
  3887   000402                     ODCONA          equ	1026	;# 
  3888   000403                     SLRCONA         equ	1027	;# 
  3889   000404                     INLVLA          equ	1028	;# 
  3890   000405                     IOCAP           equ	1029	;# 
  3891   000406                     IOCAN           equ	1030	;# 
  3892   000407                     IOCAF           equ	1031	;# 
  3893   000408                     ANSELB          equ	1032	;# 
  3894   000409                     WPUB            equ	1033	;# 
  3895   00040A                     ODCONB          equ	1034	;# 
  3896   00040B                     SLRCONB         equ	1035	;# 
  3897   00040C                     INLVLB          equ	1036	;# 
  3898   00040D                     IOCBP           equ	1037	;# 
  3899   00040E                     IOCBN           equ	1038	;# 
  3900   00040F                     IOCBF           equ	1039	;# 
  3901   000410                     ANSELC          equ	1040	;# 
  3902   000411                     WPUC            equ	1041	;# 
  3903   000412                     ODCONC          equ	1042	;# 
  3904   000413                     SLRCONC         equ	1043	;# 
  3905   000414                     INLVLC          equ	1044	;# 
  3906   000415                     IOCCP           equ	1045	;# 
  3907   000416                     IOCCN           equ	1046	;# 
  3908   000417                     IOCCF           equ	1047	;# 
  3909   000418                     ANSELD          equ	1048	;# 
  3910   000419                     WPUD            equ	1049	;# 
  3911   00041A                     ODCOND          equ	1050	;# 
  3912   00041B                     SLRCOND         equ	1051	;# 
  3913   00041C                     INLVLD          equ	1052	;# 
  3914   000420                     ANSELE          equ	1056	;# 
  3915   000421                     WPUE            equ	1057	;# 
  3916   000422                     ODCONE          equ	1058	;# 
  3917   000423                     SLRCONE         equ	1059	;# 
  3918   000424                     INLVLE          equ	1060	;# 
  3919   000425                     IOCEP           equ	1061	;# 
  3920   000426                     IOCEN           equ	1062	;# 
  3921   000427                     IOCEF           equ	1063	;# 
  3922   000428                     ANSELF          equ	1064	;# 
  3923   000429                     WPUF            equ	1065	;# 
  3924   00042A                     ODCONF          equ	1066	;# 
  3925   00042B                     SLRCONF         equ	1067	;# 
  3926   00042C                     INLVLF          equ	1068	;# 
  3927   00043D                     IOCWP           equ	1085	;# 
  3928   00043E                     IOCWN           equ	1086	;# 
  3929   00043F                     IOCWF           equ	1087	;# 
  3930   000440                     NCO1ACC         equ	1088	;# 
  3931   000440                     NCO1ACCL        equ	1088	;# 
  3932   000441                     NCO1ACCH        equ	1089	;# 
  3933   000442                     NCO1ACCU        equ	1090	;# 
  3934   000443                     NCO1INC         equ	1091	;# 
  3935   000443                     NCO1INCL        equ	1091	;# 
  3936   000444                     NCO1INCH        equ	1092	;# 
  3937   000445                     NCO1INCU        equ	1093	;# 
  3938   000446                     NCO1CON         equ	1094	;# 
  3939   000447                     NCO1CLK         equ	1095	;# 
  3940   000458                     FSCMCON         equ	1112	;# 
  3941   000459                     IVTLOCK         equ	1113	;# 
  3942   00045A                     IVTAD           equ	1114	;# 
  3943   00045A                     IVTADL          equ	1114	;# 
  3944   00045B                     IVTADH          equ	1115	;# 
  3945   00045C                     IVTADU          equ	1116	;# 
  3946   00045D                     IVTBASE         equ	1117	;# 
  3947   00045D                     IVTBASEL        equ	1117	;# 
  3948   00045E                     IVTBASEH        equ	1118	;# 
  3949   00045F                     IVTBASEU        equ	1119	;# 
  3950   000460                     PWM1ERS         equ	1120	;# 
  3951   000461                     PWM1CLK         equ	1121	;# 
  3952   000462                     PWM1LDS         equ	1122	;# 
  3953   000463                     PWM1PR          equ	1123	;# 
  3954   000463                     PWM1PRL         equ	1123	;# 
  3955   000464                     PWM1PRH         equ	1124	;# 
  3956   000465                     PWM1CPRE        equ	1125	;# 
  3957   000466                     PWM1PIPOS       equ	1126	;# 
  3958   000467                     PWM1GIR         equ	1127	;# 
  3959   000468                     PWM1GIE         equ	1128	;# 
  3960   000469                     PWM1CON         equ	1129	;# 
  3961   00046A                     PWM1S1CFG       equ	1130	;# 
  3962   00046B                     PWM1S1P1        equ	1131	;# 
  3963   00046B                     PWM1S1P1L       equ	1131	;# 
  3964   00046C                     PWM1S1P1H       equ	1132	;# 
  3965   00046D                     PWM1S1P2        equ	1133	;# 
  3966   00046D                     PWM1S1P2L       equ	1133	;# 
  3967   00046E                     PWM1S1P2H       equ	1134	;# 
  3968   00046F                     PWM2ERS         equ	1135	;# 
  3969   000470                     PWM2CLK         equ	1136	;# 
  3970   000471                     PWM2LDS         equ	1137	;# 
  3971   000472                     PWM2PR          equ	1138	;# 
  3972   000472                     PWM2PRL         equ	1138	;# 
  3973   000473                     PWM2PRH         equ	1139	;# 
  3974   000474                     PWM2CPRE        equ	1140	;# 
  3975   000475                     PWM2PIPOS       equ	1141	;# 
  3976   000476                     PWM2GIR         equ	1142	;# 
  3977   000477                     PWM2GIE         equ	1143	;# 
  3978   000478                     PWM2CON         equ	1144	;# 
  3979   000479                     PWM2S1CFG       equ	1145	;# 
  3980   00047A                     PWM2S1P1        equ	1146	;# 
  3981   00047A                     PWM2S1P1L       equ	1146	;# 
  3982   00047B                     PWM2S1P1H       equ	1147	;# 
  3983   00047C                     PWM2S1P2        equ	1148	;# 
  3984   00047C                     PWM2S1P2L       equ	1148	;# 
  3985   00047D                     PWM2S1P2H       equ	1149	;# 
  3986   00047E                     PWM3ERS         equ	1150	;# 
  3987   00047F                     PWM3CLK         equ	1151	;# 
  3988   000480                     PWM3LDS         equ	1152	;# 
  3989   000481                     PWM3PR          equ	1153	;# 
  3990   000481                     PWM3PRL         equ	1153	;# 
  3991   000482                     PWM3PRH         equ	1154	;# 
  3992   000483                     PWM3CPRE        equ	1155	;# 
  3993   000484                     PWM3PIPOS       equ	1156	;# 
  3994   000485                     PWM3GIR         equ	1157	;# 
  3995   000486                     PWM3GIE         equ	1158	;# 
  3996   000487                     PWM3CON         equ	1159	;# 
  3997   000488                     PWM3S1CFG       equ	1160	;# 
  3998   000489                     PWM3S1P1        equ	1161	;# 
  3999   000489                     PWM3S1P1L       equ	1161	;# 
  4000   00048A                     PWM3S1P1H       equ	1162	;# 
  4001   00048B                     PWM3S1P2        equ	1163	;# 
  4002   00048B                     PWM3S1P2L       equ	1163	;# 
  4003   00048C                     PWM3S1P2H       equ	1164	;# 
  4004   000499                     PWMLOAD         equ	1177	;# 
  4005   00049A                     PWMEN           equ	1178	;# 
  4006   00049C                     IPR0            equ	1180	;# 
  4007   00049D                     IPR1            equ	1181	;# 
  4008   00049E                     IPR2            equ	1182	;# 
  4009   00049F                     IPR3            equ	1183	;# 
  4010   0004A0                     IPR4            equ	1184	;# 
  4011   0004A1                     IPR5            equ	1185	;# 
  4012   0004A2                     IPR6            equ	1186	;# 
  4013   0004A3                     IPR7            equ	1187	;# 
  4014   0004A4                     IPR8            equ	1188	;# 
  4015   0004A5                     IPR9            equ	1189	;# 
  4016   0004A6                     IPR10           equ	1190	;# 
  4017   0004A7                     PIE0            equ	1191	;# 
  4018   0004A8                     PIE1            equ	1192	;# 
  4019   0004A9                     PIE2            equ	1193	;# 
  4020   0004AA                     PIE3            equ	1194	;# 
  4021   0004AB                     PIE4            equ	1195	;# 
  4022   0004AC                     PIE5            equ	1196	;# 
  4023   0004AD                     PIE6            equ	1197	;# 
  4024   0004AE                     PIE7            equ	1198	;# 
  4025   0004AF                     PIE8            equ	1199	;# 
  4026   0004B0                     PIE9            equ	1200	;# 
  4027   0004B1                     PIE10           equ	1201	;# 
  4028   0004B2                     PIR0            equ	1202	;# 
  4029   0004B3                     PIR1            equ	1203	;# 
  4030   0004B4                     PIR2            equ	1204	;# 
  4031   0004B5                     PIR3            equ	1205	;# 
  4032   0004B6                     PIR4            equ	1206	;# 
  4033   0004B7                     PIR5            equ	1207	;# 
  4034   0004B8                     PIR6            equ	1208	;# 
  4035   0004B9                     PIR7            equ	1209	;# 
  4036   0004BA                     PIR8            equ	1210	;# 
  4037   0004BB                     PIR9            equ	1211	;# 
  4038   0004BC                     PIR10           equ	1212	;# 
  4039   0004D6                     INTCON0         equ	1238	;# 
  4040   0004D7                     INTCON1         equ	1239	;# 
  4041   0004D8                     STATUS          equ	1240	;# 
  4042   0004D9                     FSR2            equ	1241	;# 
  4043   0004D9                     FSR2L           equ	1241	;# 
  4044   0004DA                     FSR2H           equ	1242	;# 
  4045   0004DB                     PLUSW2          equ	1243	;# 
  4046   0004DC                     PREINC2         equ	1244	;# 
  4047   0004DD                     POSTDEC2        equ	1245	;# 
  4048   0004DE                     POSTINC2        equ	1246	;# 
  4049   0004DF                     INDF2           equ	1247	;# 
  4050   0004E0                     BSR             equ	1248	;# 
  4051   0004E1                     FSR1            equ	1249	;# 
  4052   0004E1                     FSR1L           equ	1249	;# 
  4053   0004E2                     FSR1H           equ	1250	;# 
  4054   0004E3                     PLUSW1          equ	1251	;# 
  4055   0004E4                     PREINC1         equ	1252	;# 
  4056   0004E5                     POSTDEC1        equ	1253	;# 
  4057   0004E6                     POSTINC1        equ	1254	;# 
  4058   0004E7                     INDF1           equ	1255	;# 
  4059   0004E8                     WREG            equ	1256	;# 
  4060   0004E9                     FSR0            equ	1257	;# 
  4061   0004E9                     FSR0L           equ	1257	;# 
  4062   0004EA                     FSR0H           equ	1258	;# 
  4063   0004EB                     PLUSW0          equ	1259	;# 
  4064   0004EC                     PREINC0         equ	1260	;# 
  4065   0004ED                     POSTDEC0        equ	1261	;# 
  4066   0004EE                     POSTINC0        equ	1262	;# 
  4067   0004EF                     INDF0           equ	1263	;# 
  4068   0004F0                     PCON0           equ	1264	;# 
  4069   0004F1                     PCON1           equ	1265	;# 
  4070   0004F2                     CPUDOZE         equ	1266	;# 
  4071   0004F3                     PROD            equ	1267	;# 
  4072   0004F3                     PRODL           equ	1267	;# 
  4073   0004F4                     PRODH           equ	1268	;# 
  4074   0004F5                     TABLAT          equ	1269	;# 
  4075   0004F6                     TBLPTR          equ	1270	;# 
  4076   0004F6                     TBLPTRL         equ	1270	;# 
  4077   0004F7                     TBLPTRH         equ	1271	;# 
  4078   0004F8                     TBLPTRU         equ	1272	;# 
  4079   0004F9                     PCLAT           equ	1273	;# 
  4080   0004F9                     PCL             equ	1273	;# 
  4081   0004FA                     PCLATH          equ	1274	;# 
  4082   0004FB                     PCLATU          equ	1275	;# 
  4083   0004FC                     STKPTR          equ	1276	;# 
  4084   0004FD                     TOS             equ	1277	;# 
  4085   0004FD                     TOSL            equ	1277	;# 
  4086   0004FE                     TOSH            equ	1278	;# 
  4087   0004FF                     TOSU            equ	1279	;# 
  4088   000039                     CLKRCON         equ	57	;# 
  4089   00003A                     CLKRCLK         equ	58	;# 
  4090   000040                     NVMCON0         equ	64	;# 
  4091   000041                     NVMCON1         equ	65	;# 
  4092   000042                     NVMLOCK         equ	66	;# 
  4093   000043                     NVMADR          equ	67	;# 
  4094   000043                     NVMADRL         equ	67	;# 
  4095   000044                     NVMADRH         equ	68	;# 
  4096   000045                     NVMADRU         equ	69	;# 
  4097   000046                     NVMDAT          equ	70	;# 
  4098   000046                     NVMDATL         equ	70	;# 
  4099   000047                     NVMDATH         equ	71	;# 
  4100   000048                     VREGCON         equ	72	;# 
  4101   000049                     BORCON          equ	73	;# 
  4102   00004A                     HLVDCON0        equ	74	;# 
  4103   00004B                     HLVDCON1        equ	75	;# 
  4104   00004C                     ZCDCON          equ	76	;# 
  4105   000062                     PMD0            equ	98	;# 
  4106   000063                     PMD1            equ	99	;# 
  4107   000064                     PMD2            equ	100	;# 
  4108   000065                     PMD3            equ	101	;# 
  4109   000066                     PMD4            equ	102	;# 
  4110   000067                     PMD5            equ	103	;# 
  4111   000068                     PMD6            equ	104	;# 
  4112   00006F                     CMOUT           equ	111	;# 
  4113   000070                     CM1CON0         equ	112	;# 
  4114   000071                     CM1CON1         equ	113	;# 
  4115   000072                     CM1NCH          equ	114	;# 
  4116   000073                     CM1PCH          equ	115	;# 
  4117   000074                     CM2CON0         equ	116	;# 
  4118   000075                     CM2CON1         equ	117	;# 
  4119   000076                     CM2NCH          equ	118	;# 
  4120   000077                     CM2PCH          equ	119	;# 
  4121   000078                     WDTCON0         equ	120	;# 
  4122   000079                     WDTCON1         equ	121	;# 
  4123   00007A                     WDTPS           equ	122	;# 
  4124   00007A                     WDTPSL          equ	122	;# 
  4125   00007B                     WDTPSH          equ	123	;# 
  4126   00007C                     WDTTMR          equ	124	;# 
  4127   00007D                     DAC1DAT         equ	125	;# 
  4128   00007D                     DAC1DATL        equ	125	;# 
  4129   00007E                     DAC1DATH        equ	126	;# 
  4130   00007F                     DAC1CON         equ	127	;# 
  4131   000080                     SPI1RXB         equ	128	;# 
  4132   000081                     SPI1TXB         equ	129	;# 
  4133   000082                     SPI1TCNT        equ	130	;# 
  4134   000082                     SPI1TCNTL       equ	130	;# 
  4135   000083                     SPI1TCNTH       equ	131	;# 
  4136   000084                     SPI1CON0        equ	132	;# 
  4137   000085                     SPI1CON1        equ	133	;# 
  4138   000086                     SPI1CON2        equ	134	;# 
  4139   000087                     SPI1STATUS      equ	135	;# 
  4140   000088                     SPI1TWIDTH      equ	136	;# 
  4141   000089                     SPI1BAUD        equ	137	;# 
  4142   00008A                     SPI1INTF        equ	138	;# 
  4143   00008B                     SPI1INTE        equ	139	;# 
  4144   00008C                     SPI1CLK         equ	140	;# 
  4145   0000AC                     ACTCON          equ	172	;# 
  4146   0000AD                     OSCCON1         equ	173	;# 
  4147   0000AE                     OSCCON2         equ	174	;# 
  4148   0000AF                     OSCCON3         equ	175	;# 
  4149   0000B0                     OSCTUNE         equ	176	;# 
  4150   0000B1                     OSCFRQ          equ	177	;# 
  4151   0000B1                     OSCFREQ         equ	177	;# 
  4152   0000B2                     OSCSTAT         equ	178	;# 
  4153   0000B2                     OSCSTAT1        equ	178	;# 
  4154   0000B3                     OSCEN           equ	179	;# 
  4155   0000B4                     PRLOCK          equ	180	;# 
  4156   0000B5                     SCANPR          equ	181	;# 
  4157   0000B6                     DMA1PR          equ	182	;# 
  4158   0000B7                     DMA2PR          equ	183	;# 
  4159   0000B8                     DMA3PR          equ	184	;# 
  4160   0000B9                     DMA4PR          equ	185	;# 
  4161   0000BE                     MAINPR          equ	190	;# 
  4162   0000BF                     ISRPR           equ	191	;# 
  4163   0000C0                     DAC2DAT         equ	192	;# 
  4164   0000C0                     DAC2DATL        equ	192	;# 
  4165   0000C2                     DAC2CON         equ	194	;# 
  4166   0000C3                     DAC3DAT         equ	195	;# 
  4167   0000C3                     DAC3DATL        equ	195	;# 
  4168   0000C5                     DAC3CON         equ	197	;# 
  4169   0000D4                     CLCDATA         equ	212	;# 
  4170   0000D5                     CLCSELECT       equ	213	;# 
  4171   0000D6                     CLCnCON         equ	214	;# 
  4172   0000D7                     CLCnPOL         equ	215	;# 
  4173   0000D8                     CLCnSEL0        equ	216	;# 
  4174   0000D9                     CLCnSEL1        equ	217	;# 
  4175   0000DA                     CLCnSEL2        equ	218	;# 
  4176   0000DB                     CLCnSEL3        equ	219	;# 
  4177   0000DC                     CLCnGLS0        equ	220	;# 
  4178   0000DD                     CLCnGLS1        equ	221	;# 
  4179   0000DE                     CLCnGLS2        equ	222	;# 
  4180   0000DF                     CLCnGLS3        equ	223	;# 
  4181   0000E8                     DMASELECT       equ	232	;# 
  4182   0000E9                     DMAnBUF         equ	233	;# 
  4183   0000EA                     DMAnDCNT        equ	234	;# 
  4184   0000EA                     DMAnDCNTL       equ	234	;# 
  4185   0000EB                     DMAnDCNTH       equ	235	;# 
  4186   0000EC                     DMAnDPTR        equ	236	;# 
  4187   0000EC                     DMAnDPTRL       equ	236	;# 
  4188   0000ED                     DMAnDPTRH       equ	237	;# 
  4189   0000EE                     DMAnDSZ         equ	238	;# 
  4190   0000EE                     DMAnDSZL        equ	238	;# 
  4191   0000EF                     DMAnDSZH        equ	239	;# 
  4192   0000F0                     DMAnDSA         equ	240	;# 
  4193   0000F0                     DMAnDSAL        equ	240	;# 
  4194   0000F1                     DMAnDSAH        equ	241	;# 
  4195   0000F2                     DMAnSCNT        equ	242	;# 
  4196   0000F2                     DMAnSCNTL       equ	242	;# 
  4197   0000F3                     DMAnSCNTH       equ	243	;# 
  4198   0000F4                     DMAnSPTR        equ	244	;# 
  4199   0000F4                     DMAnSPTRL       equ	244	;# 
  4200   0000F5                     DMAnSPTRH       equ	245	;# 
  4201   0000F6                     DMAnSPTRU       equ	246	;# 
  4202   0000F7                     DMAnSSZ         equ	247	;# 
  4203   0000F7                     DMAnSSZL        equ	247	;# 
  4204   0000F8                     DMAnSSZH        equ	248	;# 
  4205   0000F9                     DMAnSSA         equ	249	;# 
  4206   0000F9                     DMAnSSAL        equ	249	;# 
  4207   0000FA                     DMAnSSAH        equ	250	;# 
  4208   0000FB                     DMAnSSAU        equ	251	;# 
  4209   0000FC                     DMAnCON0        equ	252	;# 
  4210   0000FD                     DMAnCON1        equ	253	;# 
  4211   0000FE                     DMAnAIRQ        equ	254	;# 
  4212   0000FF                     DMAnSIRQ        equ	255	;# 
  4213   000100                     PORTW           equ	256	;# 
  4214   000101                     LATW            equ	257	;# 
  4215   000102                     PORTWIN0        equ	258	;# 
  4216   000103                     PORTWIN1        equ	259	;# 
  4217   000104                     PORTWIN2        equ	260	;# 
  4218   000105                     PORTWIN3        equ	261	;# 
  4219   000106                     PORTWIN4        equ	262	;# 
  4220   000107                     PORTWIN5        equ	263	;# 
  4221   000108                     PORTWIN6        equ	264	;# 
  4222   000109                     PORTWIN7        equ	265	;# 
  4223   00010A                     PORTWCLK        equ	266	;# 
  4224   00010B                     PORTWDF         equ	267	;# 
  4225   00010C                     PORTWCON        equ	268	;# 
  4226   000110                     ADCGA           equ	272	;# 
  4227   000111                     ADCGB           equ	273	;# 
  4228   000112                     ADCGC           equ	274	;# 
  4229   000113                     ADCGD           equ	275	;# 
  4230   000114                     ADCGE           equ	276	;# 
  4231   000115                     ADCGF           equ	277	;# 
  4232   00011F                     OPA1CON0        equ	287	;# 
  4233   000120                     OPA1CON1        equ	288	;# 
  4234   000121                     OPA1CON2        equ	289	;# 
  4235   000122                     OPA1CON3        equ	290	;# 
  4236   000123                     OPA1CON4        equ	291	;# 
  4237   000124                     OPA1HWC         equ	292	;# 
  4238   000125                     OPA1OFFSET      equ	293	;# 
  4239   000126                     OPA1ORS         equ	294	;# 
  4240   000127                     OPA2CON0        equ	295	;# 
  4241   000128                     OPA2CON1        equ	296	;# 
  4242   000129                     OPA2CON2        equ	297	;# 
  4243   00012A                     OPA2CON3        equ	298	;# 
  4244   00012B                     OPA2CON4        equ	299	;# 
  4245   00012C                     OPA2HWC         equ	300	;# 
  4246   00012D                     OPA2OFFSET      equ	301	;# 
  4247   00012E                     OPA2ORS         equ	302	;# 
  4248   000140                     LATA            equ	320	;# 
  4249   000141                     LATB            equ	321	;# 
  4250   000142                     LATC            equ	322	;# 
  4251   000143                     LATD            equ	323	;# 
  4252   000144                     LATE            equ	324	;# 
  4253   000145                     LATF            equ	325	;# 
  4254   000148                     TRISA           equ	328	;# 
  4255   000149                     TRISB           equ	329	;# 
  4256   00014A                     TRISC           equ	330	;# 
  4257   00014B                     TRISD           equ	331	;# 
  4258   00014C                     TRISE           equ	332	;# 
  4259   00014D                     TRISF           equ	333	;# 
  4260   000150                     PORTA           equ	336	;# 
  4261   000151                     PORTB           equ	337	;# 
  4262   000152                     PORTC           equ	338	;# 
  4263   000153                     PORTD           equ	339	;# 
  4264   000154                     PORTE           equ	340	;# 
  4265   000155                     PORTF           equ	341	;# 
  4266   0001C0                     APMCON          equ	448	;# 
  4267   0001C1                     APMPRE          equ	449	;# 
  4268   0001C1                     APMPREL         equ	449	;# 
  4269   0001C2                     APMPREH         equ	450	;# 
  4270   0001C3                     APMPER          equ	451	;# 
  4271   0001C3                     APMPERL         equ	451	;# 
  4272   0001C4                     APMPERH         equ	452	;# 
  4273   0001C5                     APMSTART1       equ	453	;# 
  4274   0001C5                     APMSTART1L      equ	453	;# 
  4275   0001C6                     APMSTART1H      equ	454	;# 
  4276   0001C7                     APMPERS1        equ	455	;# 
  4277   0001C7                     APMPERS1L       equ	455	;# 
  4278   0001C8                     APMPERS1H       equ	456	;# 
  4279   0001C9                     APMSTART2       equ	457	;# 
  4280   0001C9                     APMSTART2L      equ	457	;# 
  4281   0001CA                     APMSTART2H      equ	458	;# 
  4282   0001CB                     APMSTART2U      equ	459	;# 
  4283   0001CC                     APMPERS2        equ	460	;# 
  4284   0001CC                     APMPERS2L       equ	460	;# 
  4285   0001CD                     APMPERS2H       equ	461	;# 
  4286   0001CE                     APMEND1         equ	462	;# 
  4287   0001CE                     APMEND1L        equ	462	;# 
  4288   0001CF                     APMEND1H        equ	463	;# 
  4289   0001D0                     APMEND1U        equ	464	;# 
  4290   0001D1                     APMPERE1        equ	465	;# 
  4291   0001D1                     APMPERE1L       equ	465	;# 
  4292   0001D2                     APMPERE1H       equ	466	;# 
  4293   0001D3                     APMEND2         equ	467	;# 
  4294   0001D3                     APMEND2L        equ	467	;# 
  4295   0001D4                     APMEND2H        equ	468	;# 
  4296   0001D5                     APMEND2U        equ	469	;# 
  4297   0001D6                     APMPERE2        equ	470	;# 
  4298   0001D6                     APMPERE2L       equ	470	;# 
  4299   0001D7                     APMPERE2H       equ	471	;# 
  4300   0001D8                     APMCLK          equ	472	;# 
  4301   0001D9                     APMSTATUS       equ	473	;# 
  4302   0001D9                     APMSTATUSL      equ	473	;# 
  4303   0001DA                     APMSTATUSH      equ	474	;# 
  4304   000200                     PPSLOCK         equ	512	;# 
  4305   000201                     RA0PPS          equ	513	;# 
  4306   000202                     RA1PPS          equ	514	;# 
  4307   000203                     RA2PPS          equ	515	;# 
  4308   000204                     RA3PPS          equ	516	;# 
  4309   000205                     RA4PPS          equ	517	;# 
  4310   000206                     RA5PPS          equ	518	;# 
  4311   000207                     RA6PPS          equ	519	;# 
  4312   000208                     RA7PPS          equ	520	;# 
  4313   000209                     RB0PPS          equ	521	;# 
  4314   00020A                     RB1PPS          equ	522	;# 
  4315   00020B                     RB2PPS          equ	523	;# 
  4316   00020C                     RB3PPS          equ	524	;# 
  4317   00020D                     RB4PPS          equ	525	;# 
  4318   00020E                     RB5PPS          equ	526	;# 
  4319   00020F                     RB6PPS          equ	527	;# 
  4320   000210                     RB7PPS          equ	528	;# 
  4321   000211                     RC0PPS          equ	529	;# 
  4322   000212                     RC1PPS          equ	530	;# 
  4323   000213                     RC2PPS          equ	531	;# 
  4324   000214                     RC3PPS          equ	532	;# 
  4325   000215                     RC4PPS          equ	533	;# 
  4326   000216                     RC5PPS          equ	534	;# 
  4327   000217                     RC6PPS          equ	535	;# 
  4328   000218                     RC7PPS          equ	536	;# 
  4329   000219                     RD0PPS          equ	537	;# 
  4330   00021A                     RD1PPS          equ	538	;# 
  4331   00021B                     RD2PPS          equ	539	;# 
  4332   00021C                     RD3PPS          equ	540	;# 
  4333   00021D                     RD4PPS          equ	541	;# 
  4334   00021E                     RD5PPS          equ	542	;# 
  4335   00021F                     RD6PPS          equ	543	;# 
  4336   000220                     RD7PPS          equ	544	;# 
  4337   000221                     RE0PPS          equ	545	;# 
  4338   000222                     RE1PPS          equ	546	;# 
  4339   000223                     RE2PPS          equ	547	;# 
  4340   000225                     RF0PPS          equ	549	;# 
  4341   000226                     RF1PPS          equ	550	;# 
  4342   000227                     RF2PPS          equ	551	;# 
  4343   000228                     RF3PPS          equ	552	;# 
  4344   000229                     RF4PPS          equ	553	;# 
  4345   00022A                     RF5PPS          equ	554	;# 
  4346   00022B                     RF6PPS          equ	555	;# 
  4347   00022C                     RF7PPS          equ	556	;# 
  4348   00023E                     INT0PPS         equ	574	;# 
  4349   00023F                     INT1PPS         equ	575	;# 
  4350   000240                     INT2PPS         equ	576	;# 
  4351   000241                     T0CKIPPS        equ	577	;# 
  4352   000242                     T1CKIPPS        equ	578	;# 
  4353   000243                     T1GPPS          equ	579	;# 
  4354   000244                     T3CKIPPS        equ	580	;# 
  4355   000245                     T3GPPS          equ	581	;# 
  4356   000248                     T2INPPS         equ	584	;# 
  4357   000249                     T4INPPS         equ	585	;# 
  4358   00024F                     CCP1PPS         equ	591	;# 
  4359   000250                     CCP2PPS         equ	592	;# 
  4360   000251                     PWM1ERSPPS      equ	593	;# 
  4361   000252                     PWM2ERSPPS      equ	594	;# 
  4362   000253                     PWM3ERSPPS      equ	595	;# 
  4363   000257                     PWMIN0PPS       equ	599	;# 
  4364   000258                     PWMIN1PPS       equ	600	;# 
  4365   00025B                     CWG1PPS         equ	603	;# 
  4366   00025B                     CWG1INPPS       equ	603	;# 
  4367   000261                     CLCIN0PPS       equ	609	;# 
  4368   000262                     CLCIN1PPS       equ	610	;# 
  4369   000263                     CLCIN2PPS       equ	611	;# 
  4370   000264                     CLCIN3PPS       equ	612	;# 
  4371   000265                     CLCIN4PPS       equ	613	;# 
  4372   000266                     CLCIN5PPS       equ	614	;# 
  4373   000267                     CLCIN6PPS       equ	615	;# 
  4374   000268                     CLCIN7PPS       equ	616	;# 
  4375   000269                     ADACTPPS        equ	617	;# 
  4376   00026A                     SPI1SCKPPS      equ	618	;# 
  4377   00026B                     SPI1SDIPPS      equ	619	;# 
  4378   00026C                     SPI1SSPPS       equ	620	;# 
  4379   000270                     I2C1SDAPPS      equ	624	;# 
  4380   000271                     I2C1SCLPPS      equ	625	;# 
  4381   000272                     U1RXPPS         equ	626	;# 
  4382   000273                     U1CTSPPS        equ	627	;# 
  4383   000274                     U2RXPPS         equ	628	;# 
  4384   000275                     U2CTSPPS        equ	629	;# 
  4385   000276                     OPA1ORPPS       equ	630	;# 
  4386   000277                     OPA2ORPPS       equ	631	;# 
  4387   000278                     TUIN0PPS        equ	632	;# 
  4388   000279                     TUIN1PPS        equ	633	;# 
  4389   00027A                     APMCLKPPS       equ	634	;# 
  4390   000285                     RB2I2C          equ	645	;# 
  4391   000286                     RB1I2C          equ	646	;# 
  4392   000287                     RC4I2C          equ	647	;# 
  4393   000288                     RC3I2C          equ	648	;# 
  4394   000289                     I2C1RXB         equ	649	;# 
  4395   00028A                     I2C1TXB         equ	650	;# 
  4396   00028B                     I2C1CNT         equ	651	;# 
  4397   00028B                     I2C1CNTL        equ	651	;# 
  4398   00028C                     I2C1CNTH        equ	652	;# 
  4399   00028D                     I2C1ADB0        equ	653	;# 
  4400   00028E                     I2C1ADB1        equ	654	;# 
  4401   00028F                     I2C1ADR0        equ	655	;# 
  4402   000290                     I2C1ADR1        equ	656	;# 
  4403   000291                     I2C1ADR2        equ	657	;# 
  4404   000292                     I2C1ADR3        equ	658	;# 
  4405   000293                     I2C1CON0        equ	659	;# 
  4406   000294                     I2C1CON1        equ	660	;# 
  4407   000295                     I2C1CON2        equ	661	;# 
  4408   000296                     I2C1CON3        equ	662	;# 
  4409   000297                     I2C1ERR         equ	663	;# 
  4410   000298                     I2C1STAT0       equ	664	;# 
  4411   000299                     I2C1STAT1       equ	665	;# 
  4412   00029A                     I2C1PIR         equ	666	;# 
  4413   00029B                     I2C1PIE         equ	667	;# 
  4414   00029C                     I2C1BTO         equ	668	;# 
  4415   00029D                     I2C1BAUD        equ	669	;# 
  4416   00029E                     I2C1CLK         equ	670	;# 
  4417   00029F                     I2C1BTOC        equ	671	;# 
  4418   0002A0                     U1RXB           equ	672	;# 
  4419   0002A0                     U1RXBL          equ	672	;# 
  4420   0002A1                     U1RXCHK         equ	673	;# 
  4421   0002A2                     U1TXB           equ	674	;# 
  4422   0002A2                     U1TXBL          equ	674	;# 
  4423   0002A3                     U1TXCHK         equ	675	;# 
  4424   0002A4                     U1P1            equ	676	;# 
  4425   0002A4                     U1P1L           equ	676	;# 
  4426   0002A5                     U1P1H           equ	677	;# 
  4427   0002A6                     U1P2            equ	678	;# 
  4428   0002A6                     U1P2L           equ	678	;# 
  4429   0002A7                     U1P2H           equ	679	;# 
  4430   0002A8                     U1P3            equ	680	;# 
  4431   0002A8                     U1P3L           equ	680	;# 
  4432   0002A9                     U1P3H           equ	681	;# 
  4433   0002AA                     U1CON0          equ	682	;# 
  4434   0002AB                     U1CON1          equ	683	;# 
  4435   0002AC                     U1CON2          equ	684	;# 
  4436   0002AD                     U1BRG           equ	685	;# 
  4437   0002AD                     U1BRGL          equ	685	;# 
  4438   0002AE                     U1BRGH          equ	686	;# 
  4439   0002AF                     U1FIFO          equ	687	;# 
  4440   0002B0                     U1UIR           equ	688	;# 
  4441   0002B1                     U1ERRIR         equ	689	;# 
  4442   0002B2                     U1ERRIE         equ	690	;# 
  4443   0002B4                     U2RXB           equ	692	;# 
  4444   0002B4                     U2RXBL          equ	692	;# 
  4445   0002B6                     U2TXB           equ	694	;# 
  4446   0002B6                     U2TXBL          equ	694	;# 
  4447   0002B8                     U2P1            equ	696	;# 
  4448   0002B8                     U2P1L           equ	696	;# 
  4449   0002BA                     U2P2            equ	698	;# 
  4450   0002BA                     U2P2L           equ	698	;# 
  4451   0002BC                     U2P3            equ	700	;# 
  4452   0002BC                     U2P3L           equ	700	;# 
  4453   0002BE                     U2CON0          equ	702	;# 
  4454   0002BF                     U2CON1          equ	703	;# 
  4455   0002C0                     U2CON2          equ	704	;# 
  4456   0002C1                     U2BRG           equ	705	;# 
  4457   0002C1                     U2BRGL          equ	705	;# 
  4458   0002C2                     U2BRGH          equ	706	;# 
  4459   0002C3                     U2FIFO          equ	707	;# 
  4460   0002C4                     U2UIR           equ	708	;# 
  4461   0002C5                     U2ERRIR         equ	709	;# 
  4462   0002C6                     U2ERRIE         equ	710	;# 
  4463   000312                     TMR1            equ	786	;# 
  4464   000312                     TMR1L           equ	786	;# 
  4465   000313                     TMR1H           equ	787	;# 
  4466   000314                     T1CON           equ	788	;# 
  4467   000314                     TMR1CON         equ	788	;# 
  4468   000315                     T1GCON          equ	789	;# 
  4469   000315                     TMR1GCON        equ	789	;# 
  4470   000316                     T1GATE          equ	790	;# 
  4471   000316                     TMR1GATE        equ	790	;# 
  4472   000317                     T1CLK           equ	791	;# 
  4473   000317                     TMR1CLK         equ	791	;# 
  4474   000317                     PR1             equ	791	;# 
  4475   000318                     TMR0L           equ	792	;# 
  4476   000318                     TMR0            equ	792	;# 
  4477   000319                     TMR0H           equ	793	;# 
  4478   000319                     PR0             equ	793	;# 
  4479   00031A                     T0CON0          equ	794	;# 
  4480   00031B                     T0CON1          equ	795	;# 
  4481   00031D                     T2TMR           equ	797	;# 
  4482   00031D                     TMR2            equ	797	;# 
  4483   00031E                     T2PR            equ	798	;# 
  4484   00031E                     PR2             equ	798	;# 
  4485   00031F                     T2CON           equ	799	;# 
  4486   000320                     T2HLT           equ	800	;# 
  4487   000321                     T2CLKCON        equ	801	;# 
  4488   000321                     T2CLK           equ	801	;# 
  4489   000322                     T2RST           equ	802	;# 
  4490   000323                     TMR3            equ	803	;# 
  4491   000323                     TMR3L           equ	803	;# 
  4492   000324                     TMR3H           equ	804	;# 
  4493   000325                     T3CON           equ	805	;# 
  4494   000325                     TMR3CON         equ	805	;# 
  4495   000326                     T3GCON          equ	806	;# 
  4496   000326                     TMR3GCON        equ	806	;# 
  4497   000327                     T3GATE          equ	807	;# 
  4498   000327                     TMR3GATE        equ	807	;# 
  4499   000328                     T3CLK           equ	808	;# 
  4500   000328                     TMR3CLK         equ	808	;# 
  4501   000328                     PR3             equ	808	;# 
  4502   00032A                     T4TMR           equ	810	;# 
  4503   00032A                     TMR4            equ	810	;# 
  4504   00032B                     T4PR            equ	811	;# 
  4505   00032B                     PR4             equ	811	;# 
  4506   00032C                     T4CON           equ	812	;# 
  4507   00032D                     T4HLT           equ	813	;# 
  4508   00032E                     T4CLKCON        equ	814	;# 
  4509   00032E                     T4CLK           equ	814	;# 
  4510   00032F                     T4RST           equ	815	;# 
  4511   000340                     CCPR1           equ	832	;# 
  4512   000340                     CCPR1L          equ	832	;# 
  4513   000341                     CCPR1H          equ	833	;# 
  4514   000342                     CCP1CON         equ	834	;# 
  4515   000343                     CCP1CAP         equ	835	;# 
  4516   000344                     CCPR2           equ	836	;# 
  4517   000344                     CCPR2L          equ	836	;# 
  4518   000345                     CCPR2H          equ	837	;# 
  4519   000346                     CCP2CON         equ	838	;# 
  4520   000347                     CCP2CAP         equ	839	;# 
  4521   00034C                     CCPTMRS0        equ	844	;# 
  4522   00034E                     CRCDATA         equ	846	;# 
  4523   00034E                     CRCDATAL        equ	846	;# 
  4524   00034F                     CRCDATAH        equ	847	;# 
  4525   000350                     CRCDATAU        equ	848	;# 
  4526   000351                     CRCDATAT        equ	849	;# 
  4527   000352                     CRCOUT          equ	850	;# 
  4528   000352                     CRCSHFT         equ	850	;# 
  4529   000352                     CRCXOR          equ	850	;# 
  4530   000352                     CRCOUTL         equ	850	;# 
  4531   000352                     CRCSHFTL        equ	850	;# 
  4532   000352                     CRCSHIFTL       equ	850	;# 
  4533   000352                     CRCXORL         equ	850	;# 
  4534   000353                     CRCOUTH         equ	851	;# 
  4535   000353                     CRCSHFTH        equ	851	;# 
  4536   000353                     CRCSHIFTH       equ	851	;# 
  4537   000353                     CRCXORH         equ	851	;# 
  4538   000354                     CRCOUTU         equ	852	;# 
  4539   000354                     CRCSHFTU        equ	852	;# 
  4540   000354                     CRCSHIFTU       equ	852	;# 
  4541   000354                     CRCXORU         equ	852	;# 
  4542   000355                     CRCOUTT         equ	853	;# 
  4543   000355                     CRCSHFTT        equ	853	;# 
  4544   000355                     CRCSHIFTT       equ	853	;# 
  4545   000355                     CRCXORT         equ	853	;# 
  4546   000356                     CRCCON0         equ	854	;# 
  4547   000357                     CRCCON1         equ	855	;# 
  4548   000358                     CRCCON2         equ	856	;# 
  4549   00035A                     SCANLADR        equ	858	;# 
  4550   00035A                     SCANLADRL       equ	858	;# 
  4551   00035B                     SCANLADRH       equ	859	;# 
  4552   00035C                     SCANLADRU       equ	860	;# 
  4553   00035D                     SCANHADR        equ	861	;# 
  4554   00035D                     SCANHADRL       equ	861	;# 
  4555   00035E                     SCANHADRH       equ	862	;# 
  4556   00035F                     SCANHADRU       equ	863	;# 
  4557   000360                     SCANCON0        equ	864	;# 
  4558   000361                     SCANTRIG        equ	865	;# 
  4559   000373                     STATUS_CSHAD    equ	883	;# 
  4560   000374                     WREG_CSHAD      equ	884	;# 
  4561   000375                     BSR_CSHAD       equ	885	;# 
  4562   000376                     SHADCON         equ	886	;# 
  4563   000377                     STATUS_SHAD     equ	887	;# 
  4564   000378                     WREG_SHAD       equ	888	;# 
  4565   000379                     BSR_SHAD        equ	889	;# 
  4566   00037A                     PCLATH_SHAD     equ	890	;# 
  4567   00037B                     PCLATU_SHAD     equ	891	;# 
  4568   00037C                     FSR0SH          equ	892	;# 
  4569   00037C                     FSR0L_SHAD      equ	892	;# 
  4570   00037D                     FSR0H_SHAD      equ	893	;# 
  4571   00037E                     FSR1SH          equ	894	;# 
  4572   00037E                     FSR1L_SHAD      equ	894	;# 
  4573   00037F                     FSR1H_SHAD      equ	895	;# 
  4574   000380                     FSR2SH          equ	896	;# 
  4575   000380                     FSR2L_SHAD      equ	896	;# 
  4576   000381                     FSR2H_SHAD      equ	897	;# 
  4577   000382                     PRODSH          equ	898	;# 
  4578   000382                     PRODL_SHAD      equ	898	;# 
  4579   000383                     PRODH_SHAD      equ	899	;# 
  4580   0003A0                     TU16ACON0       equ	928	;# 
  4581   0003A1                     TU16ACON1       equ	929	;# 
  4582   0003A2                     TU16AHLT        equ	930	;# 
  4583   0003A3                     TU16APS         equ	931	;# 
  4584   0003A4                     TU16ATMR        equ	932	;# 
  4585   0003A4                     TU16ACR         equ	932	;# 
  4586   0003A4                     TU16ATMRL       equ	932	;# 
  4587   0003A4                     TU16ACRL        equ	932	;# 
  4588   0003A5                     TU16ATMRH       equ	933	;# 
  4589   0003A5                     TU16ACRH        equ	933	;# 
  4590   0003A6                     TU16APR         equ	934	;# 
  4591   0003A6                     TU16APRL        equ	934	;# 
  4592   0003A7                     TU16APRH        equ	935	;# 
  4593   0003A8                     TU16ACLK        equ	936	;# 
  4594   0003A9                     TU16AERS        equ	937	;# 
  4595   0003AA                     TU16BCON0       equ	938	;# 
  4596   0003AB                     TU16BCON1       equ	939	;# 
  4597   0003AC                     TU16BHLT        equ	940	;# 
  4598   0003AD                     TU16BPS         equ	941	;# 
  4599   0003AE                     TU16BTMR        equ	942	;# 
  4600   0003AE                     TU16BCR         equ	942	;# 
  4601   0003AE                     TU16BTMRL       equ	942	;# 
  4602   0003AE                     TU16BCRL        equ	942	;# 
  4603   0003AF                     TU16BTMRH       equ	943	;# 
  4604   0003AF                     TU16BCRH        equ	943	;# 
  4605   0003B0                     TU16BPR         equ	944	;# 
  4606   0003B0                     TU16BPRL        equ	944	;# 
  4607   0003B1                     TU16BPRH        equ	945	;# 
  4608   0003B2                     TU16BCLK        equ	946	;# 
  4609   0003B3                     TU16BERS        equ	947	;# 
  4610   0003B4                     TUCHAIN         equ	948	;# 
  4611   0003BC                     CWG1CLK         equ	956	;# 
  4612   0003BC                     CWG1CLKCON      equ	956	;# 
  4613   0003BD                     CWG1ISM         equ	957	;# 
  4614   0003BD                     CWG1DAT         equ	957	;# 
  4615   0003BE                     CWG1DBR         equ	958	;# 
  4616   0003BF                     CWG1DBF         equ	959	;# 
  4617   0003C0                     CWG1CON0        equ	960	;# 
  4618   0003C1                     CWG1CON1        equ	961	;# 
  4619   0003C2                     CWG1AS0         equ	962	;# 
  4620   0003C3                     CWG1AS1         equ	963	;# 
  4621   0003C4                     CWG1STR         equ	964	;# 
  4622   0003D7                     FVRCON          equ	983	;# 
  4623   0003D8                     ADCPCON         equ	984	;# 
  4624   0003D8                     ADCP            equ	984	;# 
  4625   0003D9                     ADLTH           equ	985	;# 
  4626   0003D9                     ADLTHL          equ	985	;# 
  4627   0003DA                     ADLTHH          equ	986	;# 
  4628   0003DB                     ADUTH           equ	987	;# 
  4629   0003DB                     ADUTHL          equ	987	;# 
  4630   0003DC                     ADUTHH          equ	988	;# 
  4631   0003DD                     ADERR           equ	989	;# 
  4632   0003DD                     ADERRL          equ	989	;# 
  4633   0003DE                     ADERRH          equ	990	;# 
  4634   0003DF                     ADSTPT          equ	991	;# 
  4635   0003DF                     ADSTPTL         equ	991	;# 
  4636   0003E0                     ADSTPTH         equ	992	;# 
  4637   0003E1                     ADFLTR          equ	993	;# 
  4638   0003E1                     ADFLTRL         equ	993	;# 
  4639   0003E2                     ADFLTRH         equ	994	;# 
  4640   0003E3                     ADACC           equ	995	;# 
  4641   0003E3                     ADACCL          equ	995	;# 
  4642   0003E4                     ADACCH          equ	996	;# 
  4643   0003E5                     ADACCU          equ	997	;# 
  4644   0003E6                     ADCNT           equ	998	;# 
  4645   0003E7                     ADRPT           equ	999	;# 
  4646   0003E8                     ADPREV          equ	1000	;# 
  4647   0003E8                     ADPREVL         equ	1000	;# 
  4648   0003E9                     ADPREVH         equ	1001	;# 
  4649   0003EA                     ADRES           equ	1002	;# 
  4650   0003EA                     ADRESL          equ	1002	;# 
  4651   0003EB                     ADRESH          equ	1003	;# 
  4652   0003EC                     ADPCH           equ	1004	;# 
  4653   0003ED                     ADNCH           equ	1005	;# 
  4654   0003EE                     ADACQ           equ	1006	;# 
  4655   0003EE                     ADACQL          equ	1006	;# 
  4656   0003EF                     ADACQH          equ	1007	;# 
  4657   0003F0                     ADCAP           equ	1008	;# 
  4658   0003F1                     ADPRE           equ	1009	;# 
  4659   0003F1                     ADPREL          equ	1009	;# 
  4660   0003F2                     ADPREH          equ	1010	;# 
  4661   0003F3                     ADCON0          equ	1011	;# 
  4662   0003F4                     ADCON1          equ	1012	;# 
  4663   0003F5                     ADCON2          equ	1013	;# 
  4664   0003F6                     ADCON3          equ	1014	;# 
  4665   0003F7                     ADSTAT          equ	1015	;# 
  4666   0003F8                     ADREF           equ	1016	;# 
  4667   0003F9                     ADACT           equ	1017	;# 
  4668   0003FA                     ADCLK           equ	1018	;# 
  4669   0003FB                     ADCTX           equ	1019	;# 
  4670   0003FC                     ADCSEL1         equ	1020	;# 
  4671   0003FD                     ADCSEL2         equ	1021	;# 
  4672   0003FE                     ADCSEL3         equ	1022	;# 
  4673   0003FF                     ADCSEL4         equ	1023	;# 
  4674   000400                     ANSELA          equ	1024	;# 
  4675   000401                     WPUA            equ	1025	;# 
  4676   000402                     ODCONA          equ	1026	;# 
  4677   000403                     SLRCONA         equ	1027	;# 
  4678   000404                     INLVLA          equ	1028	;# 
  4679   000405                     IOCAP           equ	1029	;# 
  4680   000406                     IOCAN           equ	1030	;# 
  4681   000407                     IOCAF           equ	1031	;# 
  4682   000408                     ANSELB          equ	1032	;# 
  4683   000409                     WPUB            equ	1033	;# 
  4684   00040A                     ODCONB          equ	1034	;# 
  4685   00040B                     SLRCONB         equ	1035	;# 
  4686   00040C                     INLVLB          equ	1036	;# 
  4687   00040D                     IOCBP           equ	1037	;# 
  4688   00040E                     IOCBN           equ	1038	;# 
  4689   00040F                     IOCBF           equ	1039	;# 
  4690   000410                     ANSELC          equ	1040	;# 
  4691   000411                     WPUC            equ	1041	;# 
  4692   000412                     ODCONC          equ	1042	;# 
  4693   000413                     SLRCONC         equ	1043	;# 
  4694   000414                     INLVLC          equ	1044	;# 
  4695   000415                     IOCCP           equ	1045	;# 
  4696   000416                     IOCCN           equ	1046	;# 
  4697   000417                     IOCCF           equ	1047	;# 
  4698   000418                     ANSELD          equ	1048	;# 
  4699   000419                     WPUD            equ	1049	;# 
  4700   00041A                     ODCOND          equ	1050	;# 
  4701   00041B                     SLRCOND         equ	1051	;# 
  4702   00041C                     INLVLD          equ	1052	;# 
  4703   000420                     ANSELE          equ	1056	;# 
  4704   000421                     WPUE            equ	1057	;# 
  4705   000422                     ODCONE          equ	1058	;# 
  4706   000423                     SLRCONE         equ	1059	;# 
  4707   000424                     INLVLE          equ	1060	;# 
  4708   000425                     IOCEP           equ	1061	;# 
  4709   000426                     IOCEN           equ	1062	;# 
  4710   000427                     IOCEF           equ	1063	;# 
  4711   000428                     ANSELF          equ	1064	;# 
  4712   000429                     WPUF            equ	1065	;# 
  4713   00042A                     ODCONF          equ	1066	;# 
  4714   00042B                     SLRCONF         equ	1067	;# 
  4715   00042C                     INLVLF          equ	1068	;# 
  4716   00043D                     IOCWP           equ	1085	;# 
  4717   00043E                     IOCWN           equ	1086	;# 
  4718   00043F                     IOCWF           equ	1087	;# 
  4719   000440                     NCO1ACC         equ	1088	;# 
  4720   000440                     NCO1ACCL        equ	1088	;# 
  4721   000441                     NCO1ACCH        equ	1089	;# 
  4722   000442                     NCO1ACCU        equ	1090	;# 
  4723   000443                     NCO1INC         equ	1091	;# 
  4724   000443                     NCO1INCL        equ	1091	;# 
  4725   000444                     NCO1INCH        equ	1092	;# 
  4726   000445                     NCO1INCU        equ	1093	;# 
  4727   000446                     NCO1CON         equ	1094	;# 
  4728   000447                     NCO1CLK         equ	1095	;# 
  4729   000458                     FSCMCON         equ	1112	;# 
  4730   000459                     IVTLOCK         equ	1113	;# 
  4731   00045A                     IVTAD           equ	1114	;# 
  4732   00045A                     IVTADL          equ	1114	;# 
  4733   00045B                     IVTADH          equ	1115	;# 
  4734   00045C                     IVTADU          equ	1116	;# 
  4735   00045D                     IVTBASE         equ	1117	;# 
  4736   00045D                     IVTBASEL        equ	1117	;# 
  4737   00045E                     IVTBASEH        equ	1118	;# 
  4738   00045F                     IVTBASEU        equ	1119	;# 
  4739   000460                     PWM1ERS         equ	1120	;# 
  4740   000461                     PWM1CLK         equ	1121	;# 
  4741   000462                     PWM1LDS         equ	1122	;# 
  4742   000463                     PWM1PR          equ	1123	;# 
  4743   000463                     PWM1PRL         equ	1123	;# 
  4744   000464                     PWM1PRH         equ	1124	;# 
  4745   000465                     PWM1CPRE        equ	1125	;# 
  4746   000466                     PWM1PIPOS       equ	1126	;# 
  4747   000467                     PWM1GIR         equ	1127	;# 
  4748   000468                     PWM1GIE         equ	1128	;# 
  4749   000469                     PWM1CON         equ	1129	;# 
  4750   00046A                     PWM1S1CFG       equ	1130	;# 
  4751   00046B                     PWM1S1P1        equ	1131	;# 
  4752   00046B                     PWM1S1P1L       equ	1131	;# 
  4753   00046C                     PWM1S1P1H       equ	1132	;# 
  4754   00046D                     PWM1S1P2        equ	1133	;# 
  4755   00046D                     PWM1S1P2L       equ	1133	;# 
  4756   00046E                     PWM1S1P2H       equ	1134	;# 
  4757   00046F                     PWM2ERS         equ	1135	;# 
  4758   000470                     PWM2CLK         equ	1136	;# 
  4759   000471                     PWM2LDS         equ	1137	;# 
  4760   000472                     PWM2PR          equ	1138	;# 
  4761   000472                     PWM2PRL         equ	1138	;# 
  4762   000473                     PWM2PRH         equ	1139	;# 
  4763   000474                     PWM2CPRE        equ	1140	;# 
  4764   000475                     PWM2PIPOS       equ	1141	;# 
  4765   000476                     PWM2GIR         equ	1142	;# 
  4766   000477                     PWM2GIE         equ	1143	;# 
  4767   000478                     PWM2CON         equ	1144	;# 
  4768   000479                     PWM2S1CFG       equ	1145	;# 
  4769   00047A                     PWM2S1P1        equ	1146	;# 
  4770   00047A                     PWM2S1P1L       equ	1146	;# 
  4771   00047B                     PWM2S1P1H       equ	1147	;# 
  4772   00047C                     PWM2S1P2        equ	1148	;# 
  4773   00047C                     PWM2S1P2L       equ	1148	;# 
  4774   00047D                     PWM2S1P2H       equ	1149	;# 
  4775   00047E                     PWM3ERS         equ	1150	;# 
  4776   00047F                     PWM3CLK         equ	1151	;# 
  4777   000480                     PWM3LDS         equ	1152	;# 
  4778   000481                     PWM3PR          equ	1153	;# 
  4779   000481                     PWM3PRL         equ	1153	;# 
  4780   000482                     PWM3PRH         equ	1154	;# 
  4781   000483                     PWM3CPRE        equ	1155	;# 
  4782   000484                     PWM3PIPOS       equ	1156	;# 
  4783   000485                     PWM3GIR         equ	1157	;# 
  4784   000486                     PWM3GIE         equ	1158	;# 
  4785   000487                     PWM3CON         equ	1159	;# 
  4786   000488                     PWM3S1CFG       equ	1160	;# 
  4787   000489                     PWM3S1P1        equ	1161	;# 
  4788   000489                     PWM3S1P1L       equ	1161	;# 
  4789   00048A                     PWM3S1P1H       equ	1162	;# 
  4790   00048B                     PWM3S1P2        equ	1163	;# 
  4791   00048B                     PWM3S1P2L       equ	1163	;# 
  4792   00048C                     PWM3S1P2H       equ	1164	;# 
  4793   000499                     PWMLOAD         equ	1177	;# 
  4794   00049A                     PWMEN           equ	1178	;# 
  4795   00049C                     IPR0            equ	1180	;# 
  4796   00049D                     IPR1            equ	1181	;# 
  4797   00049E                     IPR2            equ	1182	;# 
  4798   00049F                     IPR3            equ	1183	;# 
  4799   0004A0                     IPR4            equ	1184	;# 
  4800   0004A1                     IPR5            equ	1185	;# 
  4801   0004A2                     IPR6            equ	1186	;# 
  4802   0004A3                     IPR7            equ	1187	;# 
  4803   0004A4                     IPR8            equ	1188	;# 
  4804   0004A5                     IPR9            equ	1189	;# 
  4805   0004A6                     IPR10           equ	1190	;# 
  4806   0004A7                     PIE0            equ	1191	;# 
  4807   0004A8                     PIE1            equ	1192	;# 
  4808   0004A9                     PIE2            equ	1193	;# 
  4809   0004AA                     PIE3            equ	1194	;# 
  4810   0004AB                     PIE4            equ	1195	;# 
  4811   0004AC                     PIE5            equ	1196	;# 
  4812   0004AD                     PIE6            equ	1197	;# 
  4813   0004AE                     PIE7            equ	1198	;# 
  4814   0004AF                     PIE8            equ	1199	;# 
  4815   0004B0                     PIE9            equ	1200	;# 
  4816   0004B1                     PIE10           equ	1201	;# 
  4817   0004B2                     PIR0            equ	1202	;# 
  4818   0004B3                     PIR1            equ	1203	;# 
  4819   0004B4                     PIR2            equ	1204	;# 
  4820   0004B5                     PIR3            equ	1205	;# 
  4821   0004B6                     PIR4            equ	1206	;# 
  4822   0004B7                     PIR5            equ	1207	;# 
  4823   0004B8                     PIR6            equ	1208	;# 
  4824   0004B9                     PIR7            equ	1209	;# 
  4825   0004BA                     PIR8            equ	1210	;# 
  4826   0004BB                     PIR9            equ	1211	;# 
  4827   0004BC                     PIR10           equ	1212	;# 
  4828   0004D6                     INTCON0         equ	1238	;# 
  4829   0004D7                     INTCON1         equ	1239	;# 
  4830   0004D8                     STATUS          equ	1240	;# 
  4831   0004D9                     FSR2            equ	1241	;# 
  4832   0004D9                     FSR2L           equ	1241	;# 
  4833   0004DA                     FSR2H           equ	1242	;# 
  4834   0004DB                     PLUSW2          equ	1243	;# 
  4835   0004DC                     PREINC2         equ	1244	;# 
  4836   0004DD                     POSTDEC2        equ	1245	;# 
  4837   0004DE                     POSTINC2        equ	1246	;# 
  4838   0004DF                     INDF2           equ	1247	;# 
  4839   0004E0                     BSR             equ	1248	;# 
  4840   0004E1                     FSR1            equ	1249	;# 
  4841   0004E1                     FSR1L           equ	1249	;# 
  4842   0004E2                     FSR1H           equ	1250	;# 
  4843   0004E3                     PLUSW1          equ	1251	;# 
  4844   0004E4                     PREINC1         equ	1252	;# 
  4845   0004E5                     POSTDEC1        equ	1253	;# 
  4846   0004E6                     POSTINC1        equ	1254	;# 
  4847   0004E7                     INDF1           equ	1255	;# 
  4848   0004E8                     WREG            equ	1256	;# 
  4849   0004E9                     FSR0            equ	1257	;# 
  4850   0004E9                     FSR0L           equ	1257	;# 
  4851   0004EA                     FSR0H           equ	1258	;# 
  4852   0004EB                     PLUSW0          equ	1259	;# 
  4853   0004EC                     PREINC0         equ	1260	;# 
  4854   0004ED                     POSTDEC0        equ	1261	;# 
  4855   0004EE                     POSTINC0        equ	1262	;# 
  4856   0004EF                     INDF0           equ	1263	;# 
  4857   0004F0                     PCON0           equ	1264	;# 
  4858   0004F1                     PCON1           equ	1265	;# 
  4859   0004F2                     CPUDOZE         equ	1266	;# 
  4860   0004F3                     PROD            equ	1267	;# 
  4861   0004F3                     PRODL           equ	1267	;# 
  4862   0004F4                     PRODH           equ	1268	;# 
  4863   0004F5                     TABLAT          equ	1269	;# 
  4864   0004F6                     TBLPTR          equ	1270	;# 
  4865   0004F6                     TBLPTRL         equ	1270	;# 
  4866   0004F7                     TBLPTRH         equ	1271	;# 
  4867   0004F8                     TBLPTRU         equ	1272	;# 
  4868   0004F9                     PCLAT           equ	1273	;# 
  4869   0004F9                     PCL             equ	1273	;# 
  4870   0004FA                     PCLATH          equ	1274	;# 
  4871   0004FB                     PCLATU          equ	1275	;# 
  4872   0004FC                     STKPTR          equ	1276	;# 
  4873   0004FD                     TOS             equ	1277	;# 
  4874   0004FD                     TOSL            equ	1277	;# 
  4875   0004FE                     TOSH            equ	1278	;# 
  4876   0004FF                     TOSU            equ	1279	;# 
  4877   000039                     CLKRCON         equ	57	;# 
  4878   00003A                     CLKRCLK         equ	58	;# 
  4879   000040                     NVMCON0         equ	64	;# 
  4880   000041                     NVMCON1         equ	65	;# 
  4881   000042                     NVMLOCK         equ	66	;# 
  4882   000043                     NVMADR          equ	67	;# 
  4883   000043                     NVMADRL         equ	67	;# 
  4884   000044                     NVMADRH         equ	68	;# 
  4885   000045                     NVMADRU         equ	69	;# 
  4886   000046                     NVMDAT          equ	70	;# 
  4887   000046                     NVMDATL         equ	70	;# 
  4888   000047                     NVMDATH         equ	71	;# 
  4889   000048                     VREGCON         equ	72	;# 
  4890   000049                     BORCON          equ	73	;# 
  4891   00004A                     HLVDCON0        equ	74	;# 
  4892   00004B                     HLVDCON1        equ	75	;# 
  4893   00004C                     ZCDCON          equ	76	;# 
  4894   000062                     PMD0            equ	98	;# 
  4895   000063                     PMD1            equ	99	;# 
  4896   000064                     PMD2            equ	100	;# 
  4897   000065                     PMD3            equ	101	;# 
  4898   000066                     PMD4            equ	102	;# 
  4899   000067                     PMD5            equ	103	;# 
  4900   000068                     PMD6            equ	104	;# 
  4901   00006F                     CMOUT           equ	111	;# 
  4902   000070                     CM1CON0         equ	112	;# 
  4903   000071                     CM1CON1         equ	113	;# 
  4904   000072                     CM1NCH          equ	114	;# 
  4905   000073                     CM1PCH          equ	115	;# 
  4906   000074                     CM2CON0         equ	116	;# 
  4907   000075                     CM2CON1         equ	117	;# 
  4908   000076                     CM2NCH          equ	118	;# 
  4909   000077                     CM2PCH          equ	119	;# 
  4910   000078                     WDTCON0         equ	120	;# 
  4911   000079                     WDTCON1         equ	121	;# 
  4912   00007A                     WDTPS           equ	122	;# 
  4913   00007A                     WDTPSL          equ	122	;# 
  4914   00007B                     WDTPSH          equ	123	;# 
  4915   00007C                     WDTTMR          equ	124	;# 
  4916   00007D                     DAC1DAT         equ	125	;# 
  4917   00007D                     DAC1DATL        equ	125	;# 
  4918   00007E                     DAC1DATH        equ	126	;# 
  4919   00007F                     DAC1CON         equ	127	;# 
  4920   000080                     SPI1RXB         equ	128	;# 
  4921   000081                     SPI1TXB         equ	129	;# 
  4922   000082                     SPI1TCNT        equ	130	;# 
  4923   000082                     SPI1TCNTL       equ	130	;# 
  4924   000083                     SPI1TCNTH       equ	131	;# 
  4925   000084                     SPI1CON0        equ	132	;# 
  4926   000085                     SPI1CON1        equ	133	;# 
  4927   000086                     SPI1CON2        equ	134	;# 
  4928   000087                     SPI1STATUS      equ	135	;# 
  4929   000088                     SPI1TWIDTH      equ	136	;# 
  4930   000089                     SPI1BAUD        equ	137	;# 
  4931   00008A                     SPI1INTF        equ	138	;# 
  4932   00008B                     SPI1INTE        equ	139	;# 
  4933   00008C                     SPI1CLK         equ	140	;# 
  4934   0000AC                     ACTCON          equ	172	;# 
  4935   0000AD                     OSCCON1         equ	173	;# 
  4936   0000AE                     OSCCON2         equ	174	;# 
  4937   0000AF                     OSCCON3         equ	175	;# 
  4938   0000B0                     OSCTUNE         equ	176	;# 
  4939   0000B1                     OSCFRQ          equ	177	;# 
  4940   0000B1                     OSCFREQ         equ	177	;# 
  4941   0000B2                     OSCSTAT         equ	178	;# 
  4942   0000B2                     OSCSTAT1        equ	178	;# 
  4943   0000B3                     OSCEN           equ	179	;# 
  4944   0000B4                     PRLOCK          equ	180	;# 
  4945   0000B5                     SCANPR          equ	181	;# 
  4946   0000B6                     DMA1PR          equ	182	;# 
  4947   0000B7                     DMA2PR          equ	183	;# 
  4948   0000B8                     DMA3PR          equ	184	;# 
  4949   0000B9                     DMA4PR          equ	185	;# 
  4950   0000BE                     MAINPR          equ	190	;# 
  4951   0000BF                     ISRPR           equ	191	;# 
  4952   0000C0                     DAC2DAT         equ	192	;# 
  4953   0000C0                     DAC2DATL        equ	192	;# 
  4954   0000C2                     DAC2CON         equ	194	;# 
  4955   0000C3                     DAC3DAT         equ	195	;# 
  4956   0000C3                     DAC3DATL        equ	195	;# 
  4957   0000C5                     DAC3CON         equ	197	;# 
  4958   0000D4                     CLCDATA         equ	212	;# 
  4959   0000D5                     CLCSELECT       equ	213	;# 
  4960   0000D6                     CLCnCON         equ	214	;# 
  4961   0000D7                     CLCnPOL         equ	215	;# 
  4962   0000D8                     CLCnSEL0        equ	216	;# 
  4963   0000D9                     CLCnSEL1        equ	217	;# 
  4964   0000DA                     CLCnSEL2        equ	218	;# 
  4965   0000DB                     CLCnSEL3        equ	219	;# 
  4966   0000DC                     CLCnGLS0        equ	220	;# 
  4967   0000DD                     CLCnGLS1        equ	221	;# 
  4968   0000DE                     CLCnGLS2        equ	222	;# 
  4969   0000DF                     CLCnGLS3        equ	223	;# 
  4970   0000E8                     DMASELECT       equ	232	;# 
  4971   0000E9                     DMAnBUF         equ	233	;# 
  4972   0000EA                     DMAnDCNT        equ	234	;# 
  4973   0000EA                     DMAnDCNTL       equ	234	;# 
  4974   0000EB                     DMAnDCNTH       equ	235	;# 
  4975   0000EC                     DMAnDPTR        equ	236	;# 
  4976   0000EC                     DMAnDPTRL       equ	236	;# 
  4977   0000ED                     DMAnDPTRH       equ	237	;# 
  4978   0000EE                     DMAnDSZ         equ	238	;# 
  4979   0000EE                     DMAnDSZL        equ	238	;# 
  4980   0000EF                     DMAnDSZH        equ	239	;# 
  4981   0000F0                     DMAnDSA         equ	240	;# 
  4982   0000F0                     DMAnDSAL        equ	240	;# 
  4983   0000F1                     DMAnDSAH        equ	241	;# 
  4984   0000F2                     DMAnSCNT        equ	242	;# 
  4985   0000F2                     DMAnSCNTL       equ	242	;# 
  4986   0000F3                     DMAnSCNTH       equ	243	;# 
  4987   0000F4                     DMAnSPTR        equ	244	;# 
  4988   0000F4                     DMAnSPTRL       equ	244	;# 
  4989   0000F5                     DMAnSPTRH       equ	245	;# 
  4990   0000F6                     DMAnSPTRU       equ	246	;# 
  4991   0000F7                     DMAnSSZ         equ	247	;# 
  4992   0000F7                     DMAnSSZL        equ	247	;# 
  4993   0000F8                     DMAnSSZH        equ	248	;# 
  4994   0000F9                     DMAnSSA         equ	249	;# 
  4995   0000F9                     DMAnSSAL        equ	249	;# 
  4996   0000FA                     DMAnSSAH        equ	250	;# 
  4997   0000FB                     DMAnSSAU        equ	251	;# 
  4998   0000FC                     DMAnCON0        equ	252	;# 
  4999   0000FD                     DMAnCON1        equ	253	;# 
  5000   0000FE                     DMAnAIRQ        equ	254	;# 
  5001   0000FF                     DMAnSIRQ        equ	255	;# 
  5002   000100                     PORTW           equ	256	;# 
  5003   000101                     LATW            equ	257	;# 
  5004   000102                     PORTWIN0        equ	258	;# 
  5005   000103                     PORTWIN1        equ	259	;# 
  5006   000104                     PORTWIN2        equ	260	;# 
  5007   000105                     PORTWIN3        equ	261	;# 
  5008   000106                     PORTWIN4        equ	262	;# 
  5009   000107                     PORTWIN5        equ	263	;# 
  5010   000108                     PORTWIN6        equ	264	;# 
  5011   000109                     PORTWIN7        equ	265	;# 
  5012   00010A                     PORTWCLK        equ	266	;# 
  5013   00010B                     PORTWDF         equ	267	;# 
  5014   00010C                     PORTWCON        equ	268	;# 
  5015   000110                     ADCGA           equ	272	;# 
  5016   000111                     ADCGB           equ	273	;# 
  5017   000112                     ADCGC           equ	274	;# 
  5018   000113                     ADCGD           equ	275	;# 
  5019   000114                     ADCGE           equ	276	;# 
  5020   000115                     ADCGF           equ	277	;# 
  5021   00011F                     OPA1CON0        equ	287	;# 
  5022   000120                     OPA1CON1        equ	288	;# 
  5023   000121                     OPA1CON2        equ	289	;# 
  5024   000122                     OPA1CON3        equ	290	;# 
  5025   000123                     OPA1CON4        equ	291	;# 
  5026   000124                     OPA1HWC         equ	292	;# 
  5027   000125                     OPA1OFFSET      equ	293	;# 
  5028   000126                     OPA1ORS         equ	294	;# 
  5029   000127                     OPA2CON0        equ	295	;# 
  5030   000128                     OPA2CON1        equ	296	;# 
  5031   000129                     OPA2CON2        equ	297	;# 
  5032   00012A                     OPA2CON3        equ	298	;# 
  5033   00012B                     OPA2CON4        equ	299	;# 
  5034   00012C                     OPA2HWC         equ	300	;# 
  5035   00012D                     OPA2OFFSET      equ	301	;# 
  5036   00012E                     OPA2ORS         equ	302	;# 
  5037   000140                     LATA            equ	320	;# 
  5038   000141                     LATB            equ	321	;# 
  5039   000142                     LATC            equ	322	;# 
  5040   000143                     LATD            equ	323	;# 
  5041   000144                     LATE            equ	324	;# 
  5042   000145                     LATF            equ	325	;# 
  5043   000148                     TRISA           equ	328	;# 
  5044   000149                     TRISB           equ	329	;# 
  5045   00014A                     TRISC           equ	330	;# 
  5046   00014B                     TRISD           equ	331	;# 
  5047   00014C                     TRISE           equ	332	;# 
  5048   00014D                     TRISF           equ	333	;# 
  5049   000150                     PORTA           equ	336	;# 
  5050   000151                     PORTB           equ	337	;# 
  5051   000152                     PORTC           equ	338	;# 
  5052   000153                     PORTD           equ	339	;# 
  5053   000154                     PORTE           equ	340	;# 
  5054   000155                     PORTF           equ	341	;# 
  5055   0001C0                     APMCON          equ	448	;# 
  5056   0001C1                     APMPRE          equ	449	;# 
  5057   0001C1                     APMPREL         equ	449	;# 
  5058   0001C2                     APMPREH         equ	450	;# 
  5059   0001C3                     APMPER          equ	451	;# 
  5060   0001C3                     APMPERL         equ	451	;# 
  5061   0001C4                     APMPERH         equ	452	;# 
  5062   0001C5                     APMSTART1       equ	453	;# 
  5063   0001C5                     APMSTART1L      equ	453	;# 
  5064   0001C6                     APMSTART1H      equ	454	;# 
  5065   0001C7                     APMPERS1        equ	455	;# 
  5066   0001C7                     APMPERS1L       equ	455	;# 
  5067   0001C8                     APMPERS1H       equ	456	;# 
  5068   0001C9                     APMSTART2       equ	457	;# 
  5069   0001C9                     APMSTART2L      equ	457	;# 
  5070   0001CA                     APMSTART2H      equ	458	;# 
  5071   0001CB                     APMSTART2U      equ	459	;# 
  5072   0001CC                     APMPERS2        equ	460	;# 
  5073   0001CC                     APMPERS2L       equ	460	;# 
  5074   0001CD                     APMPERS2H       equ	461	;# 
  5075   0001CE                     APMEND1         equ	462	;# 
  5076   0001CE                     APMEND1L        equ	462	;# 
  5077   0001CF                     APMEND1H        equ	463	;# 
  5078   0001D0                     APMEND1U        equ	464	;# 
  5079   0001D1                     APMPERE1        equ	465	;# 
  5080   0001D1                     APMPERE1L       equ	465	;# 
  5081   0001D2                     APMPERE1H       equ	466	;# 
  5082   0001D3                     APMEND2         equ	467	;# 
  5083   0001D3                     APMEND2L        equ	467	;# 
  5084   0001D4                     APMEND2H        equ	468	;# 
  5085   0001D5                     APMEND2U        equ	469	;# 
  5086   0001D6                     APMPERE2        equ	470	;# 
  5087   0001D6                     APMPERE2L       equ	470	;# 
  5088   0001D7                     APMPERE2H       equ	471	;# 
  5089   0001D8                     APMCLK          equ	472	;# 
  5090   0001D9                     APMSTATUS       equ	473	;# 
  5091   0001D9                     APMSTATUSL      equ	473	;# 
  5092   0001DA                     APMSTATUSH      equ	474	;# 
  5093   000200                     PPSLOCK         equ	512	;# 
  5094   000201                     RA0PPS          equ	513	;# 
  5095   000202                     RA1PPS          equ	514	;# 
  5096   000203                     RA2PPS          equ	515	;# 
  5097   000204                     RA3PPS          equ	516	;# 
  5098   000205                     RA4PPS          equ	517	;# 
  5099   000206                     RA5PPS          equ	518	;# 
  5100   000207                     RA6PPS          equ	519	;# 
  5101   000208                     RA7PPS          equ	520	;# 
  5102   000209                     RB0PPS          equ	521	;# 
  5103   00020A                     RB1PPS          equ	522	;# 
  5104   00020B                     RB2PPS          equ	523	;# 
  5105   00020C                     RB3PPS          equ	524	;# 
  5106   00020D                     RB4PPS          equ	525	;# 
  5107   00020E                     RB5PPS          equ	526	;# 
  5108   00020F                     RB6PPS          equ	527	;# 
  5109   000210                     RB7PPS          equ	528	;# 
  5110   000211                     RC0PPS          equ	529	;# 
  5111   000212                     RC1PPS          equ	530	;# 
  5112   000213                     RC2PPS          equ	531	;# 
  5113   000214                     RC3PPS          equ	532	;# 
  5114   000215                     RC4PPS          equ	533	;# 
  5115   000216                     RC5PPS          equ	534	;# 
  5116   000217                     RC6PPS          equ	535	;# 
  5117   000218                     RC7PPS          equ	536	;# 
  5118   000219                     RD0PPS          equ	537	;# 
  5119   00021A                     RD1PPS          equ	538	;# 
  5120   00021B                     RD2PPS          equ	539	;# 
  5121   00021C                     RD3PPS          equ	540	;# 
  5122   00021D                     RD4PPS          equ	541	;# 
  5123   00021E                     RD5PPS          equ	542	;# 
  5124   00021F                     RD6PPS          equ	543	;# 
  5125   000220                     RD7PPS          equ	544	;# 
  5126   000221                     RE0PPS          equ	545	;# 
  5127   000222                     RE1PPS          equ	546	;# 
  5128   000223                     RE2PPS          equ	547	;# 
  5129   000225                     RF0PPS          equ	549	;# 
  5130   000226                     RF1PPS          equ	550	;# 
  5131   000227                     RF2PPS          equ	551	;# 
  5132   000228                     RF3PPS          equ	552	;# 
  5133   000229                     RF4PPS          equ	553	;# 
  5134   00022A                     RF5PPS          equ	554	;# 
  5135   00022B                     RF6PPS          equ	555	;# 
  5136   00022C                     RF7PPS          equ	556	;# 
  5137   00023E                     INT0PPS         equ	574	;# 
  5138   00023F                     INT1PPS         equ	575	;# 
  5139   000240                     INT2PPS         equ	576	;# 
  5140   000241                     T0CKIPPS        equ	577	;# 
  5141   000242                     T1CKIPPS        equ	578	;# 
  5142   000243                     T1GPPS          equ	579	;# 
  5143   000244                     T3CKIPPS        equ	580	;# 
  5144   000245                     T3GPPS          equ	581	;# 
  5145   000248                     T2INPPS         equ	584	;# 
  5146   000249                     T4INPPS         equ	585	;# 
  5147   00024F                     CCP1PPS         equ	591	;# 
  5148   000250                     CCP2PPS         equ	592	;# 
  5149   000251                     PWM1ERSPPS      equ	593	;# 
  5150   000252                     PWM2ERSPPS      equ	594	;# 
  5151   000253                     PWM3ERSPPS      equ	595	;# 
  5152   000257                     PWMIN0PPS       equ	599	;# 
  5153   000258                     PWMIN1PPS       equ	600	;# 
  5154   00025B                     CWG1PPS         equ	603	;# 
  5155   00025B                     CWG1INPPS       equ	603	;# 
  5156   000261                     CLCIN0PPS       equ	609	;# 
  5157   000262                     CLCIN1PPS       equ	610	;# 
  5158   000263                     CLCIN2PPS       equ	611	;# 
  5159   000264                     CLCIN3PPS       equ	612	;# 
  5160   000265                     CLCIN4PPS       equ	613	;# 
  5161   000266                     CLCIN5PPS       equ	614	;# 
  5162   000267                     CLCIN6PPS       equ	615	;# 
  5163   000268                     CLCIN7PPS       equ	616	;# 
  5164   000269                     ADACTPPS        equ	617	;# 
  5165   00026A                     SPI1SCKPPS      equ	618	;# 
  5166   00026B                     SPI1SDIPPS      equ	619	;# 
  5167   00026C                     SPI1SSPPS       equ	620	;# 
  5168   000270                     I2C1SDAPPS      equ	624	;# 
  5169   000271                     I2C1SCLPPS      equ	625	;# 
  5170   000272                     U1RXPPS         equ	626	;# 
  5171   000273                     U1CTSPPS        equ	627	;# 
  5172   000274                     U2RXPPS         equ	628	;# 
  5173   000275                     U2CTSPPS        equ	629	;# 
  5174   000276                     OPA1ORPPS       equ	630	;# 
  5175   000277                     OPA2ORPPS       equ	631	;# 
  5176   000278                     TUIN0PPS        equ	632	;# 
  5177   000279                     TUIN1PPS        equ	633	;# 
  5178   00027A                     APMCLKPPS       equ	634	;# 
  5179   000285                     RB2I2C          equ	645	;# 
  5180   000286                     RB1I2C          equ	646	;# 
  5181   000287                     RC4I2C          equ	647	;# 
  5182   000288                     RC3I2C          equ	648	;# 
  5183   000289                     I2C1RXB         equ	649	;# 
  5184   00028A                     I2C1TXB         equ	650	;# 
  5185   00028B                     I2C1CNT         equ	651	;# 
  5186   00028B                     I2C1CNTL        equ	651	;# 
  5187   00028C                     I2C1CNTH        equ	652	;# 
  5188   00028D                     I2C1ADB0        equ	653	;# 
  5189   00028E                     I2C1ADB1        equ	654	;# 
  5190   00028F                     I2C1ADR0        equ	655	;# 
  5191   000290                     I2C1ADR1        equ	656	;# 
  5192   000291                     I2C1ADR2        equ	657	;# 
  5193   000292                     I2C1ADR3        equ	658	;# 
  5194   000293                     I2C1CON0        equ	659	;# 
  5195   000294                     I2C1CON1        equ	660	;# 
  5196   000295                     I2C1CON2        equ	661	;# 
  5197   000296                     I2C1CON3        equ	662	;# 
  5198   000297                     I2C1ERR         equ	663	;# 
  5199   000298                     I2C1STAT0       equ	664	;# 
  5200   000299                     I2C1STAT1       equ	665	;# 
  5201   00029A                     I2C1PIR         equ	666	;# 
  5202   00029B                     I2C1PIE         equ	667	;# 
  5203   00029C                     I2C1BTO         equ	668	;# 
  5204   00029D                     I2C1BAUD        equ	669	;# 
  5205   00029E                     I2C1CLK         equ	670	;# 
  5206   00029F                     I2C1BTOC        equ	671	;# 
  5207   0002A0                     U1RXB           equ	672	;# 
  5208   0002A0                     U1RXBL          equ	672	;# 
  5209   0002A1                     U1RXCHK         equ	673	;# 
  5210   0002A2                     U1TXB           equ	674	;# 
  5211   0002A2                     U1TXBL          equ	674	;# 
  5212   0002A3                     U1TXCHK         equ	675	;# 
  5213   0002A4                     U1P1            equ	676	;# 
  5214   0002A4                     U1P1L           equ	676	;# 
  5215   0002A5                     U1P1H           equ	677	;# 
  5216   0002A6                     U1P2            equ	678	;# 
  5217   0002A6                     U1P2L           equ	678	;# 
  5218   0002A7                     U1P2H           equ	679	;# 
  5219   0002A8                     U1P3            equ	680	;# 
  5220   0002A8                     U1P3L           equ	680	;# 
  5221   0002A9                     U1P3H           equ	681	;# 
  5222   0002AA                     U1CON0          equ	682	;# 
  5223   0002AB                     U1CON1          equ	683	;# 
  5224   0002AC                     U1CON2          equ	684	;# 
  5225   0002AD                     U1BRG           equ	685	;# 
  5226   0002AD                     U1BRGL          equ	685	;# 
  5227   0002AE                     U1BRGH          equ	686	;# 
  5228   0002AF                     U1FIFO          equ	687	;# 
  5229   0002B0                     U1UIR           equ	688	;# 
  5230   0002B1                     U1ERRIR         equ	689	;# 
  5231   0002B2                     U1ERRIE         equ	690	;# 
  5232   0002B4                     U2RXB           equ	692	;# 
  5233   0002B4                     U2RXBL          equ	692	;# 
  5234   0002B6                     U2TXB           equ	694	;# 
  5235   0002B6                     U2TXBL          equ	694	;# 
  5236   0002B8                     U2P1            equ	696	;# 
  5237   0002B8                     U2P1L           equ	696	;# 
  5238   0002BA                     U2P2            equ	698	;# 
  5239   0002BA                     U2P2L           equ	698	;# 
  5240   0002BC                     U2P3            equ	700	;# 
  5241   0002BC                     U2P3L           equ	700	;# 
  5242   0002BE                     U2CON0          equ	702	;# 
  5243   0002BF                     U2CON1          equ	703	;# 
  5244   0002C0                     U2CON2          equ	704	;# 
  5245   0002C1                     U2BRG           equ	705	;# 
  5246   0002C1                     U2BRGL          equ	705	;# 
  5247   0002C2                     U2BRGH          equ	706	;# 
  5248   0002C3                     U2FIFO          equ	707	;# 
  5249   0002C4                     U2UIR           equ	708	;# 
  5250   0002C5                     U2ERRIR         equ	709	;# 
  5251   0002C6                     U2ERRIE         equ	710	;# 
  5252   000312                     TMR1            equ	786	;# 
  5253   000312                     TMR1L           equ	786	;# 
  5254   000313                     TMR1H           equ	787	;# 
  5255   000314                     T1CON           equ	788	;# 
  5256   000314                     TMR1CON         equ	788	;# 
  5257   000315                     T1GCON          equ	789	;# 
  5258   000315                     TMR1GCON        equ	789	;# 
  5259   000316                     T1GATE          equ	790	;# 
  5260   000316                     TMR1GATE        equ	790	;# 
  5261   000317                     T1CLK           equ	791	;# 
  5262   000317                     TMR1CLK         equ	791	;# 
  5263   000317                     PR1             equ	791	;# 
  5264   000318                     TMR0L           equ	792	;# 
  5265   000318                     TMR0            equ	792	;# 
  5266   000319                     TMR0H           equ	793	;# 
  5267   000319                     PR0             equ	793	;# 
  5268   00031A                     T0CON0          equ	794	;# 
  5269   00031B                     T0CON1          equ	795	;# 
  5270   00031D                     T2TMR           equ	797	;# 
  5271   00031D                     TMR2            equ	797	;# 
  5272   00031E                     T2PR            equ	798	;# 
  5273   00031E                     PR2             equ	798	;# 
  5274   00031F                     T2CON           equ	799	;# 
  5275   000320                     T2HLT           equ	800	;# 
  5276   000321                     T2CLKCON        equ	801	;# 
  5277   000321                     T2CLK           equ	801	;# 
  5278   000322                     T2RST           equ	802	;# 
  5279   000323                     TMR3            equ	803	;# 
  5280   000323                     TMR3L           equ	803	;# 
  5281   000324                     TMR3H           equ	804	;# 
  5282   000325                     T3CON           equ	805	;# 
  5283   000325                     TMR3CON         equ	805	;# 
  5284   000326                     T3GCON          equ	806	;# 
  5285   000326                     TMR3GCON        equ	806	;# 
  5286   000327                     T3GATE          equ	807	;# 
  5287   000327                     TMR3GATE        equ	807	;# 
  5288   000328                     T3CLK           equ	808	;# 
  5289   000328                     TMR3CLK         equ	808	;# 
  5290   000328                     PR3             equ	808	;# 
  5291   00032A                     T4TMR           equ	810	;# 
  5292   00032A                     TMR4            equ	810	;# 
  5293   00032B                     T4PR            equ	811	;# 
  5294   00032B                     PR4             equ	811	;# 
  5295   00032C                     T4CON           equ	812	;# 
  5296   00032D                     T4HLT           equ	813	;# 
  5297   00032E                     T4CLKCON        equ	814	;# 
  5298   00032E                     T4CLK           equ	814	;# 
  5299   00032F                     T4RST           equ	815	;# 
  5300   000340                     CCPR1           equ	832	;# 
  5301   000340                     CCPR1L          equ	832	;# 
  5302   000341                     CCPR1H          equ	833	;# 
  5303   000342                     CCP1CON         equ	834	;# 
  5304   000343                     CCP1CAP         equ	835	;# 
  5305   000344                     CCPR2           equ	836	;# 
  5306   000344                     CCPR2L          equ	836	;# 
  5307   000345                     CCPR2H          equ	837	;# 
  5308   000346                     CCP2CON         equ	838	;# 
  5309   000347                     CCP2CAP         equ	839	;# 
  5310   00034C                     CCPTMRS0        equ	844	;# 
  5311   00034E                     CRCDATA         equ	846	;# 
  5312   00034E                     CRCDATAL        equ	846	;# 
  5313   00034F                     CRCDATAH        equ	847	;# 
  5314   000350                     CRCDATAU        equ	848	;# 
  5315   000351                     CRCDATAT        equ	849	;# 
  5316   000352                     CRCOUT          equ	850	;# 
  5317   000352                     CRCSHFT         equ	850	;# 
  5318   000352                     CRCXOR          equ	850	;# 
  5319   000352                     CRCOUTL         equ	850	;# 
  5320   000352                     CRCSHFTL        equ	850	;# 
  5321   000352                     CRCSHIFTL       equ	850	;# 
  5322   000352                     CRCXORL         equ	850	;# 
  5323   000353                     CRCOUTH         equ	851	;# 
  5324   000353                     CRCSHFTH        equ	851	;# 
  5325   000353                     CRCSHIFTH       equ	851	;# 
  5326   000353                     CRCXORH         equ	851	;# 
  5327   000354                     CRCOUTU         equ	852	;# 
  5328   000354                     CRCSHFTU        equ	852	;# 
  5329   000354                     CRCSHIFTU       equ	852	;# 
  5330   000354                     CRCXORU         equ	852	;# 
  5331   000355                     CRCOUTT         equ	853	;# 
  5332   000355                     CRCSHFTT        equ	853	;# 
  5333   000355                     CRCSHIFTT       equ	853	;# 
  5334   000355                     CRCXORT         equ	853	;# 
  5335   000356                     CRCCON0         equ	854	;# 
  5336   000357                     CRCCON1         equ	855	;# 
  5337   000358                     CRCCON2         equ	856	;# 
  5338   00035A                     SCANLADR        equ	858	;# 
  5339   00035A                     SCANLADRL       equ	858	;# 
  5340   00035B                     SCANLADRH       equ	859	;# 
  5341   00035C                     SCANLADRU       equ	860	;# 
  5342   00035D                     SCANHADR        equ	861	;# 
  5343   00035D                     SCANHADRL       equ	861	;# 
  5344   00035E                     SCANHADRH       equ	862	;# 
  5345   00035F                     SCANHADRU       equ	863	;# 
  5346   000360                     SCANCON0        equ	864	;# 
  5347   000361                     SCANTRIG        equ	865	;# 
  5348   000373                     STATUS_CSHAD    equ	883	;# 
  5349   000374                     WREG_CSHAD      equ	884	;# 
  5350   000375                     BSR_CSHAD       equ	885	;# 
  5351   000376                     SHADCON         equ	886	;# 
  5352   000377                     STATUS_SHAD     equ	887	;# 
  5353   000378                     WREG_SHAD       equ	888	;# 
  5354   000379                     BSR_SHAD        equ	889	;# 
  5355   00037A                     PCLATH_SHAD     equ	890	;# 
  5356   00037B                     PCLATU_SHAD     equ	891	;# 
  5357   00037C                     FSR0SH          equ	892	;# 
  5358   00037C                     FSR0L_SHAD      equ	892	;# 
  5359   00037D                     FSR0H_SHAD      equ	893	;# 
  5360   00037E                     FSR1SH          equ	894	;# 
  5361   00037E                     FSR1L_SHAD      equ	894	;# 
  5362   00037F                     FSR1H_SHAD      equ	895	;# 
  5363   000380                     FSR2SH          equ	896	;# 
  5364   000380                     FSR2L_SHAD      equ	896	;# 
  5365   000381                     FSR2H_SHAD      equ	897	;# 
  5366   000382                     PRODSH          equ	898	;# 
  5367   000382                     PRODL_SHAD      equ	898	;# 
  5368   000383                     PRODH_SHAD      equ	899	;# 
  5369   0003A0                     TU16ACON0       equ	928	;# 
  5370   0003A1                     TU16ACON1       equ	929	;# 
  5371   0003A2                     TU16AHLT        equ	930	;# 
  5372   0003A3                     TU16APS         equ	931	;# 
  5373   0003A4                     TU16ATMR        equ	932	;# 
  5374   0003A4                     TU16ACR         equ	932	;# 
  5375   0003A4                     TU16ATMRL       equ	932	;# 
  5376   0003A4                     TU16ACRL        equ	932	;# 
  5377   0003A5                     TU16ATMRH       equ	933	;# 
  5378   0003A5                     TU16ACRH        equ	933	;# 
  5379   0003A6                     TU16APR         equ	934	;# 
  5380   0003A6                     TU16APRL        equ	934	;# 
  5381   0003A7                     TU16APRH        equ	935	;# 
  5382   0003A8                     TU16ACLK        equ	936	;# 
  5383   0003A9                     TU16AERS        equ	937	;# 
  5384   0003AA                     TU16BCON0       equ	938	;# 
  5385   0003AB                     TU16BCON1       equ	939	;# 
  5386   0003AC                     TU16BHLT        equ	940	;# 
  5387   0003AD                     TU16BPS         equ	941	;# 
  5388   0003AE                     TU16BTMR        equ	942	;# 
  5389   0003AE                     TU16BCR         equ	942	;# 
  5390   0003AE                     TU16BTMRL       equ	942	;# 
  5391   0003AE                     TU16BCRL        equ	942	;# 
  5392   0003AF                     TU16BTMRH       equ	943	;# 
  5393   0003AF                     TU16BCRH        equ	943	;# 
  5394   0003B0                     TU16BPR         equ	944	;# 
  5395   0003B0                     TU16BPRL        equ	944	;# 
  5396   0003B1                     TU16BPRH        equ	945	;# 
  5397   0003B2                     TU16BCLK        equ	946	;# 
  5398   0003B3                     TU16BERS        equ	947	;# 
  5399   0003B4                     TUCHAIN         equ	948	;# 
  5400   0003BC                     CWG1CLK         equ	956	;# 
  5401   0003BC                     CWG1CLKCON      equ	956	;# 
  5402   0003BD                     CWG1ISM         equ	957	;# 
  5403   0003BD                     CWG1DAT         equ	957	;# 
  5404   0003BE                     CWG1DBR         equ	958	;# 
  5405   0003BF                     CWG1DBF         equ	959	;# 
  5406   0003C0                     CWG1CON0        equ	960	;# 
  5407   0003C1                     CWG1CON1        equ	961	;# 
  5408   0003C2                     CWG1AS0         equ	962	;# 
  5409   0003C3                     CWG1AS1         equ	963	;# 
  5410   0003C4                     CWG1STR         equ	964	;# 
  5411   0003D7                     FVRCON          equ	983	;# 
  5412   0003D8                     ADCPCON         equ	984	;# 
  5413   0003D8                     ADCP            equ	984	;# 
  5414   0003D9                     ADLTH           equ	985	;# 
  5415   0003D9                     ADLTHL          equ	985	;# 
  5416   0003DA                     ADLTHH          equ	986	;# 
  5417   0003DB                     ADUTH           equ	987	;# 
  5418   0003DB                     ADUTHL          equ	987	;# 
  5419   0003DC                     ADUTHH          equ	988	;# 
  5420   0003DD                     ADERR           equ	989	;# 
  5421   0003DD                     ADERRL          equ	989	;# 
  5422   0003DE                     ADERRH          equ	990	;# 
  5423   0003DF                     ADSTPT          equ	991	;# 
  5424   0003DF                     ADSTPTL         equ	991	;# 
  5425   0003E0                     ADSTPTH         equ	992	;# 
  5426   0003E1                     ADFLTR          equ	993	;# 
  5427   0003E1                     ADFLTRL         equ	993	;# 
  5428   0003E2                     ADFLTRH         equ	994	;# 
  5429   0003E3                     ADACC           equ	995	;# 
  5430   0003E3                     ADACCL          equ	995	;# 
  5431   0003E4                     ADACCH          equ	996	;# 
  5432   0003E5                     ADACCU          equ	997	;# 
  5433   0003E6                     ADCNT           equ	998	;# 
  5434   0003E7                     ADRPT           equ	999	;# 
  5435   0003E8                     ADPREV          equ	1000	;# 
  5436   0003E8                     ADPREVL         equ	1000	;# 
  5437   0003E9                     ADPREVH         equ	1001	;# 
  5438   0003EA                     ADRES           equ	1002	;# 
  5439   0003EA                     ADRESL          equ	1002	;# 
  5440   0003EB                     ADRESH          equ	1003	;# 
  5441   0003EC                     ADPCH           equ	1004	;# 
  5442   0003ED                     ADNCH           equ	1005	;# 
  5443   0003EE                     ADACQ           equ	1006	;# 
  5444   0003EE                     ADACQL          equ	1006	;# 
  5445   0003EF                     ADACQH          equ	1007	;# 
  5446   0003F0                     ADCAP           equ	1008	;# 
  5447   0003F1                     ADPRE           equ	1009	;# 
  5448   0003F1                     ADPREL          equ	1009	;# 
  5449   0003F2                     ADPREH          equ	1010	;# 
  5450   0003F3                     ADCON0          equ	1011	;# 
  5451   0003F4                     ADCON1          equ	1012	;# 
  5452   0003F5                     ADCON2          equ	1013	;# 
  5453   0003F6                     ADCON3          equ	1014	;# 
  5454   0003F7                     ADSTAT          equ	1015	;# 
  5455   0003F8                     ADREF           equ	1016	;# 
  5456   0003F9                     ADACT           equ	1017	;# 
  5457   0003FA                     ADCLK           equ	1018	;# 
  5458   0003FB                     ADCTX           equ	1019	;# 
  5459   0003FC                     ADCSEL1         equ	1020	;# 
  5460   0003FD                     ADCSEL2         equ	1021	;# 
  5461   0003FE                     ADCSEL3         equ	1022	;# 
  5462   0003FF                     ADCSEL4         equ	1023	;# 
  5463   000400                     ANSELA          equ	1024	;# 
  5464   000401                     WPUA            equ	1025	;# 
  5465   000402                     ODCONA          equ	1026	;# 
  5466   000403                     SLRCONA         equ	1027	;# 
  5467   000404                     INLVLA          equ	1028	;# 
  5468   000405                     IOCAP           equ	1029	;# 
  5469   000406                     IOCAN           equ	1030	;# 
  5470   000407                     IOCAF           equ	1031	;# 
  5471   000408                     ANSELB          equ	1032	;# 
  5472   000409                     WPUB            equ	1033	;# 
  5473   00040A                     ODCONB          equ	1034	;# 
  5474   00040B                     SLRCONB         equ	1035	;# 
  5475   00040C                     INLVLB          equ	1036	;# 
  5476   00040D                     IOCBP           equ	1037	;# 
  5477   00040E                     IOCBN           equ	1038	;# 
  5478   00040F                     IOCBF           equ	1039	;# 
  5479   000410                     ANSELC          equ	1040	;# 
  5480   000411                     WPUC            equ	1041	;# 
  5481   000412                     ODCONC          equ	1042	;# 
  5482   000413                     SLRCONC         equ	1043	;# 
  5483   000414                     INLVLC          equ	1044	;# 
  5484   000415                     IOCCP           equ	1045	;# 
  5485   000416                     IOCCN           equ	1046	;# 
  5486   000417                     IOCCF           equ	1047	;# 
  5487   000418                     ANSELD          equ	1048	;# 
  5488   000419                     WPUD            equ	1049	;# 
  5489   00041A                     ODCOND          equ	1050	;# 
  5490   00041B                     SLRCOND         equ	1051	;# 
  5491   00041C                     INLVLD          equ	1052	;# 
  5492   000420                     ANSELE          equ	1056	;# 
  5493   000421                     WPUE            equ	1057	;# 
  5494   000422                     ODCONE          equ	1058	;# 
  5495   000423                     SLRCONE         equ	1059	;# 
  5496   000424                     INLVLE          equ	1060	;# 
  5497   000425                     IOCEP           equ	1061	;# 
  5498   000426                     IOCEN           equ	1062	;# 
  5499   000427                     IOCEF           equ	1063	;# 
  5500   000428                     ANSELF          equ	1064	;# 
  5501   000429                     WPUF            equ	1065	;# 
  5502   00042A                     ODCONF          equ	1066	;# 
  5503   00042B                     SLRCONF         equ	1067	;# 
  5504   00042C                     INLVLF          equ	1068	;# 
  5505   00043D                     IOCWP           equ	1085	;# 
  5506   00043E                     IOCWN           equ	1086	;# 
  5507   00043F                     IOCWF           equ	1087	;# 
  5508   000440                     NCO1ACC         equ	1088	;# 
  5509   000440                     NCO1ACCL        equ	1088	;# 
  5510   000441                     NCO1ACCH        equ	1089	;# 
  5511   000442                     NCO1ACCU        equ	1090	;# 
  5512   000443                     NCO1INC         equ	1091	;# 
  5513   000443                     NCO1INCL        equ	1091	;# 
  5514   000444                     NCO1INCH        equ	1092	;# 
  5515   000445                     NCO1INCU        equ	1093	;# 
  5516   000446                     NCO1CON         equ	1094	;# 
  5517   000447                     NCO1CLK         equ	1095	;# 
  5518   000458                     FSCMCON         equ	1112	;# 
  5519   000459                     IVTLOCK         equ	1113	;# 
  5520   00045A                     IVTAD           equ	1114	;# 
  5521   00045A                     IVTADL          equ	1114	;# 
  5522   00045B                     IVTADH          equ	1115	;# 
  5523   00045C                     IVTADU          equ	1116	;# 
  5524   00045D                     IVTBASE         equ	1117	;# 
  5525   00045D                     IVTBASEL        equ	1117	;# 
  5526   00045E                     IVTBASEH        equ	1118	;# 
  5527   00045F                     IVTBASEU        equ	1119	;# 
  5528   000460                     PWM1ERS         equ	1120	;# 
  5529   000461                     PWM1CLK         equ	1121	;# 
  5530   000462                     PWM1LDS         equ	1122	;# 
  5531   000463                     PWM1PR          equ	1123	;# 
  5532   000463                     PWM1PRL         equ	1123	;# 
  5533   000464                     PWM1PRH         equ	1124	;# 
  5534   000465                     PWM1CPRE        equ	1125	;# 
  5535   000466                     PWM1PIPOS       equ	1126	;# 
  5536   000467                     PWM1GIR         equ	1127	;# 
  5537   000468                     PWM1GIE         equ	1128	;# 
  5538   000469                     PWM1CON         equ	1129	;# 
  5539   00046A                     PWM1S1CFG       equ	1130	;# 
  5540   00046B                     PWM1S1P1        equ	1131	;# 
  5541   00046B                     PWM1S1P1L       equ	1131	;# 
  5542   00046C                     PWM1S1P1H       equ	1132	;# 
  5543   00046D                     PWM1S1P2        equ	1133	;# 
  5544   00046D                     PWM1S1P2L       equ	1133	;# 
  5545   00046E                     PWM1S1P2H       equ	1134	;# 
  5546   00046F                     PWM2ERS         equ	1135	;# 
  5547   000470                     PWM2CLK         equ	1136	;# 
  5548   000471                     PWM2LDS         equ	1137	;# 
  5549   000472                     PWM2PR          equ	1138	;# 
  5550   000472                     PWM2PRL         equ	1138	;# 
  5551   000473                     PWM2PRH         equ	1139	;# 
  5552   000474                     PWM2CPRE        equ	1140	;# 
  5553   000475                     PWM2PIPOS       equ	1141	;# 
  5554   000476                     PWM2GIR         equ	1142	;# 
  5555   000477                     PWM2GIE         equ	1143	;# 
  5556   000478                     PWM2CON         equ	1144	;# 
  5557   000479                     PWM2S1CFG       equ	1145	;# 
  5558   00047A                     PWM2S1P1        equ	1146	;# 
  5559   00047A                     PWM2S1P1L       equ	1146	;# 
  5560   00047B                     PWM2S1P1H       equ	1147	;# 
  5561   00047C                     PWM2S1P2        equ	1148	;# 
  5562   00047C                     PWM2S1P2L       equ	1148	;# 
  5563   00047D                     PWM2S1P2H       equ	1149	;# 
  5564   00047E                     PWM3ERS         equ	1150	;# 
  5565   00047F                     PWM3CLK         equ	1151	;# 
  5566   000480                     PWM3LDS         equ	1152	;# 
  5567   000481                     PWM3PR          equ	1153	;# 
  5568   000481                     PWM3PRL         equ	1153	;# 
  5569   000482                     PWM3PRH         equ	1154	;# 
  5570   000483                     PWM3CPRE        equ	1155	;# 
  5571   000484                     PWM3PIPOS       equ	1156	;# 
  5572   000485                     PWM3GIR         equ	1157	;# 
  5573   000486                     PWM3GIE         equ	1158	;# 
  5574   000487                     PWM3CON         equ	1159	;# 
  5575   000488                     PWM3S1CFG       equ	1160	;# 
  5576   000489                     PWM3S1P1        equ	1161	;# 
  5577   000489                     PWM3S1P1L       equ	1161	;# 
  5578   00048A                     PWM3S1P1H       equ	1162	;# 
  5579   00048B                     PWM3S1P2        equ	1163	;# 
  5580   00048B                     PWM3S1P2L       equ	1163	;# 
  5581   00048C                     PWM3S1P2H       equ	1164	;# 
  5582   000499                     PWMLOAD         equ	1177	;# 
  5583   00049A                     PWMEN           equ	1178	;# 
  5584   00049C                     IPR0            equ	1180	;# 
  5585   00049D                     IPR1            equ	1181	;# 
  5586   00049E                     IPR2            equ	1182	;# 
  5587   00049F                     IPR3            equ	1183	;# 
  5588   0004A0                     IPR4            equ	1184	;# 
  5589   0004A1                     IPR5            equ	1185	;# 
  5590   0004A2                     IPR6            equ	1186	;# 
  5591   0004A3                     IPR7            equ	1187	;# 
  5592   0004A4                     IPR8            equ	1188	;# 
  5593   0004A5                     IPR9            equ	1189	;# 
  5594   0004A6                     IPR10           equ	1190	;# 
  5595   0004A7                     PIE0            equ	1191	;# 
  5596   0004A8                     PIE1            equ	1192	;# 
  5597   0004A9                     PIE2            equ	1193	;# 
  5598   0004AA                     PIE3            equ	1194	;# 
  5599   0004AB                     PIE4            equ	1195	;# 
  5600   0004AC                     PIE5            equ	1196	;# 
  5601   0004AD                     PIE6            equ	1197	;# 
  5602   0004AE                     PIE7            equ	1198	;# 
  5603   0004AF                     PIE8            equ	1199	;# 
  5604   0004B0                     PIE9            equ	1200	;# 
  5605   0004B1                     PIE10           equ	1201	;# 
  5606   0004B2                     PIR0            equ	1202	;# 
  5607   0004B3                     PIR1            equ	1203	;# 
  5608   0004B4                     PIR2            equ	1204	;# 
  5609   0004B5                     PIR3            equ	1205	;# 
  5610   0004B6                     PIR4            equ	1206	;# 
  5611   0004B7                     PIR5            equ	1207	;# 
  5612   0004B8                     PIR6            equ	1208	;# 
  5613   0004B9                     PIR7            equ	1209	;# 
  5614   0004BA                     PIR8            equ	1210	;# 
  5615   0004BB                     PIR9            equ	1211	;# 
  5616   0004BC                     PIR10           equ	1212	;# 
  5617   0004D6                     INTCON0         equ	1238	;# 
  5618   0004D7                     INTCON1         equ	1239	;# 
  5619   0004D8                     STATUS          equ	1240	;# 
  5620   0004D9                     FSR2            equ	1241	;# 
  5621   0004D9                     FSR2L           equ	1241	;# 
  5622   0004DA                     FSR2H           equ	1242	;# 
  5623   0004DB                     PLUSW2          equ	1243	;# 
  5624   0004DC                     PREINC2         equ	1244	;# 
  5625   0004DD                     POSTDEC2        equ	1245	;# 
  5626   0004DE                     POSTINC2        equ	1246	;# 
  5627   0004DF                     INDF2           equ	1247	;# 
  5628   0004E0                     BSR             equ	1248	;# 
  5629   0004E1                     FSR1            equ	1249	;# 
  5630   0004E1                     FSR1L           equ	1249	;# 
  5631   0004E2                     FSR1H           equ	1250	;# 
  5632   0004E3                     PLUSW1          equ	1251	;# 
  5633   0004E4                     PREINC1         equ	1252	;# 
  5634   0004E5                     POSTDEC1        equ	1253	;# 
  5635   0004E6                     POSTINC1        equ	1254	;# 
  5636   0004E7                     INDF1           equ	1255	;# 
  5637   0004E8                     WREG            equ	1256	;# 
  5638   0004E9                     FSR0            equ	1257	;# 
  5639   0004E9                     FSR0L           equ	1257	;# 
  5640   0004EA                     FSR0H           equ	1258	;# 
  5641   0004EB                     PLUSW0          equ	1259	;# 
  5642   0004EC                     PREINC0         equ	1260	;# 
  5643   0004ED                     POSTDEC0        equ	1261	;# 
  5644   0004EE                     POSTINC0        equ	1262	;# 
  5645   0004EF                     INDF0           equ	1263	;# 
  5646   0004F0                     PCON0           equ	1264	;# 
  5647   0004F1                     PCON1           equ	1265	;# 
  5648   0004F2                     CPUDOZE         equ	1266	;# 
  5649   0004F3                     PROD            equ	1267	;# 
  5650   0004F3                     PRODL           equ	1267	;# 
  5651   0004F4                     PRODH           equ	1268	;# 
  5652   0004F5                     TABLAT          equ	1269	;# 
  5653   0004F6                     TBLPTR          equ	1270	;# 
  5654   0004F6                     TBLPTRL         equ	1270	;# 
  5655   0004F7                     TBLPTRH         equ	1271	;# 
  5656   0004F8                     TBLPTRU         equ	1272	;# 
  5657   0004F9                     PCLAT           equ	1273	;# 
  5658   0004F9                     PCL             equ	1273	;# 
  5659   0004FA                     PCLATH          equ	1274	;# 
  5660   0004FB                     PCLATU          equ	1275	;# 
  5661   0004FC                     STKPTR          equ	1276	;# 
  5662   0004FD                     TOS             equ	1277	;# 
  5663   0004FD                     TOSL            equ	1277	;# 
  5664   0004FE                     TOSH            equ	1278	;# 
  5665   0004FF                     TOSU            equ	1279	;# 
  5666                           
  5667 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
  5668   000000                     _INT0_DefaultInterruptHandler equ	0
  5669                           
  5670 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
  5671   000000                     _INT1_DefaultInterruptHandler equ	0
  5672                           
  5673 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
  5674   000000                     _INT2_DefaultInterruptHandler equ	0
  5675                           
  5676 ;; Function _UART2_Deinitialize is unused but had its address taken
  5677   000000                     _UART2_Deinitialize equ	0
  5678                           
  5679 ;; Function _UART2_TransmitEnable is unused but had its address taken
  5680   000000                     _UART2_TransmitEnable equ	0
  5681                           
  5682 ;; Function _UART2_TransmitDisable is unused but had its address taken
  5683   000000                     _UART2_TransmitDisable equ	0
  5684                           
  5685 ;; Function _UART2_AutoBaudSet is unused but had its address taken
  5686   000000                     _UART2_AutoBaudSet equ	0
  5687                           
  5688 ;; Function _UART2_AutoBaudQuery is unused but had its address taken
  5689   000000                     _UART2_AutoBaudQuery equ	0
  5690                           
  5691 ;; Function _UART2_IsRxReady is unused but had its address taken
  5692   000000                     _UART2_IsRxReady equ	0
  5693                           
  5694 ;; Function _UART2_IsTxDone is unused but had its address taken
  5695   000000                     _UART2_IsTxDone equ	0
  5696                           
  5697 ;; Function _UART2_ErrorGet is unused but had its address taken
  5698   000000                     _UART2_ErrorGet equ	0
  5699                           
  5700 ;; Function _UART2_Read is unused but had its address taken
  5701   000000                     _UART2_Read     equ	0
  5702                           
  5703 ;; Function _UART2_DefaultFramingErrorCallback is unused but had its address taken
  5704   000000                     _UART2_DefaultFramingErrorCallback equ	0
  5705                           
  5706 ;; Function _UART2_DefaultOverrunErrorCallback is unused but had its address taken
  5707   000000                     _UART2_DefaultOverrunErrorCallback equ	0
  5708                           
  5709 ;; Function _UART2_DefaultParityErrorCallback is unused but had its address taken
  5710   000000                     _UART2_DefaultParityErrorCallback equ	0
  5711                           
  5712                           	psect	smallconst
  5713   001600                     __psmallconst:
  5714                           	callstack 0
  5715   001600  00                 	db	0
  5716   001601                     _UART2:
  5717                           	callstack 0
  5718   001601  3A                 	db	low _UART2_Initialize
  5719   001602  3C                 	db	high _UART2_Initialize
  5720   001603  00                 	db	0
  5721   001604  00                 	db	0
  5722   001605  00                 	db	0
  5723   001606  00                 	db	0
  5724   001607  1C                 	db	low _UART2_Write
  5725   001608  40                 	db	high _UART2_Write
  5726   001609  00                 	db	0
  5727   00160A  00                 	db	0
  5728   00160B  C2                 	db	low _UART2_IsTxReady
  5729   00160C  3E                 	db	high _UART2_IsTxReady
  5730   00160D  00                 	db	0
  5731   00160E  00                 	db	0
  5732   00160F  00                 	db	0
  5733   001610  00                 	db	0
  5734   001611  00                 	db	0
  5735   001612  00                 	db	0
  5736   001613  00                 	db	0
  5737   001614  00                 	db	0
  5738   001615  00                 	db	0
  5739   001616  00                 	db	0
  5740   001617  00                 	db	0
  5741   001618  00                 	db	0
  5742   001619  00                 	db	0
  5743   00161A  00                 	db	0
  5744   00161B  00                 	db	0
  5745   00161C  00                 	db	0
  5746   00161D  00                 	db	0
  5747   00161E  00                 	db	0
  5748   00161F  00                 	db	0
  5749   001620  00                 	db	0
  5750   001621  00                 	db	0
  5751   001622  00                 	db	0
  5752   001623  00                 	db	0
  5753   001624  00                 	db	0
  5754   001625  00                 	db	0
  5755   001626  00                 	db	0
  5756   001627  00                 	db	0
  5757   001628  00                 	db	0
  5758   001629  64                 	db	low _UART2_FramingErrorCallbackRegister
  5759   00162A  3F                 	db	high _UART2_FramingErrorCallbackRegister
  5760   00162B  48                 	db	low _UART2_OverrunErrorCallbackRegister
  5761   00162C  3F                 	db	high _UART2_OverrunErrorCallbackRegister
  5762   00162D  2C                 	db	low _UART2_ParityErrorCallbackRegister
  5763   00162E  3F                 	db	high _UART2_ParityErrorCallbackRegister
  5764   00162F  00                 	db	0
  5765   001630  00                 	db	0
  5766   001631                     __end_of_UART2:
  5767                           	callstack 0
  5768   001631                     STR_1:
  5769   001631  70                 	db	112	;'p'
  5770   001632  6F                 	db	111	;'o'
  5771   001633  6D                 	db	109	;'m'
  5772   001634  70                 	db	112	;'p'
  5773   001635  61                 	db	97	;'a'
  5774   001636  31                 	db	49	;'1'
  5775   001637  3A                 	db	58	;':'
  5776   001638  20                 	db	32
  5777   001639  25                 	db	37
  5778   00163A  2E                 	db	46
  5779   00163B  32                 	db	50	;'2'
  5780   00163C  66                 	db	102	;'f'
  5781   00163D  0A                 	db	10
  5782   00163E  00                 	db	0
  5783   00163F                     STR_2:
  5784   00163F  70                 	db	112	;'p'
  5785   001640  6F                 	db	111	;'o'
  5786   001641  6D                 	db	109	;'m'
  5787   001642  70                 	db	112	;'p'
  5788   001643  61                 	db	97	;'a'
  5789   001644  32                 	db	50	;'2'
  5790   001645  3A                 	db	58	;':'
  5791   001646  20                 	db	32
  5792   001647  25                 	db	37
  5793   001648  2E                 	db	46
  5794   001649  32                 	db	50	;'2'
  5795   00164A  66                 	db	102	;'f'
  5796   00164B  0A                 	db	10
  5797   00164C  00                 	db	0
  5798   00164D                     STR_3:
  5799   00164D  69                 	db	105	;'i'
  5800   00164E  6E                 	db	110	;'n'
  5801   00164F  66                 	db	102	;'f'
  5802   001650  00                 	db	0
  5803   001651                     STR_6:
  5804   001651  6E                 	db	110	;'n'
  5805   001652  61                 	db	97	;'a'
  5806   001653  6E                 	db	110	;'n'
  5807   001654  00                 	db	0
  5808   001651                     STR_7           equ	STR_6
  5809   001651                     STR_8           equ	STR_6
  5810   00164D                     STR_4           equ	STR_3
  5811   00164D                     STR_5           equ	STR_3
  5812   001655  00                 	db	0	; dummy byte at the end
  5813   001600                     __smallconst    set	__psmallconst
  5814   001600                     __mediumconst   set	__psmallconst
  5815   000003                     __activetblptr  equ	3
  5816                           
  5817                           	psect	nvBANK5
  5818   0005DA                     __pnvBANK5:
  5819                           	callstack 0
  5820   0005DA                     _IO_RA0_InterruptHandler:
  5821                           	callstack 0
  5822   0005DA                     	ds	2
  5823   0000AC                     _ACTCON         set	172
  5824   0000B0                     _OSCTUNE        set	176
  5825   0000B1                     _OSCFRQ         set	177
  5826   0000B3                     _OSCEN          set	179
  5827   0000AF                     _OSCCON3        set	175
  5828   0000AD                     _OSCCON1        set	173
  5829   000114                     _ADCGE          set	276
  5830   000113                     _ADCGD          set	275
  5831   000112                     _ADCGC          set	274
  5832   000111                     _ADCGB          set	273
  5833   000110                     _ADCGA          set	272
  5834   00014D                     _TRISF          set	333
  5835   00014C                     _TRISE          set	332
  5836   00014B                     _TRISD          set	331
  5837   00014A                     _TRISC          set	330
  5838   000149                     _TRISB          set	329
  5839   000148                     _TRISA          set	328
  5840   000145                     _LATF           set	325
  5841   000144                     _LATE           set	324
  5842   000143                     _LATD           set	323
  5843   000142                     _LATC           set	322
  5844   000141                     _LATB           set	321
  5845   000140                     _LATA           set	320
  5846   0002C3                     _U2FIFObits     set	707
  5847   0002C5                     _U2ERRIRbits    set	709
  5848   0002C4                     _U2UIRbits      set	708
  5849   0002BE                     _U2CON0bits     set	702
  5850   0002BF                     _U2CON1bits     set	703
  5851   0002B6                     _U2TXB          set	694
  5852   0002B4                     _U2RXB          set	692
  5853   0002C6                     _U2ERRIE        set	710
  5854   0002C5                     _U2ERRIR        set	709
  5855   0002C4                     _U2UIR          set	708
  5856   0002C3                     _U2FIFO         set	707
  5857   0002C2                     _U2BRGH         set	706
  5858   0002C1                     _U2BRGL         set	705
  5859   0002C0                     _U2CON2         set	704
  5860   0002BF                     _U2CON1         set	703
  5861   0002BE                     _U2CON0         set	702
  5862   0002BC                     _U2P3L          set	700
  5863   0002BA                     _U2P2L          set	698
  5864   0002B8                     _U2P1L          set	696
  5865   00020D                     _RB4PPS         set	525
  5866   000274                     _U2RXPPS        set	628
  5867   000287                     _RC4I2C         set	647
  5868   000288                     _RC3I2C         set	648
  5869   000285                     _RB2I2C         set	645
  5870   000286                     _RB1I2C         set	646
  5871   0003FD                     _ADCSEL2bits    set	1021
  5872   0003FC                     _ADCSEL1bits    set	1020
  5873   0003F4                     _ADCON1bits     set	1012
  5874   0003DD                     _ADERRL         set	989
  5875   0003DE                     _ADERRH         set	990
  5876   0003E8                     _ADPREVL        set	1000
  5877   0003E9                     _ADPREVH        set	1001
  5878   0003E1                     _ADFLTRL        set	993
  5879   0003E2                     _ADFLTRH        set	994
  5880   0003F7                     _ADSTATbits     set	1015
  5881   0003F6                     _ADCON3bits     set	1014
  5882   0003F5                     _ADCON2bits     set	1013
  5883   0003F3                     _ADCON0         set	1011
  5884   0003FC                     _ADCSEL1        set	1020
  5885   0003FD                     _ADCSEL2        set	1021
  5886   0003F8                     _ADREF          set	1016
  5887   0003F7                     _ADSTAT         set	1015
  5888   0003F6                     _ADCON3         set	1014
  5889   0003F5                     _ADCON2         set	1013
  5890   0003F4                     _ADCON1         set	1012
  5891   0003F2                     _ADPREH         set	1010
  5892   0003F1                     _ADPREL         set	1009
  5893   0003F0                     _ADCAP          set	1008
  5894   0003EF                     _ADACQH         set	1007
  5895   0003EE                     _ADACQL         set	1006
  5896   0003ED                     _ADNCH          set	1005
  5897   0003EC                     _ADPCH          set	1004
  5898   0003EB                     _ADRESH         set	1003
  5899   0003EA                     _ADRESL         set	1002
  5900   0003E7                     _ADRPT          set	999
  5901   0003E6                     _ADCNT          set	998
  5902   0003E5                     _ADACCU         set	997
  5903   0003E4                     _ADACCH         set	996
  5904   0003E3                     _ADACCL         set	995
  5905   0003E0                     _ADSTPTH        set	992
  5906   0003DF                     _ADSTPTL        set	991
  5907   0003DC                     _ADUTHH         set	988
  5908   0003DB                     _ADUTHL         set	987
  5909   0003DA                     _ADLTHH         set	986
  5910   0003D9                     _ADLTHL         set	985
  5911   0003FB                     _ADCTX          set	1019
  5912   0003FA                     _ADCLK          set	1018
  5913   0003F9                     _ADACT          set	1017
  5914   0003F3                     _ADCON0bits     set	1011
  5915   000458                     _FSCMCON        set	1112
  5916   000407                     _IOCAFbits      set	1031
  5917   000427                     _IOCEF          set	1063
  5918   000426                     _IOCEN          set	1062
  5919   000425                     _IOCEP          set	1061
  5920   000417                     _IOCCF          set	1047
  5921   000416                     _IOCCN          set	1046
  5922   000415                     _IOCCP          set	1045
  5923   00040F                     _IOCBF          set	1039
  5924   00040E                     _IOCBN          set	1038
  5925   00040D                     _IOCBP          set	1037
  5926   00043F                     _IOCWF          set	1087
  5927   00043E                     _IOCWN          set	1086
  5928   00043D                     _IOCWP          set	1085
  5929   000407                     _IOCAF          set	1031
  5930   000406                     _IOCAN          set	1030
  5931   000405                     _IOCAP          set	1029
  5932   00042C                     _INLVLF         set	1068
  5933   000424                     _INLVLE         set	1060
  5934   00041C                     _INLVLD         set	1052
  5935   000414                     _INLVLC         set	1044
  5936   00040C                     _INLVLB         set	1036
  5937   000404                     _INLVLA         set	1028
  5938   00042B                     _SLRCONF        set	1067
  5939   000423                     _SLRCONE        set	1059
  5940   00041B                     _SLRCOND        set	1051
  5941   000413                     _SLRCONC        set	1043
  5942   00040B                     _SLRCONB        set	1035
  5943   000403                     _SLRCONA        set	1027
  5944   000429                     _WPUF           set	1065
  5945   000421                     _WPUE           set	1057
  5946   000419                     _WPUD           set	1049
  5947   000411                     _WPUC           set	1041
  5948   000409                     _WPUB           set	1033
  5949   000401                     _WPUA           set	1025
  5950   000428                     _ANSELF         set	1064
  5951   000420                     _ANSELE         set	1056
  5952   000418                     _ANSELD         set	1048
  5953   000410                     _ANSELC         set	1040
  5954   000408                     _ANSELB         set	1032
  5955   000400                     _ANSELA         set	1024
  5956   00042A                     _ODCONF         set	1066
  5957   000422                     _ODCONE         set	1058
  5958   00041A                     _ODCOND         set	1050
  5959   000412                     _ODCONC         set	1042
  5960   00040A                     _ODCONB         set	1034
  5961   000402                     _ODCONA         set	1026
  5962   0004A8                     _PIE1bits       set	1192
  5963   0004B2                     _PIR0bits       set	1202
  5964   0004BC                     _PIR10bits      set	1212
  5965   0004B8                     _PIR6bits       set	1208
  5966   0004B3                     _PIR1bits       set	1203
  5967   0004D6                     _INTCON0bits    set	1238
  5968   0004A7                     _PIE0bits       set	1191
  5969                           
  5970                           ; #config settings
  5971                           
  5972                           	psect	cinit
  5973   003E92                     __pcinit:
  5974                           	callstack 0
  5975   003E92                     start_initialization:
  5976                           	callstack 0
  5977   003E92                     __initialization:
  5978                           	callstack 0
  5979                           
  5980                           ; Clear objects allocated to BANK6 (80 bytes)
  5981   003E92  EE01  F200         	lfsr	0,__pbssBANK6
  5982   003E96  0E50               	movlw	80
  5983   003E98                     clear_0:
  5984   003E98  6AEE               	clrf	postinc0,c
  5985   003E9A  06E8               	decf	wreg,f,c
  5986   003E9C  E1FD               	bnz	clear_0
  5987                           
  5988                           ; Clear objects allocated to BANK5 (35 bytes)
  5989   003E9E  EE01  F1B7         	lfsr	0,__pbssBANK5
  5990   003EA2  0E23               	movlw	35
  5991   003EA4                     clear_1:
  5992   003EA4  6AEE               	clrf	postinc0,c
  5993   003EA6  06E8               	decf	wreg,f,c
  5994   003EA8  E1FD               	bnz	clear_1
  5995                           
  5996                           ; Clear objects allocated to COMRAM (2 bytes)
  5997   003EAA  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
  5998   003EAC  6A5C               	clrf	__pbssCOMRAM& (0+255),c
  5999                           
  6000                           ;
  6001                           ; Setup IVTBASE
  6002                           ;
  6003   00045D                     IVTBASEL        equ	1117
  6004   00045E                     IVTBASEH        equ	1118
  6005   00045F                     IVTBASEU        equ	1119
  6006   003EAE  0104               	movlb	4
  6007   003EB0  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  6008   003EB2  6F5D               	movwf	93,b
  6009   003EB4  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  6010   003EB6  6F5E               	movwf	94,b
  6011   003EB8  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  6012   003EBA  6F5F               	movwf	95,b
  6013   003EBC                     end_of_initialization:
  6014                           	callstack 0
  6015   003EBC                     __end_of__initialization:
  6016                           	callstack 0
  6017   003EBC  0100               	movlb	0
  6018   003EBE  EF45  F019         	goto	_main	;jump to C main() function
  6019                           
  6020                           	psect	bssCOMRAM
  6021   00055C                     __pbssCOMRAM:
  6022                           	callstack 0
  6023   00055C                     _context2:
  6024                           	callstack 0
  6025   00055C                     	ds	1
  6026   00055D                     _context1:
  6027                           	callstack 0
  6028   00055D                     	ds	1
  6029                           
  6030                           	psect	bssBANK5
  6031   0005B7                     __pbssBANK5:
  6032                           	callstack 0
  6033   0005B7                     floorf@F521:
  6034                           	callstack 0
  6035   0005B7                     	ds	4
  6036   0005BB                     ___fpclassifyf@F465:
  6037                           	callstack 0
  6038   0005BB                     	ds	4
  6039   0005BF                     _width:
  6040                           	callstack 0
  6041   0005BF                     	ds	2
  6042   0005C1                     _prec:
  6043                           	callstack 0
  6044   0005C1                     	ds	2
  6045   0005C3                     _ADC_Context2ThresholdCallback:
  6046                           	callstack 0
  6047   0005C3                     	ds	2
  6048   0005C5                     _ADC_Context1ThresholdCallback:
  6049                           	callstack 0
  6050   0005C5                     	ds	2
  6051   0005C7                     _ADC_ConversionDoneCallback:
  6052                           	callstack 0
  6053   0005C7                     	ds	2
  6054   0005C9                     _UART2_ParityErrorHandler:
  6055                           	callstack 0
  6056   0005C9                     	ds	2
  6057   0005CB                     _UART2_OverrunErrorHandler:
  6058                           	callstack 0
  6059   0005CB                     	ds	2
  6060   0005CD                     _UART2_FramingErrorHandler:
  6061                           	callstack 0
  6062   0005CD                     	ds	2
  6063   0005CF                     _uart2RxLastError:
  6064                           	callstack 0
  6065   0005CF                     	ds	2
  6066   0005D1                     _context:
  6067                           	callstack 0
  6068   0005D1                     	ds	2
  6069   0005D3                     _INT2_InterruptHandler:
  6070                           	callstack 0
  6071   0005D3                     	ds	2
  6072   0005D5                     _INT1_InterruptHandler:
  6073                           	callstack 0
  6074   0005D5                     	ds	2
  6075   0005D7                     _INT0_InterruptHandler:
  6076                           	callstack 0
  6077   0005D7                     	ds	2
  6078   0005D9                     _flags:
  6079                           	callstack 0
  6080   0005D9                     	ds	1
  6081                           
  6082                           	psect	bssBANK6
  6083   000600                     __pbssBANK6:
  6084                           	callstack 0
  6085   000600                     _dbuf:
  6086                           	callstack 0
  6087   000600                     	ds	80
  6088                           
  6089                           	psect	cstackBANK5
  6090   000560                     __pcstackBANK5:
  6091                           	callstack 0
  6092   000560                     efgtoa@fp:
  6093                           	callstack 0
  6094                           
  6095                           ; 2 bytes @ 0x0
  6096   000560                     	ds	2
  6097   000562                     efgtoa@f:
  6098                           	callstack 0
  6099                           
  6100                           ; 4 bytes @ 0x2
  6101   000562                     	ds	4
  6102   000566                     efgtoa@c:
  6103                           	callstack 0
  6104                           
  6105                           ; 1 bytes @ 0x6
  6106   000566                     	ds	1
  6107   000567                     ??_efgtoa:
  6108                           
  6109                           ; 1 bytes @ 0x7
  6110   000567                     	ds	2
  6111   000569                     efgtoa@ne:
  6112                           	callstack 0
  6113                           
  6114                           ; 2 bytes @ 0x9
  6115   000569                     	ds	2
  6116   00056B                     efgtoa@p:
  6117                           	callstack 0
  6118                           
  6119                           ; 2 bytes @ 0xB
  6120   00056B                     	ds	2
  6121   00056D                     efgtoa@t:
  6122                           	callstack 0
  6123                           
  6124                           ; 2 bytes @ 0xD
  6125   00056D                     	ds	2
  6126   00056F                     _efgtoa$2284:
  6127                           	callstack 0
  6128                           
  6129                           ; 2 bytes @ 0xF
  6130   00056F                     	ds	2
  6131   000571                     efgtoa@pp:
  6132                           	callstack 0
  6133                           
  6134                           ; 1 bytes @ 0x11
  6135   000571                     	ds	1
  6136   000572                     efgtoa@mode:
  6137                           	callstack 0
  6138                           
  6139                           ; 1 bytes @ 0x12
  6140   000572                     	ds	1
  6141   000573                     efgtoa@nmode:
  6142                           	callstack 0
  6143                           
  6144                           ; 1 bytes @ 0x13
  6145   000573                     	ds	1
  6146   000574                     efgtoa@d:
  6147                           	callstack 0
  6148                           
  6149                           ; 2 bytes @ 0x14
  6150   000574                     	ds	2
  6151   000576                     efgtoa@m:
  6152                           	callstack 0
  6153                           
  6154                           ; 2 bytes @ 0x16
  6155   000576                     	ds	2
  6156   000578                     efgtoa@e:
  6157                           	callstack 0
  6158                           
  6159                           ; 2 bytes @ 0x18
  6160   000578                     	ds	2
  6161   00057A                     efgtoa@w:
  6162                           	callstack 0
  6163                           
  6164                           ; 2 bytes @ 0x1A
  6165   00057A                     	ds	2
  6166   00057C                     efgtoa@ou:
  6167                           	callstack 0
  6168                           
  6169                           ; 4 bytes @ 0x1C
  6170   00057C                     	ds	4
  6171   000580                     efgtoa@i:
  6172                           	callstack 0
  6173                           
  6174                           ; 2 bytes @ 0x20
  6175   000580                     	ds	2
  6176   000582                     efgtoa@h:
  6177                           	callstack 0
  6178                           
  6179                           ; 4 bytes @ 0x22
  6180   000582                     	ds	4
  6181   000586                     efgtoa@l:
  6182                           	callstack 0
  6183                           
  6184                           ; 4 bytes @ 0x26
  6185   000586                     	ds	4
  6186   00058A                     efgtoa@sign:
  6187                           	callstack 0
  6188                           
  6189                           ; 1 bytes @ 0x2A
  6190   00058A                     	ds	1
  6191   00058B                     efgtoa@g:
  6192                           	callstack 0
  6193                           
  6194                           ; 4 bytes @ 0x2B
  6195   00058B                     	ds	4
  6196   00058F                     efgtoa@n:
  6197                           	callstack 0
  6198                           
  6199                           ; 2 bytes @ 0x2F
  6200   00058F                     	ds	2
  6201   000591                     efgtoa@u:
  6202                           	callstack 0
  6203                           
  6204                           ; 4 bytes @ 0x31
  6205   000591                     	ds	4
  6206   000595                     vfpfcnvrt@fp:
  6207                           	callstack 0
  6208                           
  6209                           ; 2 bytes @ 0x35
  6210   000595                     	ds	2
  6211   000597                     vfpfcnvrt@fmt:
  6212                           	callstack 0
  6213                           
  6214                           ; 2 bytes @ 0x37
  6215   000597                     	ds	2
  6216   000599                     vfpfcnvrt@ap:
  6217                           	callstack 0
  6218                           
  6219                           ; 2 bytes @ 0x39
  6220   000599                     	ds	2
  6221   00059B                     ??_vfpfcnvrt:
  6222                           
  6223                           ; 1 bytes @ 0x3B
  6224   00059B                     	ds	2
  6225   00059D                     vfpfcnvrt@convarg:
  6226                           	callstack 0
  6227                           
  6228                           ; 4 bytes @ 0x3D
  6229   00059D                     	ds	4
  6230   0005A1                     vfpfcnvrt@c:
  6231                           	callstack 0
  6232                           
  6233                           ; 1 bytes @ 0x41
  6234   0005A1                     	ds	1
  6235   0005A2                     vfpfcnvrt@cp:
  6236                           	callstack 0
  6237                           
  6238                           ; 1 bytes @ 0x42
  6239   0005A2                     	ds	1
  6240   0005A3                     ?_vfprintf:
  6241                           	callstack 0
  6242   0005A3                     vfprintf@fp:
  6243                           	callstack 0
  6244                           
  6245                           ; 2 bytes @ 0x43
  6246   0005A3                     	ds	2
  6247   0005A5                     vfprintf@fmt:
  6248                           	callstack 0
  6249                           
  6250                           ; 1 bytes @ 0x45
  6251   0005A5                     	ds	1
  6252   0005A6                     vfprintf@ap:
  6253                           	callstack 0
  6254                           
  6255                           ; 2 bytes @ 0x46
  6256   0005A6                     	ds	2
  6257   0005A8                     ?_printf:
  6258                           	callstack 0
  6259   0005A8                     printf@fmt:
  6260                           	callstack 0
  6261                           
  6262                           ; 1 bytes @ 0x48
  6263   0005A8                     	ds	5
  6264   0005AD                     printf@ap:
  6265                           	callstack 0
  6266                           
  6267                           ; 2 bytes @ 0x4D
  6268   0005AD                     	ds	2
  6269   0005AF                     ??_main:
  6270                           
  6271                           ; 1 bytes @ 0x4F
  6272   0005AF                     	ds	2
  6273   0005B1                     main@context1:
  6274                           	callstack 0
  6275                           
  6276                           ; 1 bytes @ 0x51
  6277   0005B1                     	ds	1
  6278   0005B2                     main@context2:
  6279                           	callstack 0
  6280                           
  6281                           ; 1 bytes @ 0x52
  6282   0005B2                     	ds	1
  6283   0005B3                     _main$2808:
  6284                           	callstack 0
  6285                           
  6286                           ; 4 bytes @ 0x53
  6287   0005B3                     	ds	4
  6288                           
  6289                           	psect	cstackCOMRAM
  6290   000501                     __pcstackCOMRAM:
  6291                           	callstack 0
  6292   000501                     ??_INTERRUPT_InterruptManager:
  6293                           
  6294                           ; 1 bytes @ 0x0
  6295   000501                     	ds	2
  6296   000503                     ?_ADC_ConversionResultGet:
  6297                           	callstack 0
  6298   000503                     ?___fpclassifyf:
  6299                           	callstack 0
  6300   000503                     ?_read_prec_or_width:
  6301                           	callstack 0
  6302   000503                     ?___fladd:
  6303                           	callstack 0
  6304   000503                     ?_labs:
  6305                           	callstack 0
  6306   000503                     ?___flneg:
  6307                           	callstack 0
  6308   000503                     ?___fltol:
  6309                           	callstack 0
  6310   000503                     _UART2_IsTxReady$1067:
  6311                           	callstack 0
  6312   000503                     UART2_Write@txData:
  6313                           	callstack 0
  6314   000503                     ADC_ContextSelect@context:
  6315                           	callstack 0
  6316   000503                     IO_RA0_SetInterruptHandler@InterruptHandler:
  6317                           	callstack 0
  6318   000503                     INT0_SetInterruptHandler@InterruptHandler:
  6319                           	callstack 0
  6320   000503                     INT1_SetInterruptHandler@InterruptHandler:
  6321                           	callstack 0
  6322   000503                     INT2_SetInterruptHandler@InterruptHandler:
  6323                           	callstack 0
  6324   000503                     UART2_FramingErrorCallbackRegister@callbackHandler:
  6325                           	callstack 0
  6326   000503                     UART2_OverrunErrorCallbackRegister@callbackHandler:
  6327                           	callstack 0
  6328   000503                     UART2_ParityErrorCallbackRegister@callbackHandler:
  6329                           	callstack 0
  6330   000503                     read_prec_or_width@fmt:
  6331                           	callstack 0
  6332   000503                     memcpy@d1:
  6333                           	callstack 0
  6334   000503                     strcpy@dest:
  6335                           	callstack 0
  6336   000503                     ___fleq@ff1:
  6337                           	callstack 0
  6338   000503                     ___flneg@f1:
  6339                           	callstack 0
  6340   000503                     ___fltol@f1:
  6341                           	callstack 0
  6342   000503                     ___fladd@b:
  6343                           	callstack 0
  6344   000503                     ___fpclassifyf@x:
  6345                           	callstack 0
  6346   000503                     labs@a:
  6347                           	callstack 0
  6348   000503                     
  6349                           ; 1 bytes @ 0x2
  6350   000503                     	ds	1
  6351   000504                     putch@txData:
  6352                           	callstack 0
  6353   000504                     
  6354                           ; 1 bytes @ 0x3
  6355   000504                     	ds	1
  6356   000505                     strcpy@src:
  6357                           	callstack 0
  6358   000505                     read_prec_or_width@ap:
  6359                           	callstack 0
  6360   000505                     memcpy@s1:
  6361                           	callstack 0
  6362   000505                     fputc@c:
  6363                           	callstack 0
  6364   000505                     ??_ADC_ConversionResultGet:
  6365   000505                     
  6366                           ; 1 bytes @ 0x4
  6367   000505                     	ds	1
  6368   000506                     ??_strcpy:
  6369                           
  6370                           ; 1 bytes @ 0x5
  6371   000506                     	ds	1
  6372   000507                     ?___xxtofl:
  6373                           	callstack 0
  6374   000507                     memcpy@n:
  6375                           	callstack 0
  6376   000507                     fputc@fp:
  6377                           	callstack 0
  6378   000507                     strcpy@d:
  6379                           	callstack 0
  6380   000507                     ___fleq@ff2:
  6381                           	callstack 0
  6382   000507                     ___fladd@a:
  6383                           	callstack 0
  6384   000507                     ___xxtofl@val:
  6385                           	callstack 0
  6386   000507                     ??___fpclassifyf:
  6387   000507                     ??_labs:
  6388   000507                     ??___fltol:
  6389   000507                     ??_read_prec_or_width:
  6390                           
  6391                           ; 1 bytes @ 0x6
  6392   000507                     	ds	2
  6393   000509                     read_prec_or_width@c:
  6394                           	callstack 0
  6395   000509                     memcpy@d:
  6396                           	callstack 0
  6397   000509                     ??_fputc:
  6398   000509                     
  6399                           ; 1 bytes @ 0x8
  6400   000509                     	ds	1
  6401   00050A                     read_prec_or_width@n:
  6402                           	callstack 0
  6403                           
  6404                           ; 2 bytes @ 0x9
  6405   00050A                     	ds	1
  6406   00050B                     ___fltol@sign1:
  6407                           	callstack 0
  6408   00050B                     ___fpclassifyf@e:
  6409                           	callstack 0
  6410   00050B                     memcpy@s:
  6411                           	callstack 0
  6412   00050B                     ??___fladd:
  6413   00050B                     ??___fleq:
  6414   00050B                     ??___xxtofl:
  6415                           
  6416                           ; 1 bytes @ 0xA
  6417   00050B                     	ds	1
  6418   00050C                     ___fltol@exp1:
  6419                           	callstack 0
  6420                           
  6421                           ; 1 bytes @ 0xB
  6422   00050C                     	ds	1
  6423   00050D                     memcpy@tmp:
  6424                           	callstack 0
  6425   00050D                     ___fpclassifyf@u:
  6426                           	callstack 0
  6427                           
  6428                           ; 4 bytes @ 0xC
  6429   00050D                     	ds	1
  6430   00050E                     fputs@s:
  6431                           	callstack 0
  6432                           
  6433                           ; 2 bytes @ 0xD
  6434   00050E                     	ds	1
  6435   00050F                     ___fladd@signs:
  6436                           	callstack 0
  6437   00050F                     ___xxtofl@sign:
  6438                           	callstack 0
  6439                           
  6440                           ; 1 bytes @ 0xE
  6441   00050F                     	ds	1
  6442   000510                     ___fladd@aexp:
  6443                           	callstack 0
  6444   000510                     ___xxtofl@exp:
  6445                           	callstack 0
  6446   000510                     fputs@fp:
  6447                           	callstack 0
  6448                           
  6449                           ; 2 bytes @ 0xF
  6450   000510                     	ds	1
  6451   000511                     ___fladd@bexp:
  6452                           	callstack 0
  6453   000511                     ___xxtofl@arg:
  6454                           	callstack 0
  6455                           
  6456                           ; 4 bytes @ 0x10
  6457   000511                     	ds	1
  6458   000512                     ___fladd@grs:
  6459                           	callstack 0
  6460   000512                     fputs@c:
  6461                           	callstack 0
  6462   000512                     
  6463                           ; 1 bytes @ 0x11
  6464   000512                     	ds	1
  6465   000513                     fputs@i:
  6466                           	callstack 0
  6467                           
  6468                           ; 2 bytes @ 0x12
  6469   000513                     	ds	2
  6470   000515                     ?___flmul:
  6471                           	callstack 0
  6472   000515                     pad@fp:
  6473                           	callstack 0
  6474   000515                     ___flmul@b:
  6475                           	callstack 0
  6476                           
  6477                           ; 4 bytes @ 0x14
  6478   000515                     	ds	2
  6479   000517                     pad@buf:
  6480                           	callstack 0
  6481                           
  6482                           ; 2 bytes @ 0x16
  6483   000517                     	ds	2
  6484   000519                     pad@p:
  6485                           	callstack 0
  6486   000519                     ___flmul@a:
  6487                           	callstack 0
  6488                           
  6489                           ; 4 bytes @ 0x18
  6490   000519                     	ds	2
  6491   00051B                     ??_pad:
  6492                           
  6493                           ; 1 bytes @ 0x1A
  6494   00051B                     	ds	1
  6495   00051C                     pad@i:
  6496                           	callstack 0
  6497                           
  6498                           ; 2 bytes @ 0x1B
  6499   00051C                     	ds	1
  6500   00051D                     ??___flmul:
  6501                           
  6502                           ; 1 bytes @ 0x1C
  6503   00051D                     	ds	4
  6504   000521                     ___flmul@sign:
  6505                           	callstack 0
  6506                           
  6507                           ; 1 bytes @ 0x20
  6508   000521                     	ds	1
  6509   000522                     ___flmul@grs:
  6510                           	callstack 0
  6511                           
  6512                           ; 4 bytes @ 0x21
  6513   000522                     	ds	4
  6514   000526                     ___flmul@aexp:
  6515                           	callstack 0
  6516                           
  6517                           ; 1 bytes @ 0x25
  6518   000526                     	ds	1
  6519   000527                     ___flmul@bexp:
  6520                           	callstack 0
  6521                           
  6522                           ; 1 bytes @ 0x26
  6523   000527                     	ds	1
  6524   000528                     ___flmul@prod:
  6525                           	callstack 0
  6526                           
  6527                           ; 4 bytes @ 0x27
  6528   000528                     	ds	4
  6529   00052C                     ___flmul@temp:
  6530                           	callstack 0
  6531                           
  6532                           ; 2 bytes @ 0x2B
  6533   00052C                     	ds	2
  6534   00052E                     ?___fldiv:
  6535                           	callstack 0
  6536   00052E                     ?___flsub:
  6537                           	callstack 0
  6538   00052E                     ___flge@ff1:
  6539                           	callstack 0
  6540   00052E                     ___flsub@b:
  6541                           	callstack 0
  6542   00052E                     ___fldiv@b:
  6543                           	callstack 0
  6544                           
  6545                           ; 4 bytes @ 0x2D
  6546   00052E                     	ds	4
  6547   000532                     ___flge@ff2:
  6548                           	callstack 0
  6549   000532                     ___flsub@a:
  6550                           	callstack 0
  6551   000532                     ___fldiv@a:
  6552                           	callstack 0
  6553                           
  6554                           ; 4 bytes @ 0x31
  6555   000532                     	ds	4
  6556   000536                     ??___fldiv:
  6557   000536                     ??___flge:
  6558                           
  6559                           ; 1 bytes @ 0x35
  6560   000536                     	ds	4
  6561   00053A                     ___fldiv@rem:
  6562                           	callstack 0
  6563                           
  6564                           ; 4 bytes @ 0x39
  6565   00053A                     	ds	4
  6566   00053E                     ___fldiv@sign:
  6567                           	callstack 0
  6568                           
  6569                           ; 1 bytes @ 0x3D
  6570   00053E                     	ds	1
  6571   00053F                     ___fldiv@new_exp:
  6572                           	callstack 0
  6573                           
  6574                           ; 2 bytes @ 0x3E
  6575   00053F                     	ds	2
  6576   000541                     ___fldiv@grs:
  6577                           	callstack 0
  6578                           
  6579                           ; 4 bytes @ 0x40
  6580   000541                     	ds	4
  6581   000545                     ___fldiv@bexp:
  6582                           	callstack 0
  6583                           
  6584                           ; 1 bytes @ 0x44
  6585   000545                     	ds	1
  6586   000546                     ___fldiv@aexp:
  6587                           	callstack 0
  6588                           
  6589                           ; 1 bytes @ 0x45
  6590   000546                     	ds	1
  6591   000547                     ?_floorf:
  6592                           	callstack 0
  6593   000547                     floorf@x:
  6594                           	callstack 0
  6595                           
  6596                           ; 4 bytes @ 0x46
  6597   000547                     	ds	4
  6598   00054B                     ??_floorf:
  6599                           
  6600                           ; 1 bytes @ 0x4A
  6601   00054B                     	ds	6
  6602   000551                     floorf@m:
  6603                           	callstack 0
  6604                           
  6605                           ; 4 bytes @ 0x50
  6606   000551                     	ds	4
  6607   000555                     floorf@e:
  6608                           	callstack 0
  6609                           
  6610                           ; 2 bytes @ 0x54
  6611   000555                     	ds	2
  6612   000557                     floorf@u:
  6613                           	callstack 0
  6614                           
  6615                           ; 4 bytes @ 0x56
  6616   000557                     	ds	4
  6617   00055B                     vfprintf@cfmt:
  6618                           	callstack 0
  6619   00055B                     
  6620                           ; 1 bytes @ 0x5A
  6621   00055B                     	ds	1
  6622   00055C                     
  6623                           ; 1 bytes @ 0x5B
  6624 ;;
  6625 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  6626 ;;
  6627 ;; *************** function _main *****************
  6628 ;; Defined at:
  6629 ;;		line 46 in file "main.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;		None
  6632 ;; Auto vars:     Size  Location     Type
  6633 ;;  context2        1   82[BANK5 ] enum E17014
  6634 ;;  context1        1   81[BANK5 ] enum E17014
  6635 ;; Return value:  Size  Location     Type
  6636 ;;                  2  312[None  ] int 
  6637 ;; Registers used:
  6638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6639 ;; Tracked objects:
  6640 ;;		On entry : 0/0
  6641 ;;		On exit  : 0/0
  6642 ;;		Unchanged: 0/0
  6643 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6645 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6646 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6647 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6648 ;;Total ram usage:        8 bytes
  6649 ;; Hardware stack levels required when called: 13
  6650 ;; This function calls:
  6651 ;;		_ADC_ContextSelect
  6652 ;;		_ADC_ConversionResultGet
  6653 ;;		_ADC_ConversionStart
  6654 ;;		_ADC_IsConversionDone
  6655 ;;		_SYSTEM_Initialize
  6656 ;;		___fldiv
  6657 ;;		___flmul
  6658 ;;		___xxtofl
  6659 ;;		_printf
  6660 ;; This function is called by:
  6661 ;;		Startup code after reset
  6662 ;; This function uses a non-reentrant model
  6663 ;;
  6664                           
  6665                           	psect	text0
  6666   00328A                     __ptext0:
  6667                           	callstack 0
  6668   00328A                     _main:
  6669                           	callstack 114
  6670   00328A                     
  6671                           ;main.c: 48:     SYSTEM_Initialize();
  6672   00328A  ECD9  F01F         	call	_SYSTEM_Initialize	;wreg free
  6673   00328E                     
  6674                           ;main.c: 54:     (INTCON0bits.GIE = 1);
  6675   00328E  8ED6               	bsf	214,7,c	;volatile
  6676   003290                     
  6677                           ;main.c: 58:     adc_context_t context1;;main.c: 59:     adc_context_t context2;;main.c:
      +                           60:     context1 = context_1;
  6678   003290  0105               	movlb	5	; () banked
  6679   003292  6BB1               	clrf	main@context1& (0+255),b
  6680   003294                     
  6681                           ; BSR set to: 5
  6682                           ;main.c: 61:     context2 = context_2;
  6683   003294  0E01               	movlw	1
  6684   003296  6FB2               	movwf	main@context2& (0+255),b
  6685   003298                     l5415:
  6686                           
  6687                           ;main.c: 64:     {;main.c: 65:         ADC_ContextSelect(context1);
  6688   003298  0105               	movlb	5	; () banked
  6689   00329A  51B1               	movf	main@context1& (0+255),w,b
  6690   00329C  EC12  F020         	call	_ADC_ContextSelect
  6691   0032A0                     
  6692                           ;main.c: 66:         ADC_ConversionStart();
  6693   0032A0  EC16  F020         	call	_ADC_ConversionStart	;wreg free
  6694   0032A4                     l5419:
  6695   0032A4  ECE4  F01F         	call	_ADC_IsConversionDone	;wreg free
  6696   0032A8  0900               	iorlw	0
  6697   0032AA  B4D8               	btfsc	status,2,c
  6698   0032AC  EF5A  F019         	goto	u4581
  6699   0032B0  EF5C  F019         	goto	u4580
  6700   0032B4                     u4581:
  6701   0032B4  EF52  F019         	goto	l5419
  6702   0032B8                     u4580:
  6703   0032B8                     
  6704                           ;main.c: 68:         printf("pompa1: %.2f\n", ((float)ADC_ConversionResultGet() * 3.3 / 
      +                          4018));
  6705   0032B8  0E33               	movlw	51
  6706   0032BA  6E19               	movwf	___flmul@a^(0+1280),c
  6707   0032BC  0E33               	movlw	51
  6708   0032BE  6E1A               	movwf	(___flmul@a+1)^(0+1280),c
  6709   0032C0  0E53               	movlw	83
  6710   0032C2  6E1B               	movwf	(___flmul@a+2)^(0+1280),c
  6711   0032C4  0E40               	movlw	64
  6712   0032C6  6E1C               	movwf	(___flmul@a+3)^(0+1280),c
  6713   0032C8  ECC0  F01F         	call	_ADC_ConversionResultGet	;wreg free
  6714   0032CC  C503  F507         	movff	?_ADC_ConversionResultGet,___xxtofl@val
  6715   0032D0  C504  F508         	movff	?_ADC_ConversionResultGet+1,___xxtofl@val+1
  6716   0032D4  0E00               	movlw	0
  6717   0032D6  BE08               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
  6718   0032D8  0EFF               	movlw	-1
  6719   0032DA  6E09               	movwf	(___xxtofl@val+2)^(0+1280),c
  6720   0032DC  6E0A               	movwf	(___xxtofl@val+3)^(0+1280),c
  6721   0032DE  0E01               	movlw	1
  6722   0032E0  EC6B  F018         	call	___xxtofl
  6723   0032E4  C507  F515         	movff	?___xxtofl,___flmul@b
  6724   0032E8  C508  F516         	movff	?___xxtofl+1,___flmul@b+1
  6725   0032EC  C509  F517         	movff	?___xxtofl+2,___flmul@b+2
  6726   0032F0  C50A  F518         	movff	?___xxtofl+3,___flmul@b+3
  6727   0032F4  EC7C  F012         	call	___flmul	;wreg free
  6728   0032F8  C515  F52E         	movff	?___flmul,___fldiv@b
  6729   0032FC  C516  F52F         	movff	?___flmul+1,___fldiv@b+1
  6730   003300  C517  F530         	movff	?___flmul+2,___fldiv@b+2
  6731   003304  C518  F531         	movff	?___flmul+3,___fldiv@b+3
  6732   003308  0E00               	movlw	0
  6733   00330A  6E32               	movwf	___fldiv@a^(0+1280),c
  6734   00330C  0E20               	movlw	32
  6735   00330E  6E33               	movwf	(___fldiv@a+1)^(0+1280),c
  6736   003310  0E7B               	movlw	123
  6737   003312  6E34               	movwf	(___fldiv@a+2)^(0+1280),c
  6738   003314  0E45               	movlw	69
  6739   003316  6E35               	movwf	(___fldiv@a+3)^(0+1280),c
  6740   003318  EC8F  F014         	call	___fldiv	;wreg free
  6741   00331C  C52E  F5B3         	movff	?___fldiv,_main$2808
  6742   003320  C52F  F5B4         	movff	?___fldiv+1,_main$2808+1
  6743   003324  C530  F5B5         	movff	?___fldiv+2,_main$2808+2
  6744   003328  C531  F5B6         	movff	?___fldiv+3,_main$2808+3
  6745   00332C                     
  6746                           ;main.c: 68:         printf("pompa1: %.2f\n", ((float)ADC_ConversionResultGet() * 3.3 / 
      +                          4018));
  6747   00332C  0E31               	movlw	low STR_1
  6748   00332E  0105               	movlb	5	; () banked
  6749   003330  6FA8               	movwf	printf@fmt& (0+255),b
  6750   003332  C5B3  F5A9         	movff	_main$2808,?_printf+1
  6751   003336  C5B4  F5AA         	movff	_main$2808+1,?_printf+2
  6752   00333A  C5B5  F5AB         	movff	_main$2808+2,?_printf+3
  6753   00333E  C5B6  F5AC         	movff	_main$2808+3,?_printf+4
  6754   003342  EC75  F01F         	call	_printf	;wreg free
  6755   003346                     
  6756                           ;main.c: 70:         ADC_ContextSelect(context2);
  6757   003346  0105               	movlb	5	; () banked
  6758   003348  51B2               	movf	main@context2& (0+255),w,b
  6759   00334A  EC12  F020         	call	_ADC_ContextSelect
  6760   00334E                     
  6761                           ;main.c: 71:         ADC_ConversionStart();
  6762   00334E  EC16  F020         	call	_ADC_ConversionStart	;wreg free
  6763   003352                     l5429:
  6764   003352  ECE4  F01F         	call	_ADC_IsConversionDone	;wreg free
  6765   003356  0900               	iorlw	0
  6766   003358  B4D8               	btfsc	status,2,c
  6767   00335A  EFB1  F019         	goto	u4591
  6768   00335E  EFB3  F019         	goto	u4590
  6769   003362                     u4591:
  6770   003362  EFA9  F019         	goto	l5429
  6771   003366                     u4590:
  6772   003366                     
  6773                           ;main.c: 73:         printf("pompa2: %.2f\n", ((float)ADC_ConversionResultGet() *3.3 / 4
      +                          018));
  6774   003366  0E33               	movlw	51
  6775   003368  6E19               	movwf	___flmul@a^(0+1280),c
  6776   00336A  0E33               	movlw	51
  6777   00336C  6E1A               	movwf	(___flmul@a+1)^(0+1280),c
  6778   00336E  0E53               	movlw	83
  6779   003370  6E1B               	movwf	(___flmul@a+2)^(0+1280),c
  6780   003372  0E40               	movlw	64
  6781   003374  6E1C               	movwf	(___flmul@a+3)^(0+1280),c
  6782   003376  ECC0  F01F         	call	_ADC_ConversionResultGet	;wreg free
  6783   00337A  C503  F507         	movff	?_ADC_ConversionResultGet,___xxtofl@val
  6784   00337E  C504  F508         	movff	?_ADC_ConversionResultGet+1,___xxtofl@val+1
  6785   003382  0E00               	movlw	0
  6786   003384  BE08               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
  6787   003386  0EFF               	movlw	-1
  6788   003388  6E09               	movwf	(___xxtofl@val+2)^(0+1280),c
  6789   00338A  6E0A               	movwf	(___xxtofl@val+3)^(0+1280),c
  6790   00338C  0E01               	movlw	1
  6791   00338E  EC6B  F018         	call	___xxtofl
  6792   003392  C507  F515         	movff	?___xxtofl,___flmul@b
  6793   003396  C508  F516         	movff	?___xxtofl+1,___flmul@b+1
  6794   00339A  C509  F517         	movff	?___xxtofl+2,___flmul@b+2
  6795   00339E  C50A  F518         	movff	?___xxtofl+3,___flmul@b+3
  6796   0033A2  EC7C  F012         	call	___flmul	;wreg free
  6797   0033A6  C515  F52E         	movff	?___flmul,___fldiv@b
  6798   0033AA  C516  F52F         	movff	?___flmul+1,___fldiv@b+1
  6799   0033AE  C517  F530         	movff	?___flmul+2,___fldiv@b+2
  6800   0033B2  C518  F531         	movff	?___flmul+3,___fldiv@b+3
  6801   0033B6  0E00               	movlw	0
  6802   0033B8  6E32               	movwf	___fldiv@a^(0+1280),c
  6803   0033BA  0E20               	movlw	32
  6804   0033BC  6E33               	movwf	(___fldiv@a+1)^(0+1280),c
  6805   0033BE  0E7B               	movlw	123
  6806   0033C0  6E34               	movwf	(___fldiv@a+2)^(0+1280),c
  6807   0033C2  0E45               	movlw	69
  6808   0033C4  6E35               	movwf	(___fldiv@a+3)^(0+1280),c
  6809   0033C6  EC8F  F014         	call	___fldiv	;wreg free
  6810   0033CA  C52E  F5B3         	movff	?___fldiv,_main$2808
  6811   0033CE  C52F  F5B4         	movff	?___fldiv+1,_main$2808+1
  6812   0033D2  C530  F5B5         	movff	?___fldiv+2,_main$2808+2
  6813   0033D6  C531  F5B6         	movff	?___fldiv+3,_main$2808+3
  6814   0033DA                     
  6815                           ;main.c: 73:         printf("pompa2: %.2f\n", ((float)ADC_ConversionResultGet() *3.3 / 4
      +                          018));
  6816   0033DA  0E3F               	movlw	low STR_2
  6817   0033DC  0105               	movlb	5	; () banked
  6818   0033DE  6FA8               	movwf	printf@fmt& (0+255),b
  6819   0033E0  C5B3  F5A9         	movff	_main$2808,?_printf+1
  6820   0033E4  C5B4  F5AA         	movff	_main$2808+1,?_printf+2
  6821   0033E8  C5B5  F5AB         	movff	_main$2808+2,?_printf+3
  6822   0033EC  C5B6  F5AC         	movff	_main$2808+3,?_printf+4
  6823   0033F0  EC75  F01F         	call	_printf	;wreg free
  6824   0033F4                     
  6825                           ;main.c: 75:         _delay((unsigned long)((3000)*(64000000U/4000.0)));
  6826   0033F4  0EF4               	movlw	244
  6827   0033F6  0105               	movlb	5	; () banked
  6828   0033F8  6FB0               	movwf	(??_main+1)& (0+255),b
  6829   0033FA  0E82               	movlw	130
  6830   0033FC  6FAF               	movwf	??_main& (0+255),b
  6831   0033FE  0E05               	movlw	5
  6832   003400                     u4607:
  6833   003400  2EE8               	decfsz	wreg,f,c
  6834   003402  D7FE               	bra	u4607
  6835   003404  2FAF               	decfsz	??_main& (0+255),f,b
  6836   003406  D7FC               	bra	u4607
  6837   003408  2FB0               	decfsz	(??_main+1)& (0+255),f,b
  6838   00340A  D7FA               	bra	u4607
  6839   00340C  EF4C  F019         	goto	l5415
  6840   003410  EF0D  F000         	goto	start
  6841   003414                     __end_of_main:
  6842                           	callstack 0
  6843                           
  6844 ;; *************** function _printf *****************
  6845 ;; Defined at:
  6846 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\printf.c"
  6847 ;; Parameters:    Size  Location     Type
  6848 ;;  fmt             1   72[BANK5 ] PTR const unsigned char 
  6849 ;;		 -> STR_2(14), STR_1(14), 
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;  ap              2   77[BANK5 ] PTR void [1]
  6852 ;;		 -> ?_printf(2), 
  6853 ;;  ret             2    0        int 
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  2   72[BANK5 ] int 
  6856 ;; Registers used:
  6857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6863 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6864 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6866 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6867 ;;Total ram usage:        7 bytes
  6868 ;; Hardware stack levels used: 1
  6869 ;; Hardware stack levels required when called: 12
  6870 ;; This function calls:
  6871 ;;		_vfprintf
  6872 ;; This function is called by:
  6873 ;;		_main
  6874 ;; This function uses a non-reentrant model
  6875 ;;
  6876                           
  6877                           	psect	text1
  6878   003EEA                     __ptext1:
  6879                           	callstack 0
  6880   003EEA                     _printf:
  6881                           	callstack 114
  6882   003EEA  0EA9               	movlw	low (?_printf+1)
  6883   003EEC  0105               	movlb	5	; () banked
  6884   003EEE  6FAD               	movwf	printf@ap& (0+255),b
  6885   003EF0  0E05               	movlw	high (?_printf+1)
  6886   003EF2  6FAE               	movwf	(printf@ap+1)& (0+255),b
  6887   003EF4                     
  6888                           ; BSR set to: 5
  6889   003EF4  0E00               	movlw	0
  6890   003EF6  6FA3               	movwf	vfprintf@fp& (0+255),b
  6891   003EF8  0E00               	movlw	0
  6892   003EFA  6FA4               	movwf	(vfprintf@fp+1)& (0+255),b
  6893   003EFC  C5A8  F5A5         	movff	printf@fmt,vfprintf@fmt
  6894   003F00  0EAD               	movlw	low printf@ap
  6895   003F02  6FA6               	movwf	vfprintf@ap& (0+255),b
  6896   003F04  0E05               	movlw	high printf@ap
  6897   003F06  6FA7               	movwf	(vfprintf@ap+1)& (0+255),b
  6898   003F08  EC47  F01E         	call	_vfprintf	;wreg free
  6899   003F0C  0012               	return		;funcret
  6900   003F0E                     __end_of_printf:
  6901                           	callstack 0
  6902                           
  6903 ;; *************** function _vfprintf *****************
  6904 ;; Defined at:
  6905 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  6906 ;; Parameters:    Size  Location     Type
  6907 ;;  fp              2   67[BANK5 ] PTR struct _IO_FILE
  6908 ;;		 -> NULL(0), 
  6909 ;;  fmt             1   69[BANK5 ] PTR const unsigned char 
  6910 ;;		 -> STR_2(14), STR_1(14), 
  6911 ;;  ap              2   70[BANK5 ] PTR PTR void 
  6912 ;;		 -> printf@ap(2), 
  6913 ;; Auto vars:     Size  Location     Type
  6914 ;;  cfmt            1   90[COMRAM] PTR unsigned char 
  6915 ;;		 -> STR_2(14), STR_1(14), 
  6916 ;; Return value:  Size  Location     Type
  6917 ;;                  2   67[BANK5 ] int 
  6918 ;; Registers used:
  6919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6920 ;; Tracked objects:
  6921 ;;		On entry : 0/0
  6922 ;;		On exit  : 0/0
  6923 ;;		Unchanged: 0/0
  6924 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6925 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6926 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6928 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6929 ;;Total ram usage:        6 bytes
  6930 ;; Hardware stack levels used: 1
  6931 ;; Hardware stack levels required when called: 11
  6932 ;; This function calls:
  6933 ;;		_vfpfcnvrt
  6934 ;; This function is called by:
  6935 ;;		_printf
  6936 ;; This function uses a non-reentrant model
  6937 ;;
  6938                           
  6939                           	psect	text2
  6940   003C8E                     __ptext2:
  6941                           	callstack 0
  6942   003C8E                     _vfprintf:
  6943                           	callstack 114
  6944   003C8E                     
  6945                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  6946   003C8E  C5A5  F55B         	movff	vfprintf@fmt,vfprintf@cfmt
  6947                           
  6948                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6949   003C92  EF5A  F01E         	goto	l5395
  6950   003C96                     l5393:
  6951                           
  6952                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  6953   003C96  C5A3  F595         	movff	vfprintf@fp,vfpfcnvrt@fp
  6954   003C9A  C5A4  F596         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6955   003C9E  0E5B               	movlw	low vfprintf@cfmt
  6956   003CA0  0105               	movlb	5	; () banked
  6957   003CA2  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  6958   003CA4  0E05               	movlw	high vfprintf@cfmt
  6959   003CA6  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  6960   003CA8  C5A6  F599         	movff	vfprintf@ap,vfpfcnvrt@ap
  6961   003CAC  C5A7  F59A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6962   003CB0  EC57  F016         	call	_vfpfcnvrt	;wreg free
  6963   003CB4                     l5395:
  6964                           
  6965                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6966   003CB4  C55B  F4F6         	movff	vfprintf@cfmt,tblptrl
  6967   003CB8                     	if	1	;There is more than 1 active tblptr byte
  6968   003CB8  0E16               	movlw	high __smallconst
  6969   003CBA  6EF7               	movwf	tblptrh,c
  6970   003CBC                     	endif
  6971   003CBC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6972   003CBC  6AF8               	clrf	tblptru,c
  6973   003CBE                     	endif
  6974   003CBE                     	if	0	;tblptru may be non-zero
  6975   003CBE                     	endif
  6976   003CBE  0008               	tblrd		*
  6977   003CC0  50F5               	movf	tablat,w,c
  6978   003CC2  0900               	iorlw	0
  6979   003CC4  A4D8               	btfss	status,2,c
  6980   003CC6  EF67  F01E         	goto	u4571
  6981   003CCA  EF69  F01E         	goto	u4570
  6982   003CCE                     u4571:
  6983   003CCE  EF4B  F01E         	goto	l5393
  6984   003CD2                     u4570:
  6985   003CD2                     
  6986                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  6987   003CD2  0E00               	movlw	0
  6988   003CD4  0105               	movlb	5	; () banked
  6989   003CD6  6FA4               	movwf	(?_vfprintf+1)& (0+255),b
  6990   003CD8  0E00               	movlw	0
  6991   003CDA  6FA3               	movwf	?_vfprintf& (0+255),b
  6992   003CDC                     
  6993                           ; BSR set to: 5
  6994   003CDC  0012               	return		;funcret
  6995   003CDE                     __end_of_vfprintf:
  6996                           	callstack 0
  6997                           
  6998 ;; *************** function _vfpfcnvrt *****************
  6999 ;; Defined at:
  7000 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;  fp              2   53[BANK5 ] PTR struct _IO_FILE
  7003 ;;		 -> NULL(0), 
  7004 ;;  fmt             2   55[BANK5 ] PTR PTR unsigned char 
  7005 ;;		 -> vfprintf@cfmt(1), 
  7006 ;;  ap              2   57[BANK5 ] PTR PTR void 
  7007 ;;		 -> printf@ap(2), 
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;  convarg         4   61[BANK5 ] struct .
  7010 ;;  cp              1   66[BANK5 ] PTR unsigned char 
  7011 ;;		 -> STR_2(14), STR_1(14), 
  7012 ;;  c               1   65[BANK5 ] unsigned char 
  7013 ;;  done            1    0        _Bool 
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  1    wreg      void 
  7016 ;; Registers used:
  7017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  7023 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7024 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7025 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7026 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7027 ;;Total ram usage:       14 bytes
  7028 ;; Hardware stack levels used: 1
  7029 ;; Hardware stack levels required when called: 10
  7030 ;; This function calls:
  7031 ;;		_efgtoa
  7032 ;;		_fputc
  7033 ;;		_read_prec_or_width
  7034 ;; This function is called by:
  7035 ;;		_vfprintf
  7036 ;; This function uses a non-reentrant model
  7037 ;;
  7038                           
  7039                           	psect	text3
  7040   002CAE                     __ptext3:
  7041                           	callstack 0
  7042   002CAE                     _vfpfcnvrt:
  7043                           	callstack 114
  7044   002CAE                     
  7045                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  7046   002CAE  C597  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  7047   002CB2  C598  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7048   002CB6  C4DF F4F6          	movff	indf2,tblptrl
  7049   002CBA                     	if	1	;There is more than 1 active tblptr byte
  7050   002CBA  0E16               	movlw	high __smallconst
  7051   002CBC  6EF7               	movwf	tblptrh,c
  7052   002CBE                     	endif
  7053   002CBE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7054   002CBE  6AF8               	clrf	tblptru,c
  7055   002CC0                     	endif
  7056   002CC0                     	if	0	;tblptru may be non-zero
  7057   002CC0                     	endif
  7058   002CC0  0008               	tblrd		*
  7059   002CC2  50F5               	movf	tablat,w,c
  7060   002CC4  0A25               	xorlw	37
  7061   002CC6  A4D8               	btfss	status,2,c
  7062   002CC8  EF68  F016         	goto	u4541
  7063   002CCC  EF6A  F016         	goto	u4540
  7064   002CD0                     u4541:
  7065   002CD0  EF4C  F017         	goto	l5385
  7066   002CD4                     u4540:
  7067   002CD4                     
  7068                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  7069   002CD4  C597  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  7070   002CD8  C598  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7071   002CDC  2ADF               	incf	indf2,f,c
  7072   002CDE                     
  7073                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  7074   002CDE  0E00               	movlw	0
  7075   002CE0  0105               	movlb	5	; () banked
  7076   002CE2  6FC0               	movwf	(_width+1)& (0+255),b
  7077   002CE4  0E00               	movlw	0
  7078   002CE6  6FBF               	movwf	_width& (0+255),b
  7079   002CE8  C5BF  F5D9         	movff	_width,_flags
  7080   002CEC                     
  7081                           ; BSR set to: 5
  7082                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  7083   002CEC  69C1               	setf	_prec& (0+255),b
  7084   002CEE  69C2               	setf	(_prec+1)& (0+255),b
  7085   002CF0                     
  7086                           ; BSR set to: 5
  7087                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  7088   002CF0  C597  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  7089   002CF4  C598  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7090   002CF8  C4DF F4F6          	movff	indf2,tblptrl
  7091   002CFC                     	if	1	;There is more than 1 active tblptr byte
  7092   002CFC  0E16               	movlw	high __smallconst
  7093   002CFE  6EF7               	movwf	tblptrh,c
  7094   002D00                     	endif
  7095   002D00                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7096   002D00  6AF8               	clrf	tblptru,c
  7097   002D02                     	endif
  7098   002D02                     	if	0	;tblptru may be non-zero
  7099   002D02                     	endif
  7100   002D02  0008               	tblrd		*
  7101   002D04  50F5               	movf	tablat,w,c
  7102   002D06  0A2E               	xorlw	46
  7103   002D08  A4D8               	btfss	status,2,c
  7104   002D0A  EF89  F016         	goto	u4551
  7105   002D0E  EF8B  F016         	goto	u4550
  7106   002D12                     u4551:
  7107   002D12  EF9E  F016         	goto	l5349
  7108   002D16                     u4550:
  7109   002D16                     
  7110                           ; BSR set to: 5
  7111                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  7112   002D16  C597  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  7113   002D1A  C598  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7114   002D1E  2ADF               	incf	indf2,f,c
  7115   002D20                     
  7116                           ; BSR set to: 5
  7117                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  7118   002D20  C597  F503         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  7119   002D24  C598  F504         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  7120   002D28  C599  F505         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  7121   002D2C  C59A  F506         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  7122   002D30  EC5B  F01C         	call	_read_prec_or_width	;wreg free
  7123   002D34  C503  F5C1         	movff	?_read_prec_or_width,_prec
  7124   002D38  C504  F5C2         	movff	?_read_prec_or_width+1,_prec+1
  7125   002D3C                     l5349:
  7126                           
  7127                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  7128   002D3C  C597  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  7129   002D40  C598  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7130   002D44  50DF               	movf	indf2,w,c
  7131   002D46  0105               	movlb	5	; () banked
  7132   002D48  6FA2               	movwf	vfpfcnvrt@cp& (0+255),b
  7133   002D4A                     
  7134                           ; BSR set to: 5
  7135                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  7136   002D4A  C5A2  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  7137   002D4E                     	if	1	;There is more than 1 active tblptr byte
  7138   002D4E  0E16               	movlw	high __smallconst
  7139   002D50  6EF7               	movwf	tblptrh,c
  7140   002D52                     	endif
  7141   002D52                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7142   002D52  6AF8               	clrf	tblptru,c
  7143   002D54                     	endif
  7144   002D54                     	if	0	;tblptru may be non-zero
  7145   002D54                     	endif
  7146   002D54  0008               	tblrd		*
  7147   002D56  C4F5 F5A1          	movff	tablat,vfpfcnvrt@c
  7148                           
  7149                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  7150   002D5A  EFB9  F016         	goto	l5359
  7151   002D5E                     l5353:
  7152                           
  7153                           ; BSR set to: 5
  7154                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  7155   002D5E  2BA2               	incf	vfpfcnvrt@cp& (0+255),f,b
  7156                           
  7157                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
  7158   002D60  EFC8  F016         	goto	l5361
  7159   002D64                     l5355:
  7160                           
  7161                           ; BSR set to: 5
  7162                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  7163   002D64  0E6C               	movlw	108
  7164   002D66  6FA1               	movwf	vfpfcnvrt@c& (0+255),b
  7165                           
  7166                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
  7167   002D68  EFC8  F016         	goto	l5361
  7168   002D6C                     l1653:
  7169                           
  7170                           ; BSR set to: 5
  7171                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  7172   002D6C  6BA1               	clrf	vfpfcnvrt@c& (0+255),b
  7173                           
  7174                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
  7175   002D6E  EFC8  F016         	goto	l5361
  7176   002D72                     l5359:
  7177                           
  7178                           ; BSR set to: 5
  7179   002D72  51A1               	movf	vfpfcnvrt@c& (0+255),w,b
  7180                           
  7181                           ; Switch size 1, requested type "simple"
  7182                           ; Number of cases is 3, Range of values is 76 to 108
  7183                           ; switch strategies available:
  7184                           ; Name         Instructions Cycles
  7185                           ; simple_byte           10     6 (average)
  7186                           ;	Chosen strategy is simple_byte
  7187   002D74  0A4C               	xorlw	76	; case 76
  7188   002D76  B4D8               	btfsc	status,2,c
  7189   002D78  EFAF  F016         	goto	l5353
  7190   002D7C  0A2A               	xorlw	42	; case 102
  7191   002D7E  B4D8               	btfsc	status,2,c
  7192   002D80  EFB2  F016         	goto	l5355
  7193   002D84  0A0A               	xorlw	10	; case 108
  7194   002D86  B4D8               	btfsc	status,2,c
  7195   002D88  EFAF  F016         	goto	l5353
  7196   002D8C  EFB6  F016         	goto	l1653
  7197   002D90                     l5361:
  7198                           
  7199                           ; BSR set to: 5
  7200   002D90  C5A2  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  7201   002D94                     	if	1	;There is more than 1 active tblptr byte
  7202   002D94  0E16               	movlw	high __smallconst
  7203   002D96  6EF7               	movwf	tblptrh,c
  7204   002D98                     	endif
  7205   002D98                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7206   002D98  6AF8               	clrf	tblptru,c
  7207   002D9A                     	endif
  7208   002D9A                     	if	0	;tblptru may be non-zero
  7209   002D9A                     	endif
  7210   002D9A  0008               	tblrd		*
  7211   002D9C  50F5               	movf	tablat,w,c
  7212   002D9E  0A66               	xorlw	102
  7213   002DA0  A4D8               	btfss	status,2,c
  7214   002DA2  EFD5  F016         	goto	u4561
  7215   002DA6  EFD7  F016         	goto	u4560
  7216   002DAA                     u4561:
  7217   002DAA  EF45  F017         	goto	l5381
  7218   002DAE                     u4560:
  7219   002DAE  EF0D  F017         	goto	l5369
  7220   002DB2                     l5363:
  7221                           
  7222                           ; BSR set to: 5
  7223                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7224   002DB2  C599  F4D9         	movff	vfpfcnvrt@ap,fsr2l
  7225   002DB6  C59A  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
  7226   002DBA  C4DF F59B          	movff	indf2,??_vfpfcnvrt
  7227   002DBE  0E04               	movlw	4
  7228   002DC0  26DE               	addwf	postinc2,f,c
  7229   002DC2  C4DF F59C          	movff	indf2,??_vfpfcnvrt+1
  7230   002DC6  0E00               	movlw	0
  7231   002DC8  22DD               	addwfc	postdec2,f,c
  7232   002DCA  C59B  F4D9         	movff	??_vfpfcnvrt,fsr2l
  7233   002DCE  C59C  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
  7234   002DD2  C4DE F59D          	movff	postinc2,vfpfcnvrt@convarg
  7235   002DD6  C4DE F59E          	movff	postinc2,vfpfcnvrt@convarg+1
  7236   002DDA  C4DE F59F          	movff	postinc2,vfpfcnvrt@convarg+2
  7237   002DDE  C4DE F5A0          	movff	postinc2,vfpfcnvrt@convarg+3
  7238                           
  7239                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
  7240   002DE2  EF18  F017         	goto	l5371
  7241   002DE6                     l5365:
  7242                           
  7243                           ; BSR set to: 5
  7244                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  7245   002DE6  C599  F4D9         	movff	vfpfcnvrt@ap,fsr2l
  7246   002DEA  C59A  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
  7247   002DEE  C4DF F59B          	movff	indf2,??_vfpfcnvrt
  7248   002DF2  0E04               	movlw	4
  7249   002DF4  26DE               	addwf	postinc2,f,c
  7250   002DF6  C4DF F59C          	movff	indf2,??_vfpfcnvrt+1
  7251   002DFA  0E00               	movlw	0
  7252   002DFC  22DD               	addwfc	postdec2,f,c
  7253   002DFE  C59B  F4D9         	movff	??_vfpfcnvrt,fsr2l
  7254   002E02  C59C  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
  7255   002E06  C4DE F59D          	movff	postinc2,vfpfcnvrt@convarg
  7256   002E0A  C4DE F59E          	movff	postinc2,vfpfcnvrt@convarg+1
  7257   002E0E  C4DE F59F          	movff	postinc2,vfpfcnvrt@convarg+2
  7258   002E12  C4DE F5A0          	movff	postinc2,vfpfcnvrt@convarg+3
  7259                           
  7260                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
  7261   002E16  EF18  F017         	goto	l5371
  7262   002E1A                     l5369:
  7263                           
  7264                           ; BSR set to: 5
  7265   002E1A  51A1               	movf	vfpfcnvrt@c& (0+255),w,b
  7266                           
  7267                           ; Switch size 1, requested type "simple"
  7268                           ; Number of cases is 2, Range of values is 76 to 108
  7269                           ; switch strategies available:
  7270                           ; Name         Instructions Cycles
  7271                           ; simple_byte            7     4 (average)
  7272                           ;	Chosen strategy is simple_byte
  7273   002E1C  0A4C               	xorlw	76	; case 76
  7274   002E1E  B4D8               	btfsc	status,2,c
  7275   002E20  EFF3  F016         	goto	l5365
  7276   002E24  0A20               	xorlw	32	; case 108
  7277   002E26  B4D8               	btfsc	status,2,c
  7278   002E28  EFD9  F016         	goto	l5363
  7279   002E2C  EF18  F017         	goto	l5371
  7280   002E30                     l5371:
  7281                           
  7282                           ; BSR set to: 5
  7283                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  7284   002E30  29A2               	incf	vfpfcnvrt@cp& (0+255),w,b
  7285   002E32  C597  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  7286   002E36  C598  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7287   002E3A  6EDF               	movwf	indf2,c
  7288                           
  7289                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  7290   002E3C  EF38  F017         	goto	l5379
  7291   002E40                     l5373:
  7292                           
  7293                           ; BSR set to: 5
  7294                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  7295   002E40  C595  F560         	movff	vfpfcnvrt@fp,efgtoa@fp
  7296   002E44  C596  F561         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  7297   002E48  C59D  F562         	movff	vfpfcnvrt@convarg,efgtoa@f
  7298   002E4C  C59E  F563         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  7299   002E50  C59F  F564         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  7300   002E54  C5A0  F565         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  7301   002E58  C5A2  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  7302   002E5C                     	if	1	;There is more than 1 active tblptr byte
  7303   002E5C  0E16               	movlw	high __smallconst
  7304   002E5E  6EF7               	movwf	tblptrh,c
  7305   002E60                     	endif
  7306   002E60                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7307   002E60  6AF8               	clrf	tblptru,c
  7308   002E62                     	endif
  7309   002E62                     	if	0	;tblptru may be non-zero
  7310   002E62                     	endif
  7311   002E62  0008               	tblrd		*
  7312   002E64  C4F5 F566          	movff	tablat,efgtoa@c
  7313   002E68  EC2B  F00B         	call	_efgtoa	;wreg free
  7314   002E6C  EF61  F017         	goto	l1663
  7315   002E70                     l5379:
  7316                           
  7317                           ; BSR set to: 5
  7318   002E70  C5A2  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  7319   002E74                     	if	1	;There is more than 1 active tblptr byte
  7320   002E74  0E16               	movlw	high __smallconst
  7321   002E76  6EF7               	movwf	tblptrh,c
  7322   002E78                     	endif
  7323   002E78                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7324   002E78  6AF8               	clrf	tblptru,c
  7325   002E7A                     	endif
  7326   002E7A                     	if	0	;tblptru may be non-zero
  7327   002E7A                     	endif
  7328   002E7A  0008               	tblrd		*
  7329   002E7C  50F5               	movf	tablat,w,c
  7330                           
  7331                           ; Switch size 1, requested type "simple"
  7332                           ; Number of cases is 1, Range of values is 102 to 102
  7333                           ; switch strategies available:
  7334                           ; Name         Instructions Cycles
  7335                           ; simple_byte            4     3 (average)
  7336                           ;	Chosen strategy is simple_byte
  7337   002E7E  0A66               	xorlw	102	; case 102
  7338   002E80  B4D8               	btfsc	status,2,c
  7339   002E82  EF20  F017         	goto	l5373
  7340   002E86  EF45  F017         	goto	l5381
  7341   002E8A                     l5381:
  7342                           
  7343                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  7344   002E8A  C597  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  7345   002E8E  C598  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7346   002E92  2ADF               	incf	indf2,f,c
  7347   002E94  EF61  F017         	goto	l1663
  7348   002E98                     l5385:
  7349                           
  7350                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  7351   002E98  C597  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  7352   002E9C  C598  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7353   002EA0  C4DF F4F6          	movff	indf2,tblptrl
  7354   002EA4                     	if	1	;There is more than 1 active tblptr byte
  7355   002EA4  0E16               	movlw	high __smallconst
  7356   002EA6  6EF7               	movwf	tblptrh,c
  7357   002EA8                     	endif
  7358   002EA8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7359   002EA8  6AF8               	clrf	tblptru,c
  7360   002EAA                     	endif
  7361   002EAA                     	if	0	;tblptru may be non-zero
  7362   002EAA                     	endif
  7363   002EAA  0008               	tblrd		*
  7364   002EAC  50F5               	movf	tablat,w,c
  7365   002EAE  6E05               	movwf	fputc@c^(0+1280),c
  7366   002EB0  6A06               	clrf	(fputc@c+1)^(0+1280),c
  7367   002EB2  C595  F507         	movff	vfpfcnvrt@fp,fputc@fp
  7368   002EB6  C596  F508         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7369   002EBA  ECF6  F01B         	call	_fputc	;wreg free
  7370   002EBE  EF45  F017         	goto	l5381
  7371   002EC2                     l1663:
  7372   002EC2  0012               	return		;funcret
  7373   002EC4                     __end_of_vfpfcnvrt:
  7374                           	callstack 0
  7375                           
  7376 ;; *************** function _read_prec_or_width *****************
  7377 ;; Defined at:
  7378 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  fmt             2    2[COMRAM] PTR PTR const unsigned c
  7381 ;;		 -> vfprintf@cfmt(1), 
  7382 ;;  ap              2    4[COMRAM] PTR PTR void [1]
  7383 ;;		 -> printf@ap(2), 
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;  c               1    8[COMRAM] unsigned char 
  7386 ;;  n               2    9[COMRAM] int 
  7387 ;; Return value:  Size  Location     Type
  7388 ;;                  2    2[COMRAM] int 
  7389 ;; Registers used:
  7390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  7391 ;; Tracked objects:
  7392 ;;		On entry : 0/0
  7393 ;;		On exit  : 0/0
  7394 ;;		Unchanged: 0/0
  7395 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  7396 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7397 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7398 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7399 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7400 ;;Total ram usage:        9 bytes
  7401 ;; Hardware stack levels used: 1
  7402 ;; Hardware stack levels required when called: 4
  7403 ;; This function calls:
  7404 ;;		Nothing
  7405 ;; This function is called by:
  7406 ;;		_vfpfcnvrt
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410                           	psect	text4
  7411   0038B6                     __ptext4:
  7412                           	callstack 0
  7413   0038B6                     _read_prec_or_width:
  7414                           	callstack 119
  7415   0038B6                     
  7416                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  7417   0038B6  0E00               	movlw	0
  7418   0038B8  6E0B               	movwf	(read_prec_or_width@n+1)^(0+1280),c
  7419   0038BA  0E00               	movlw	0
  7420   0038BC  6E0A               	movwf	read_prec_or_width@n^(0+1280),c
  7421   0038BE                     
  7422                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  7423   0038BE  C503  F4D9         	movff	read_prec_or_width@fmt,fsr2l
  7424   0038C2  C504  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
  7425   0038C6  C4DF F4F6          	movff	indf2,tblptrl
  7426   0038CA                     	if	1	;There is more than 1 active tblptr byte
  7427   0038CA  0E16               	movlw	high __smallconst
  7428   0038CC  6EF7               	movwf	tblptrh,c
  7429   0038CE                     	endif
  7430   0038CE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7431   0038CE  6AF8               	clrf	tblptru,c
  7432   0038D0                     	endif
  7433   0038D0                     	if	0	;tblptru may be non-zero
  7434   0038D0                     	endif
  7435   0038D0  0008               	tblrd		*
  7436   0038D2  50F5               	movf	tablat,w,c
  7437   0038D4  0A2A               	xorlw	42
  7438   0038D6  A4D8               	btfss	status,2,c
  7439   0038D8  EF70  F01C         	goto	u3731
  7440   0038DC  EF72  F01C         	goto	u3730
  7441   0038E0                     u3731:
  7442   0038E0  EFA1  F01C         	goto	l4541
  7443   0038E4                     u3730:
  7444   0038E4                     
  7445                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  7446   0038E4  C503  F4D9         	movff	read_prec_or_width@fmt,fsr2l
  7447   0038E8  C504  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
  7448   0038EC  2ADF               	incf	indf2,f,c
  7449   0038EE                     
  7450                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  7451   0038EE  C505  F4D9         	movff	read_prec_or_width@ap,fsr2l
  7452   0038F2  C506  F4DA         	movff	read_prec_or_width@ap+1,fsr2h
  7453   0038F6  C4DF F507          	movff	indf2,??_read_prec_or_width
  7454   0038FA  0E02               	movlw	2
  7455   0038FC  26DE               	addwf	postinc2,f,c
  7456   0038FE  C4DF F508          	movff	indf2,??_read_prec_or_width+1
  7457   003902  0E00               	movlw	0
  7458   003904  22DD               	addwfc	postdec2,f,c
  7459   003906  C507  F4D9         	movff	??_read_prec_or_width,fsr2l
  7460   00390A  C508  F4DA         	movff	??_read_prec_or_width+1,fsr2h
  7461   00390E  C4DE F50A          	movff	postinc2,read_prec_or_width@n
  7462   003912  C4DD F50B          	movff	postdec2,read_prec_or_width@n+1
  7463                           
  7464                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  7465   003916  EFB6  F01C         	goto	l1639
  7466   00391A                     l4537:
  7467                           
  7468                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  7469   00391A  0E0A               	movlw	10
  7470   00391C  020A               	mulwf	read_prec_or_width@n^(0+1280),c
  7471   00391E  C4F3 F507          	movff	prodl,??_read_prec_or_width
  7472   003922  C4F4 F508          	movff	prodh,??_read_prec_or_width+1
  7473   003926  020B               	mulwf	(read_prec_or_width@n+1)^(0+1280),c
  7474   003928  50F3               	movf	prodl,w,c
  7475   00392A  2608               	addwf	(??_read_prec_or_width+1)^(0+1280),f,c
  7476   00392C  5009               	movf	read_prec_or_width@c^(0+1280),w,c
  7477   00392E  2407               	addwf	??_read_prec_or_width^(0+1280),w,c
  7478   003930  6E0A               	movwf	read_prec_or_width@n^(0+1280),c
  7479   003932  0E00               	movlw	0
  7480   003934  2008               	addwfc	(??_read_prec_or_width+1)^(0+1280),w,c
  7481   003936  6E0B               	movwf	(read_prec_or_width@n+1)^(0+1280),c
  7482   003938                     
  7483                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  7484   003938  C503  F4D9         	movff	read_prec_or_width@fmt,fsr2l
  7485   00393C  C504  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
  7486   003940  2ADF               	incf	indf2,f,c
  7487   003942                     l4541:
  7488                           
  7489                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  7490   003942  C503  F4D9         	movff	read_prec_or_width@fmt,fsr2l
  7491   003946  C504  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
  7492   00394A  C4DF F4F6          	movff	indf2,tblptrl
  7493   00394E                     	if	1	;There is more than 1 active tblptr byte
  7494   00394E  0E16               	movlw	high __smallconst
  7495   003950  6EF7               	movwf	tblptrh,c
  7496   003952                     	endif
  7497   003952                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7498   003952  6AF8               	clrf	tblptru,c
  7499   003954                     	endif
  7500   003954                     	if	0	;tblptru may be non-zero
  7501   003954                     	endif
  7502   003954  0008               	tblrd		*
  7503   003956  50F5               	movf	tablat,w,c
  7504   003958  0FD0               	addlw	208
  7505   00395A  6E09               	movwf	read_prec_or_width@c^(0+1280),c
  7506   00395C  0E09               	movlw	9
  7507   00395E  6409               	cpfsgt	read_prec_or_width@c^(0+1280),c
  7508   003960  EFB4  F01C         	goto	u3741
  7509   003964  EFB6  F01C         	goto	u3740
  7510   003968                     u3741:
  7511   003968  EF8D  F01C         	goto	l4537
  7512   00396C                     u3740:
  7513   00396C                     l1639:
  7514                           
  7515                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  7516   00396C  C50A  F503         	movff	read_prec_or_width@n,?_read_prec_or_width
  7517   003970  C50B  F504         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  7518   003974  0012               	return		;funcret
  7519   003976                     __end_of_read_prec_or_width:
  7520                           	callstack 0
  7521                           
  7522 ;; *************** function _efgtoa *****************
  7523 ;; Defined at:
  7524 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  7525 ;; Parameters:    Size  Location     Type
  7526 ;;  fp              2    0[BANK5 ] PTR struct _IO_FILE
  7527 ;;		 -> NULL(0), 
  7528 ;;  f               4    2[BANK5 ] PTR struct _IO_FILE
  7529 ;;  c               1    6[BANK5 ] unsigned char 
  7530 ;; Auto vars:     Size  Location     Type
  7531 ;;  u               4   49[BANK5 ] struct flui
  7532 ;;  g               4   43[BANK5 ] struct flui
  7533 ;;  l               4   38[BANK5 ] struct flui
  7534 ;;  h               4   34[BANK5 ] struct flui
  7535 ;;  ou              4   28[BANK5 ] struct flui
  7536 ;;  n               2   47[BANK5 ] int 
  7537 ;;  i               2   32[BANK5 ] int 
  7538 ;;  w               2   26[BANK5 ] int 
  7539 ;;  e               2   24[BANK5 ] int 
  7540 ;;  m               2   22[BANK5 ] int 
  7541 ;;  d               2   20[BANK5 ] int 
  7542 ;;  t               2   13[BANK5 ] int 
  7543 ;;  p               2   11[BANK5 ] int 
  7544 ;;  ne              2    9[BANK5 ] int 
  7545 ;;  sign            1   42[BANK5 ] unsigned char 
  7546 ;;  nmode           1   19[BANK5 ] unsigned char 
  7547 ;;  mode            1   18[BANK5 ] unsigned char 
  7548 ;;  pp              1   17[BANK5 ] unsigned char 
  7549 ;;  esign           1    0        unsigned char 
  7550 ;; Return value:  Size  Location     Type
  7551 ;;                  1    wreg      void 
  7552 ;; Registers used:
  7553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7554 ;; Tracked objects:
  7555 ;;		On entry : 0/0
  7556 ;;		On exit  : 0/0
  7557 ;;		Unchanged: 0/0
  7558 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  7559 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7560 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7561 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7562 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7563 ;;Total ram usage:       53 bytes
  7564 ;; Hardware stack levels used: 1
  7565 ;; Hardware stack levels required when called: 9
  7566 ;; This function calls:
  7567 ;;		___fladd
  7568 ;;		___fldiv
  7569 ;;		___fleq
  7570 ;;		___flge
  7571 ;;		___flmul
  7572 ;;		___flneg
  7573 ;;		___flsub
  7574 ;;		___fltol
  7575 ;;		___fpclassifyf
  7576 ;;		_floorf
  7577 ;;		_labs
  7578 ;;		_memcpy
  7579 ;;		_pad
  7580 ;;		_strcpy
  7581 ;; This function is called by:
  7582 ;;		_vfpfcnvrt
  7583 ;; This function uses a non-reentrant model
  7584 ;;
  7585                           
  7586                           	psect	text5
  7587   001656                     __ptext5:
  7588                           	callstack 0
  7589   001656                     _efgtoa:
  7590                           	callstack 114
  7591   001656                     
  7592                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  7593   001656  0105               	movlb	5	; () banked
  7594   001658  6B8A               	clrf	efgtoa@sign& (0+255),b
  7595                           
  7596                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  7597   00165A  C562  F58B         	movff	efgtoa@f,efgtoa@g
  7598   00165E  C563  F58C         	movff	efgtoa@f+1,efgtoa@g+1
  7599   001662  C564  F58D         	movff	efgtoa@f+2,efgtoa@g+2
  7600   001666  C565  F58E         	movff	efgtoa@f+3,efgtoa@g+3
  7601   00166A                     
  7602                           ; BSR set to: 5
  7603                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  7604   00166A  BF8E               	btfsc	(efgtoa@g+3)& (0+255),7,b
  7605   00166C  EF3C  F00B         	goto	u4220
  7606   001670  EF3A  F00B         	goto	u4221
  7607   001674                     u4221:
  7608   001674  EF50  F00B         	goto	l5123
  7609   001678                     u4220:
  7610   001678                     
  7611                           ; BSR set to: 5
  7612                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  7613   001678  0E01               	movlw	1
  7614   00167A  6F8A               	movwf	efgtoa@sign& (0+255),b
  7615   00167C                     
  7616                           ; BSR set to: 5
  7617                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  7618   00167C  C58B  F503         	movff	efgtoa@g,___flneg@f1
  7619   001680  C58C  F504         	movff	efgtoa@g+1,___flneg@f1+1
  7620   001684  C58D  F505         	movff	efgtoa@g+2,___flneg@f1+2
  7621   001688  C58E  F506         	movff	efgtoa@g+3,___flneg@f1+3
  7622   00168C  ECFA  F01E         	call	___flneg	;wreg free
  7623   001690  C503  F58B         	movff	?___flneg,efgtoa@g
  7624   001694  C504  F58C         	movff	?___flneg+1,efgtoa@g+1
  7625   001698  C505  F58D         	movff	?___flneg+2,efgtoa@g+2
  7626   00169C  C506  F58E         	movff	?___flneg+3,efgtoa@g+3
  7627   0016A0                     l5123:
  7628                           
  7629                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  7630   0016A0  0E00               	movlw	0
  7631   0016A2  0105               	movlb	5	; () banked
  7632   0016A4  6F90               	movwf	(efgtoa@n+1)& (0+255),b
  7633   0016A6  0E00               	movlw	0
  7634   0016A8  6F8F               	movwf	efgtoa@n& (0+255),b
  7635   0016AA                     
  7636                           ; BSR set to: 5
  7637                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  7638   0016AA  C5BF  F57A         	movff	_width,efgtoa@w
  7639   0016AE  C5C0  F57B         	movff	_width+1,efgtoa@w+1
  7640   0016B2                     
  7641                           ; BSR set to: 5
  7642                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
  7643   0016B2  518A               	movf	efgtoa@sign& (0+255),w,b
  7644   0016B4  B4D8               	btfsc	status,2,c
  7645   0016B6  EF5F  F00B         	goto	u4231
  7646   0016BA  EF61  F00B         	goto	u4230
  7647   0016BE                     u4231:
  7648   0016BE  EF75  F00B         	goto	l5137
  7649   0016C2                     u4230:
  7650   0016C2                     
  7651                           ; BSR set to: 5
  7652                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  7653   0016C2  518A               	movf	efgtoa@sign& (0+255),w,b
  7654   0016C4  A4D8               	btfss	status,2,c
  7655   0016C6  EF67  F00B         	goto	u4241
  7656   0016CA  EF69  F00B         	goto	u4240
  7657   0016CE                     u4241:
  7658   0016CE  EF6F  F00B         	goto	l5133
  7659   0016D2                     u4240:
  7660   0016D2                     
  7661                           ; BSR set to: 5
  7662   0016D2  0E00               	movlw	0
  7663   0016D4  6F70               	movwf	(_efgtoa$2284+1)& (0+255),b
  7664   0016D6  0E2B               	movlw	43
  7665   0016D8  6F6F               	movwf	_efgtoa$2284& (0+255),b
  7666   0016DA  EF73  F00B         	goto	l5135
  7667   0016DE                     l5133:
  7668                           
  7669                           ; BSR set to: 5
  7670   0016DE  0E00               	movlw	0
  7671   0016E0  6F70               	movwf	(_efgtoa$2284+1)& (0+255),b
  7672   0016E2  0E2D               	movlw	45
  7673   0016E4  6F6F               	movwf	_efgtoa$2284& (0+255),b
  7674   0016E6                     l5135:
  7675                           
  7676                           ; BSR set to: 5
  7677   0016E6  C56F  F58A         	movff	_efgtoa$2284,efgtoa@sign
  7678   0016EA                     l5137:
  7679                           
  7680                           ; BSR set to: 5
  7681                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  7682   0016EA  C58B  F503         	movff	efgtoa@g,___fpclassifyf@x
  7683   0016EE  C58C  F504         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7684   0016F2  C58D  F505         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7685   0016F6  C58E  F506         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7686   0016FA  EC0F  F01B         	call	___fpclassifyf	;wreg free
  7687   0016FE  0403               	decf	?___fpclassifyf^(0+1280),w,c
  7688   001700  1004               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
  7689   001702  A4D8               	btfss	status,2,c
  7690   001704  EF86  F00B         	goto	u4251
  7691   001708  EF88  F00B         	goto	u4250
  7692   00170C                     u4251:
  7693   00170C  EFB9  F00B         	goto	l5155
  7694   001710                     u4250:
  7695   001710                     
  7696                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  7697   001710  0105               	movlb	5	; () banked
  7698   001712  518A               	movf	efgtoa@sign& (0+255),w,b
  7699   001714  B4D8               	btfsc	status,2,c
  7700   001716  EF8F  F00B         	goto	u4261
  7701   00171A  EF91  F00B         	goto	u4260
  7702   00171E                     u4261:
  7703   00171E  EF9A  F00B         	goto	l5147
  7704   001722                     u4260:
  7705   001722                     
  7706                           ; BSR set to: 5
  7707                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  7708   001722  C58A  F600         	movff	efgtoa@sign,_dbuf
  7709   001726                     
  7710                           ; BSR set to: 5
  7711                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
  7712   001726  077A               	decf	efgtoa@w& (0+255),f,b
  7713   001728  A0D8               	btfss	status,0,c
  7714   00172A  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  7715   00172C                     
  7716                           ; BSR set to: 5
  7717                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  7718   00172C  0E00               	movlw	0
  7719   00172E  6F90               	movwf	(efgtoa@n+1)& (0+255),b
  7720   001730  0E01               	movlw	1
  7721   001732  6F8F               	movwf	efgtoa@n& (0+255),b
  7722   001734                     l5147:
  7723                           
  7724                           ; BSR set to: 5
  7725                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  7726   001734  0E00               	movlw	low _dbuf
  7727   001736  258F               	addwf	efgtoa@n& (0+255),w,b
  7728   001738  6E03               	movwf	strcpy@dest^(0+1280),c
  7729   00173A  0E06               	movlw	high _dbuf
  7730   00173C  2190               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7731   00173E  6E04               	movwf	(strcpy@dest+1)^(0+1280),c
  7732   001740  0E4D               	movlw	low STR_3
  7733   001742  6E05               	movwf	strcpy@src^(0+1280),c
  7734   001744  ECDC  F01E         	call	_strcpy	;wreg free
  7735   001748                     l5149:
  7736                           
  7737                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  7738   001748  0105               	movlb	5	; () banked
  7739   00174A  0EFD               	movlw	253
  7740   00174C  277A               	addwf	efgtoa@w& (0+255),f,b
  7741   00174E  0EFF               	movlw	255
  7742   001750  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  7743   001752                     
  7744                           ; BSR set to: 5
  7745                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  7746   001752  C560  F515         	movff	efgtoa@fp,pad@fp
  7747   001756  C561  F516         	movff	efgtoa@fp+1,pad@fp+1
  7748   00175A  0E00               	movlw	low _dbuf
  7749   00175C  6E17               	movwf	pad@buf^(0+1280),c
  7750   00175E  0E06               	movlw	high _dbuf
  7751   001760  6E18               	movwf	(pad@buf+1)^(0+1280),c
  7752   001762  C57A  F519         	movff	efgtoa@w,pad@p
  7753   001766  C57B  F51A         	movff	efgtoa@w+1,pad@p+1
  7754   00176A  ECBB  F01D         	call	_pad	;wreg free
  7755   00176E  EF20  F010         	goto	l1594
  7756   001772                     l5155:
  7757                           
  7758                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  7759   001772  C58B  F503         	movff	efgtoa@g,___fpclassifyf@x
  7760   001776  C58C  F504         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7761   00177A  C58D  F505         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7762   00177E  C58E  F506         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7763   001782  EC0F  F01B         	call	___fpclassifyf	;wreg free
  7764   001786  5003               	movf	?___fpclassifyf^(0+1280),w,c
  7765   001788  1004               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
  7766   00178A  A4D8               	btfss	status,2,c
  7767   00178C  EFCA  F00B         	goto	u4271
  7768   001790  EFCC  F00B         	goto	u4270
  7769   001794                     u4271:
  7770   001794  EFEA  F00B         	goto	l5173
  7771   001798                     u4270:
  7772   001798                     
  7773                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  7774   001798  0105               	movlb	5	; () banked
  7775   00179A  518A               	movf	efgtoa@sign& (0+255),w,b
  7776   00179C  B4D8               	btfsc	status,2,c
  7777   00179E  EFD3  F00B         	goto	u4281
  7778   0017A2  EFD5  F00B         	goto	u4280
  7779   0017A6                     u4281:
  7780   0017A6  EFDE  F00B         	goto	l5165
  7781   0017AA                     u4280:
  7782   0017AA                     
  7783                           ; BSR set to: 5
  7784                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  7785   0017AA  C58A  F600         	movff	efgtoa@sign,_dbuf
  7786   0017AE                     
  7787                           ; BSR set to: 5
  7788                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
  7789   0017AE  077A               	decf	efgtoa@w& (0+255),f,b
  7790   0017B0  A0D8               	btfss	status,0,c
  7791   0017B2  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  7792   0017B4                     
  7793                           ; BSR set to: 5
  7794                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  7795   0017B4  0E00               	movlw	0
  7796   0017B6  6F90               	movwf	(efgtoa@n+1)& (0+255),b
  7797   0017B8  0E01               	movlw	1
  7798   0017BA  6F8F               	movwf	efgtoa@n& (0+255),b
  7799   0017BC                     l5165:
  7800                           
  7801                           ; BSR set to: 5
  7802                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  7803   0017BC  0E00               	movlw	low _dbuf
  7804   0017BE  258F               	addwf	efgtoa@n& (0+255),w,b
  7805   0017C0  6E03               	movwf	strcpy@dest^(0+1280),c
  7806   0017C2  0E06               	movlw	high _dbuf
  7807   0017C4  2190               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7808   0017C6  6E04               	movwf	(strcpy@dest+1)^(0+1280),c
  7809   0017C8  0E51               	movlw	low STR_6
  7810   0017CA  6E05               	movwf	strcpy@src^(0+1280),c
  7811   0017CC  ECDC  F01E         	call	_strcpy	;wreg free
  7812   0017D0  EFA4  F00B         	goto	l5149
  7813   0017D4                     l5173:
  7814                           
  7815                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  7816   0017D4  0E00               	movlw	0
  7817   0017D6  0105               	movlb	5	; () banked
  7818   0017D8  6F91               	movwf	efgtoa@u& (0+255),b
  7819   0017DA  0E00               	movlw	0
  7820   0017DC  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  7821   0017DE  0E80               	movlw	128
  7822   0017E0  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  7823   0017E2  0E3F               	movlw	63
  7824   0017E4  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  7825                           
  7826                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  7827   0017E6  0E00               	movlw	0
  7828   0017E8  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  7829   0017EA  0E00               	movlw	0
  7830   0017EC  6F78               	movwf	efgtoa@e& (0+255),b
  7831   0017EE                     
  7832                           ; BSR set to: 5
  7833                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  7834   0017EE  C58B  F503         	movff	efgtoa@g,___fleq@ff1
  7835   0017F2  C58C  F504         	movff	efgtoa@g+1,___fleq@ff1+1
  7836   0017F6  C58D  F505         	movff	efgtoa@g+2,___fleq@ff1+2
  7837   0017FA  C58E  F506         	movff	efgtoa@g+3,___fleq@ff1+3
  7838   0017FE  0E00               	movlw	0
  7839   001800  6E07               	movwf	___fleq@ff2^(0+1280),c
  7840   001802  0E00               	movlw	0
  7841   001804  6E08               	movwf	(___fleq@ff2+1)^(0+1280),c
  7842   001806  0E00               	movlw	0
  7843   001808  6E09               	movwf	(___fleq@ff2+2)^(0+1280),c
  7844   00180A  0E00               	movlw	0
  7845   00180C  6E0A               	movwf	(___fleq@ff2+3)^(0+1280),c
  7846   00180E  EC15  F01D         	call	___fleq	;wreg free
  7847   001812  B0D8               	btfsc	status,0,c
  7848   001814  EF0E  F00C         	goto	u4291
  7849   001818  EF10  F00C         	goto	u4290
  7850   00181C                     u4291:
  7851   00181C  EFEF  F00C         	goto	l1597
  7852   001820                     u4290:
  7853   001820  EF1D  F00C         	goto	l5181
  7854   001824                     l1599:
  7855                           
  7856                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  7857   001824  C57C  F591         	movff	efgtoa@ou,efgtoa@u
  7858   001828  C57D  F592         	movff	efgtoa@ou+1,efgtoa@u+1
  7859   00182C  C57E  F593         	movff	efgtoa@ou+2,efgtoa@u+2
  7860   001830  C57F  F594         	movff	efgtoa@ou+3,efgtoa@u+3
  7861   001834                     
  7862                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
  7863   001834  0105               	movlb	5	; () banked
  7864   001836  4B78               	infsnz	efgtoa@e& (0+255),f,b
  7865   001838  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  7866   00183A                     l5181:
  7867                           
  7868                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  7869   00183A  C591  F515         	movff	efgtoa@u,___flmul@b
  7870   00183E  C592  F516         	movff	efgtoa@u+1,___flmul@b+1
  7871   001842  C593  F517         	movff	efgtoa@u+2,___flmul@b+2
  7872   001846  C594  F518         	movff	efgtoa@u+3,___flmul@b+3
  7873   00184A  0E00               	movlw	0
  7874   00184C  6E19               	movwf	___flmul@a^(0+1280),c
  7875   00184E  0E00               	movlw	0
  7876   001850  6E1A               	movwf	(___flmul@a+1)^(0+1280),c
  7877   001852  0E20               	movlw	32
  7878   001854  6E1B               	movwf	(___flmul@a+2)^(0+1280),c
  7879   001856  0E41               	movlw	65
  7880   001858  6E1C               	movwf	(___flmul@a+3)^(0+1280),c
  7881   00185A  EC7C  F012         	call	___flmul	;wreg free
  7882   00185E  C515  F57C         	movff	?___flmul,efgtoa@ou
  7883   001862  C516  F57D         	movff	?___flmul+1,efgtoa@ou+1
  7884   001866  C517  F57E         	movff	?___flmul+2,efgtoa@ou+2
  7885   00186A  C518  F57F         	movff	?___flmul+3,efgtoa@ou+3
  7886   00186E  0105               	movlb	5	; () banked
  7887   001870  517C               	movf	efgtoa@ou& (0+255),w,b
  7888   001872  5D8B               	subwf	efgtoa@g& (0+255),w,b
  7889   001874  6E03               	movwf	labs@a^(0+1280),c
  7890   001876  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  7891   001878  598C               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7892   00187A  6E04               	movwf	(labs@a+1)^(0+1280),c
  7893   00187C  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  7894   00187E  598D               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7895   001880  6E05               	movwf	(labs@a+2)^(0+1280),c
  7896   001882  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  7897   001884  598E               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7898   001886  6E06               	movwf	(labs@a+3)^(0+1280),c
  7899   001888  ECF2  F01D         	call	_labs	;wreg free
  7900   00188C  BE06               	btfsc	(?_labs+3)^(0+1280),7,c
  7901   00188E  EF54  F00C         	goto	u4301
  7902   001892  5006               	movf	(?_labs+3)^(0+1280),w,c
  7903   001894  1005               	iorwf	(?_labs+2)^(0+1280),w,c
  7904   001896  1004               	iorwf	(?_labs+1)^(0+1280),w,c
  7905   001898  E109               	bnz	u4300
  7906   00189A  0E02               	movlw	2
  7907   00189C  5C03               	subwf	?_labs^(0+1280),w,c
  7908   00189E  A0D8               	btfss	status,0,c
  7909   0018A0  EF54  F00C         	goto	u4301
  7910   0018A4  EF56  F00C         	goto	u4300
  7911   0018A8                     u4301:
  7912   0018A8  EF12  F00C         	goto	l1599
  7913   0018AC                     u4300:
  7914   0018AC  C57C  F52E         	movff	efgtoa@ou,___flge@ff1
  7915   0018B0  C57D  F52F         	movff	efgtoa@ou+1,___flge@ff1+1
  7916   0018B4  C57E  F530         	movff	efgtoa@ou+2,___flge@ff1+2
  7917   0018B8  C57F  F531         	movff	efgtoa@ou+3,___flge@ff1+3
  7918   0018BC  C58B  F532         	movff	efgtoa@g,___flge@ff2
  7919   0018C0  C58C  F533         	movff	efgtoa@g+1,___flge@ff2+1
  7920   0018C4  C58D  F534         	movff	efgtoa@g+2,___flge@ff2+2
  7921   0018C8  C58E  F535         	movff	efgtoa@g+3,___flge@ff2+3
  7922   0018CC  EC8D  F01A         	call	___flge	;wreg free
  7923   0018D0  A0D8               	btfss	status,0,c
  7924   0018D2  EF6D  F00C         	goto	u4311
  7925   0018D6  EF6F  F00C         	goto	u4310
  7926   0018DA                     u4311:
  7927   0018DA  EF12  F00C         	goto	l1599
  7928   0018DE                     u4310:
  7929   0018DE                     
  7930                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  7931   0018DE  0105               	movlb	5	; () banked
  7932   0018E0  5191               	movf	efgtoa@u& (0+255),w,b
  7933   0018E2  5D8B               	subwf	efgtoa@g& (0+255),w,b
  7934   0018E4  6E03               	movwf	labs@a^(0+1280),c
  7935   0018E6  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  7936   0018E8  598C               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7937   0018EA  6E04               	movwf	(labs@a+1)^(0+1280),c
  7938   0018EC  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  7939   0018EE  598D               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7940   0018F0  6E05               	movwf	(labs@a+2)^(0+1280),c
  7941   0018F2  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  7942   0018F4  598E               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7943   0018F6  6E06               	movwf	(labs@a+3)^(0+1280),c
  7944   0018F8  ECF2  F01D         	call	_labs	;wreg free
  7945   0018FC  BE06               	btfsc	(?_labs+3)^(0+1280),7,c
  7946   0018FE  EF8E  F00C         	goto	u4320
  7947   001902  5006               	movf	(?_labs+3)^(0+1280),w,c
  7948   001904  1005               	iorwf	(?_labs+2)^(0+1280),w,c
  7949   001906  1004               	iorwf	(?_labs+1)^(0+1280),w,c
  7950   001908  E107               	bnz	u4321
  7951   00190A  0E02               	movlw	2
  7952   00190C  5C03               	subwf	?_labs^(0+1280),w,c
  7953   00190E  B0D8               	btfsc	status,0,c
  7954   001910  EF8C  F00C         	goto	u4321
  7955   001914  EF8E  F00C         	goto	u4320
  7956   001918                     u4321:
  7957   001918  EFD6  F00C         	goto	l5199
  7958   00191C                     u4320:
  7959   00191C                     l5189:
  7960                           
  7961                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
  7962   00191C  C591  F58B         	movff	efgtoa@u,efgtoa@g
  7963   001920  C592  F58C         	movff	efgtoa@u+1,efgtoa@g+1
  7964   001924  C593  F58D         	movff	efgtoa@u+2,efgtoa@g+2
  7965   001928  C594  F58E         	movff	efgtoa@u+3,efgtoa@g+3
  7966                           
  7967                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
  7968   00192C  EFEF  F00C         	goto	l1597
  7969   001930                     l5191:
  7970                           
  7971                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  7972   001930  C591  F52E         	movff	efgtoa@u,___fldiv@b
  7973   001934  C592  F52F         	movff	efgtoa@u+1,___fldiv@b+1
  7974   001938  C593  F530         	movff	efgtoa@u+2,___fldiv@b+2
  7975   00193C  C594  F531         	movff	efgtoa@u+3,___fldiv@b+3
  7976   001940  0E00               	movlw	0
  7977   001942  6E32               	movwf	___fldiv@a^(0+1280),c
  7978   001944  0E00               	movlw	0
  7979   001946  6E33               	movwf	(___fldiv@a+1)^(0+1280),c
  7980   001948  0E20               	movlw	32
  7981   00194A  6E34               	movwf	(___fldiv@a+2)^(0+1280),c
  7982   00194C  0E41               	movlw	65
  7983   00194E  6E35               	movwf	(___fldiv@a+3)^(0+1280),c
  7984   001950  EC8F  F014         	call	___fldiv	;wreg free
  7985   001954  C52E  F591         	movff	?___fldiv,efgtoa@u
  7986   001958  C52F  F592         	movff	?___fldiv+1,efgtoa@u+1
  7987   00195C  C530  F593         	movff	?___fldiv+2,efgtoa@u+2
  7988   001960  C531  F594         	movff	?___fldiv+3,efgtoa@u+3
  7989   001964                     
  7990                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
  7991   001964  0105               	movlb	5	; () banked
  7992   001966  0778               	decf	efgtoa@e& (0+255),f,b
  7993   001968  A0D8               	btfss	status,0,c
  7994   00196A  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  7995   00196C                     
  7996                           ; BSR set to: 5
  7997                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  7998   00196C  5191               	movf	efgtoa@u& (0+255),w,b
  7999   00196E  5D8B               	subwf	efgtoa@g& (0+255),w,b
  8000   001970  6E03               	movwf	labs@a^(0+1280),c
  8001   001972  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  8002   001974  598C               	subwfb	(efgtoa@g+1)& (0+255),w,b
  8003   001976  6E04               	movwf	(labs@a+1)^(0+1280),c
  8004   001978  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  8005   00197A  598D               	subwfb	(efgtoa@g+2)& (0+255),w,b
  8006   00197C  6E05               	movwf	(labs@a+2)^(0+1280),c
  8007   00197E  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  8008   001980  598E               	subwfb	(efgtoa@g+3)& (0+255),w,b
  8009   001982  6E06               	movwf	(labs@a+3)^(0+1280),c
  8010   001984  ECF2  F01D         	call	_labs	;wreg free
  8011   001988  BE06               	btfsc	(?_labs+3)^(0+1280),7,c
  8012   00198A  EFD4  F00C         	goto	u4330
  8013   00198E  5006               	movf	(?_labs+3)^(0+1280),w,c
  8014   001990  1005               	iorwf	(?_labs+2)^(0+1280),w,c
  8015   001992  1004               	iorwf	(?_labs+1)^(0+1280),w,c
  8016   001994  E107               	bnz	u4331
  8017   001996  0E02               	movlw	2
  8018   001998  5C03               	subwf	?_labs^(0+1280),w,c
  8019   00199A  B0D8               	btfsc	status,0,c
  8020   00199C  EFD2  F00C         	goto	u4331
  8021   0019A0  EFD4  F00C         	goto	u4330
  8022   0019A4                     u4331:
  8023   0019A4  EFD6  F00C         	goto	l5199
  8024   0019A8                     u4330:
  8025   0019A8  EF8E  F00C         	goto	l5189
  8026   0019AC                     l5199:
  8027                           
  8028                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  8029   0019AC  C58B  F52E         	movff	efgtoa@g,___flge@ff1
  8030   0019B0  C58C  F52F         	movff	efgtoa@g+1,___flge@ff1+1
  8031   0019B4  C58D  F530         	movff	efgtoa@g+2,___flge@ff1+2
  8032   0019B8  C58E  F531         	movff	efgtoa@g+3,___flge@ff1+3
  8033   0019BC  C591  F532         	movff	efgtoa@u,___flge@ff2
  8034   0019C0  C592  F533         	movff	efgtoa@u+1,___flge@ff2+1
  8035   0019C4  C593  F534         	movff	efgtoa@u+2,___flge@ff2+2
  8036   0019C8  C594  F535         	movff	efgtoa@u+3,___flge@ff2+3
  8037   0019CC  EC8D  F01A         	call	___flge	;wreg free
  8038   0019D0  A0D8               	btfss	status,0,c
  8039   0019D2  EFED  F00C         	goto	u4341
  8040   0019D6  EFEF  F00C         	goto	u4340
  8041   0019DA                     u4341:
  8042   0019DA  EF98  F00C         	goto	l5191
  8043   0019DE                     u4340:
  8044   0019DE                     l1597:
  8045                           
  8046                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  8047   0019DE  C566  F572         	movff	efgtoa@c,efgtoa@mode
  8048                           
  8049                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  8050   0019E2  C572  F573         	movff	efgtoa@mode,efgtoa@nmode
  8051   0019E6                     
  8052                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  8053   0019E6  0105               	movlb	5	; () banked
  8054   0019E8  BFC2               	btfsc	(_prec+1)& (0+255),7,b
  8055   0019EA  EFF9  F00C         	goto	u4351
  8056   0019EE  EFFB  F00C         	goto	u4350
  8057   0019F2                     u4351:
  8058   0019F2  EF01  F00D         	goto	l5205
  8059   0019F6                     u4350:
  8060   0019F6                     
  8061                           ; BSR set to: 5
  8062   0019F6  C5C1  F56B         	movff	_prec,efgtoa@p
  8063   0019FA  C5C2  F56C         	movff	_prec+1,efgtoa@p+1
  8064   0019FE  EF05  F00D         	goto	l5207
  8065   001A02                     l5205:
  8066                           
  8067                           ; BSR set to: 5
  8068   001A02  0E00               	movlw	0
  8069   001A04  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  8070   001A06  0E06               	movlw	6
  8071   001A08  6F6B               	movwf	efgtoa@p& (0+255),b
  8072   001A0A                     l5207:
  8073                           
  8074                           ; BSR set to: 5
  8075                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
  8076   001A0A  C56B  F576         	movff	efgtoa@p,efgtoa@m
  8077   001A0E  C56C  F577         	movff	efgtoa@p+1,efgtoa@m+1
  8078   001A12                     
  8079                           ; BSR set to: 5
  8080                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
  8081   001A12  4B76               	infsnz	efgtoa@m& (0+255),f,b
  8082   001A14  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  8083   001A16                     
  8084                           ; BSR set to: 5
  8085                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  8086   001A16  0E66               	movlw	102
  8087   001A18  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  8088   001A1A  A4D8               	btfss	status,2,c
  8089   001A1C  EF12  F00D         	goto	u4361
  8090   001A20  EF14  F00D         	goto	u4360
  8091   001A24                     u4361:
  8092   001A24  EF34  F00D         	goto	l5221
  8093   001A28                     u4360:
  8094   001A28                     
  8095                           ; BSR set to: 5
  8096                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  8097   001A28  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8098   001A2A  EF1B  F00D         	goto	u4370
  8099   001A2E  EF19  F00D         	goto	u4371
  8100   001A32                     u4371:
  8101   001A32  EF27  F00D         	goto	l5217
  8102   001A36                     u4370:
  8103   001A36                     
  8104                           ; BSR set to: 5
  8105                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  8106   001A36  0E00               	movlw	0
  8107   001A38  6F91               	movwf	efgtoa@u& (0+255),b
  8108   001A3A  0E00               	movlw	0
  8109   001A3C  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  8110   001A3E  0E80               	movlw	128
  8111   001A40  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  8112   001A42  0E3F               	movlw	63
  8113   001A44  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  8114                           
  8115                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  8116   001A46  0E00               	movlw	0
  8117   001A48  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  8118   001A4A  0E00               	movlw	0
  8119   001A4C  6F78               	movwf	efgtoa@e& (0+255),b
  8120   001A4E                     l5217:
  8121                           
  8122                           ; BSR set to: 5
  8123                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  8124   001A4E  0E67               	movlw	103
  8125   001A50  1972               	xorwf	efgtoa@mode& (0+255),w,b
  8126   001A52  B4D8               	btfsc	status,2,c
  8127   001A54  EF2E  F00D         	goto	u4381
  8128   001A58  EF30  F00D         	goto	u4380
  8129   001A5C                     u4381:
  8130   001A5C  EF34  F00D         	goto	l5221
  8131   001A60                     u4380:
  8132   001A60                     
  8133                           ; BSR set to: 5
  8134                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  8135   001A60  5178               	movf	efgtoa@e& (0+255),w,b
  8136   001A62  2776               	addwf	efgtoa@m& (0+255),f,b
  8137   001A64  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  8138   001A66  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8139   001A68                     l5221:
  8140                           
  8141                           ; BSR set to: 5
  8142                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  8143   001A68  0E00               	movlw	0
  8144   001A6A  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  8145   001A6C  0E00               	movlw	0
  8146   001A6E  6F80               	movwf	efgtoa@i& (0+255),b
  8147   001A70                     
  8148                           ; BSR set to: 5
  8149                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  8150   001A70  C58B  F582         	movff	efgtoa@g,efgtoa@h
  8151   001A74  C58C  F583         	movff	efgtoa@g+1,efgtoa@h+1
  8152   001A78  C58D  F584         	movff	efgtoa@g+2,efgtoa@h+2
  8153   001A7C  C58E  F585         	movff	efgtoa@g+3,efgtoa@h+3
  8154   001A80                     
  8155                           ; BSR set to: 5
  8156                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  8157   001A80  C591  F57C         	movff	efgtoa@u,efgtoa@ou
  8158   001A84  C592  F57D         	movff	efgtoa@u+1,efgtoa@ou+1
  8159   001A88  C593  F57E         	movff	efgtoa@u+2,efgtoa@ou+2
  8160   001A8C  C594  F57F         	movff	efgtoa@u+3,efgtoa@ou+3
  8161                           
  8162                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  8163   001A90  EFC5  F00D         	goto	l5235
  8164   001A94                     l5227:
  8165                           
  8166                           ; BSR set to: 5
  8167                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  8168   001A94  C582  F52E         	movff	efgtoa@h,___fldiv@b
  8169   001A98  C583  F52F         	movff	efgtoa@h+1,___fldiv@b+1
  8170   001A9C  C584  F530         	movff	efgtoa@h+2,___fldiv@b+2
  8171   001AA0  C585  F531         	movff	efgtoa@h+3,___fldiv@b+3
  8172   001AA4  C591  F532         	movff	efgtoa@u,___fldiv@a
  8173   001AA8  C592  F533         	movff	efgtoa@u+1,___fldiv@a+1
  8174   001AAC  C593  F534         	movff	efgtoa@u+2,___fldiv@a+2
  8175   001AB0  C594  F535         	movff	efgtoa@u+3,___fldiv@a+3
  8176   001AB4  EC8F  F014         	call	___fldiv	;wreg free
  8177   001AB8  C52E  F547         	movff	?___fldiv,floorf@x
  8178   001ABC  C52F  F548         	movff	?___fldiv+1,floorf@x+1
  8179   001AC0  C530  F549         	movff	?___fldiv+2,floorf@x+2
  8180   001AC4  C531  F54A         	movff	?___fldiv+3,floorf@x+3
  8181   001AC8  EC62  F017         	call	_floorf	;wreg free
  8182   001ACC  C547  F586         	movff	?_floorf,efgtoa@l
  8183   001AD0  C548  F587         	movff	?_floorf+1,efgtoa@l+1
  8184   001AD4  C549  F588         	movff	?_floorf+2,efgtoa@l+2
  8185   001AD8  C54A  F589         	movff	?_floorf+3,efgtoa@l+3
  8186                           
  8187                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  8188   001ADC  C586  F503         	movff	efgtoa@l,___fltol@f1
  8189   001AE0  C587  F504         	movff	efgtoa@l+1,___fltol@f1+1
  8190   001AE4  C588  F505         	movff	efgtoa@l+2,___fltol@f1+2
  8191   001AE8  C589  F506         	movff	efgtoa@l+3,___fltol@f1+3
  8192   001AEC  EC0A  F01A         	call	___fltol	;wreg free
  8193   001AF0  C503  F574         	movff	?___fltol,efgtoa@d
  8194   001AF4  C504  F575         	movff	?___fltol+1,efgtoa@d+1
  8195   001AF8                     
  8196                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  8197   001AF8  C582  F52E         	movff	efgtoa@h,___flsub@b
  8198   001AFC  C583  F52F         	movff	efgtoa@h+1,___flsub@b+1
  8199   001B00  C584  F530         	movff	efgtoa@h+2,___flsub@b+2
  8200   001B04  C585  F531         	movff	efgtoa@h+3,___flsub@b+3
  8201   001B08  C586  F519         	movff	efgtoa@l,___flmul@a
  8202   001B0C  C587  F51A         	movff	efgtoa@l+1,___flmul@a+1
  8203   001B10  C588  F51B         	movff	efgtoa@l+2,___flmul@a+2
  8204   001B14  C589  F51C         	movff	efgtoa@l+3,___flmul@a+3
  8205   001B18  C591  F515         	movff	efgtoa@u,___flmul@b
  8206   001B1C  C592  F516         	movff	efgtoa@u+1,___flmul@b+1
  8207   001B20  C593  F517         	movff	efgtoa@u+2,___flmul@b+2
  8208   001B24  C594  F518         	movff	efgtoa@u+3,___flmul@b+3
  8209   001B28  EC7C  F012         	call	___flmul	;wreg free
  8210   001B2C  C515  F532         	movff	?___flmul,___flsub@a
  8211   001B30  C516  F533         	movff	?___flmul+1,___flsub@a+1
  8212   001B34  C517  F534         	movff	?___flmul+2,___flsub@a+2
  8213   001B38  C518  F535         	movff	?___flmul+3,___flsub@a+3
  8214   001B3C  EC97  F01E         	call	___flsub	;wreg free
  8215   001B40  C52E  F582         	movff	?___flsub,efgtoa@h
  8216   001B44  C52F  F583         	movff	?___flsub+1,efgtoa@h+1
  8217   001B48  C530  F584         	movff	?___flsub+2,efgtoa@h+2
  8218   001B4C  C531  F585         	movff	?___flsub+3,efgtoa@h+3
  8219   001B50                     
  8220                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  8221   001B50  C591  F52E         	movff	efgtoa@u,___fldiv@b
  8222   001B54  C592  F52F         	movff	efgtoa@u+1,___fldiv@b+1
  8223   001B58  C593  F530         	movff	efgtoa@u+2,___fldiv@b+2
  8224   001B5C  C594  F531         	movff	efgtoa@u+3,___fldiv@b+3
  8225   001B60  0E00               	movlw	0
  8226   001B62  6E32               	movwf	___fldiv@a^(0+1280),c
  8227   001B64  0E00               	movlw	0
  8228   001B66  6E33               	movwf	(___fldiv@a+1)^(0+1280),c
  8229   001B68  0E20               	movlw	32
  8230   001B6A  6E34               	movwf	(___fldiv@a+2)^(0+1280),c
  8231   001B6C  0E41               	movlw	65
  8232   001B6E  6E35               	movwf	(___fldiv@a+3)^(0+1280),c
  8233   001B70  EC8F  F014         	call	___fldiv	;wreg free
  8234   001B74  C52E  F591         	movff	?___fldiv,efgtoa@u
  8235   001B78  C52F  F592         	movff	?___fldiv+1,efgtoa@u+1
  8236   001B7C  C530  F593         	movff	?___fldiv+2,efgtoa@u+2
  8237   001B80  C531  F594         	movff	?___fldiv+3,efgtoa@u+3
  8238   001B84                     
  8239                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
  8240   001B84  0105               	movlb	5	; () banked
  8241   001B86  4B80               	infsnz	efgtoa@i& (0+255),f,b
  8242   001B88  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  8243   001B8A                     l5235:
  8244                           
  8245                           ; BSR set to: 5
  8246                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  8247   001B8A  5176               	movf	efgtoa@m& (0+255),w,b
  8248   001B8C  5D80               	subwf	efgtoa@i& (0+255),w,b
  8249   001B8E  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  8250   001B90  0A80               	xorlw	128
  8251   001B92  6F67               	movwf	??_efgtoa& (0+255),b
  8252   001B94  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  8253   001B96  0A80               	xorlw	128
  8254   001B98  5967               	subwfb	??_efgtoa& (0+255),w,b
  8255   001B9A  A0D8               	btfss	status,0,c
  8256   001B9C  EFD2  F00D         	goto	u4391
  8257   001BA0  EFD4  F00D         	goto	u4390
  8258   001BA4                     u4391:
  8259   001BA4  EF4A  F00D         	goto	l5227
  8260   001BA8                     u4390:
  8261   001BA8                     
  8262                           ; BSR set to: 5
  8263                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  8264   001BA8  C591  F515         	movff	efgtoa@u,___flmul@b
  8265   001BAC  C592  F516         	movff	efgtoa@u+1,___flmul@b+1
  8266   001BB0  C593  F517         	movff	efgtoa@u+2,___flmul@b+2
  8267   001BB4  C594  F518         	movff	efgtoa@u+3,___flmul@b+3
  8268   001BB8  0E00               	movlw	0
  8269   001BBA  6E19               	movwf	___flmul@a^(0+1280),c
  8270   001BBC  0E00               	movlw	0
  8271   001BBE  6E1A               	movwf	(___flmul@a+1)^(0+1280),c
  8272   001BC0  0EA0               	movlw	160
  8273   001BC2  6E1B               	movwf	(___flmul@a+2)^(0+1280),c
  8274   001BC4  0E40               	movlw	64
  8275   001BC6  6E1C               	movwf	(___flmul@a+3)^(0+1280),c
  8276   001BC8  EC7C  F012         	call	___flmul	;wreg free
  8277   001BCC  C515  F586         	movff	?___flmul,efgtoa@l
  8278   001BD0  C516  F587         	movff	?___flmul+1,efgtoa@l+1
  8279   001BD4  C517  F588         	movff	?___flmul+2,efgtoa@l+2
  8280   001BD8  C518  F589         	movff	?___flmul+3,efgtoa@l+3
  8281   001BDC                     
  8282                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  8283   001BDC  C582  F52E         	movff	efgtoa@h,___flge@ff1
  8284   001BE0  C583  F52F         	movff	efgtoa@h+1,___flge@ff1+1
  8285   001BE4  C584  F530         	movff	efgtoa@h+2,___flge@ff1+2
  8286   001BE8  C585  F531         	movff	efgtoa@h+3,___flge@ff1+3
  8287   001BEC  C586  F532         	movff	efgtoa@l,___flge@ff2
  8288   001BF0  C587  F533         	movff	efgtoa@l+1,___flge@ff2+1
  8289   001BF4  C588  F534         	movff	efgtoa@l+2,___flge@ff2+2
  8290   001BF8  C589  F535         	movff	efgtoa@l+3,___flge@ff2+3
  8291   001BFC  EC8D  F01A         	call	___flge	;wreg free
  8292   001C00  B0D8               	btfsc	status,0,c
  8293   001C02  EF05  F00E         	goto	u4401
  8294   001C06  EF07  F00E         	goto	u4400
  8295   001C0A                     u4401:
  8296   001C0A  EF12  F00E         	goto	l5243
  8297   001C0E                     u4400:
  8298   001C0E                     
  8299                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  8300   001C0E  0E00               	movlw	0
  8301   001C10  0105               	movlb	5	; () banked
  8302   001C12  6F86               	movwf	efgtoa@l& (0+255),b
  8303   001C14  0E00               	movlw	0
  8304   001C16  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  8305   001C18  0E00               	movlw	0
  8306   001C1A  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  8307   001C1C  0E00               	movlw	0
  8308   001C1E  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  8309                           
  8310                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
  8311   001C20  EF3B  F00E         	goto	l5249
  8312   001C24                     l5243:
  8313                           
  8314                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  8315   001C24  C582  F503         	movff	efgtoa@h,___fleq@ff1
  8316   001C28  C583  F504         	movff	efgtoa@h+1,___fleq@ff1+1
  8317   001C2C  C584  F505         	movff	efgtoa@h+2,___fleq@ff1+2
  8318   001C30  C585  F506         	movff	efgtoa@h+3,___fleq@ff1+3
  8319   001C34  C586  F507         	movff	efgtoa@l,___fleq@ff2
  8320   001C38  C587  F508         	movff	efgtoa@l+1,___fleq@ff2+1
  8321   001C3C  C588  F509         	movff	efgtoa@l+2,___fleq@ff2+2
  8322   001C40  C589  F50A         	movff	efgtoa@l+3,___fleq@ff2+3
  8323   001C44  EC15  F01D         	call	___fleq	;wreg free
  8324   001C48  A0D8               	btfss	status,0,c
  8325   001C4A  EF29  F00E         	goto	u4411
  8326   001C4E  EF2B  F00E         	goto	u4410
  8327   001C52                     u4411:
  8328   001C52  EF3B  F00E         	goto	l5249
  8329   001C56                     u4410:
  8330   001C56  0105               	movlb	5	; () banked
  8331   001C58  B174               	btfsc	efgtoa@d& (0+255),0,b
  8332   001C5A  EF31  F00E         	goto	u4421
  8333   001C5E  EF33  F00E         	goto	u4420
  8334   001C62                     u4421:
  8335   001C62  EF3B  F00E         	goto	l5249
  8336   001C66                     u4420:
  8337   001C66                     
  8338                           ; BSR set to: 5
  8339                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  8340   001C66  0E00               	movlw	0
  8341   001C68  6F86               	movwf	efgtoa@l& (0+255),b
  8342   001C6A  0E00               	movlw	0
  8343   001C6C  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  8344   001C6E  0E00               	movlw	0
  8345   001C70  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  8346   001C72  0E00               	movlw	0
  8347   001C74  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  8348   001C76                     l5249:
  8349                           
  8350                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  8351   001C76  C58B  F503         	movff	efgtoa@g,___fladd@b
  8352   001C7A  C58C  F504         	movff	efgtoa@g+1,___fladd@b+1
  8353   001C7E  C58D  F505         	movff	efgtoa@g+2,___fladd@b+2
  8354   001C82  C58E  F506         	movff	efgtoa@g+3,___fladd@b+3
  8355   001C86  C586  F507         	movff	efgtoa@l,___fladd@a
  8356   001C8A  C587  F508         	movff	efgtoa@l+1,___fladd@a+1
  8357   001C8E  C588  F509         	movff	efgtoa@l+2,___fladd@a+2
  8358   001C92  C589  F50A         	movff	efgtoa@l+3,___fladd@a+3
  8359   001C96  EC21  F010         	call	___fladd	;wreg free
  8360   001C9A  C503  F582         	movff	?___fladd,efgtoa@h
  8361   001C9E  C504  F583         	movff	?___fladd+1,efgtoa@h+1
  8362   001CA2  C505  F584         	movff	?___fladd+2,efgtoa@h+2
  8363   001CA6  C506  F585         	movff	?___fladd+3,efgtoa@h+3
  8364   001CAA                     
  8365                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  8366   001CAA  C582  F52E         	movff	efgtoa@h,___flge@ff1
  8367   001CAE  C583  F52F         	movff	efgtoa@h+1,___flge@ff1+1
  8368   001CB2  C584  F530         	movff	efgtoa@h+2,___flge@ff1+2
  8369   001CB6  C585  F531         	movff	efgtoa@h+3,___flge@ff1+3
  8370   001CBA  0E00               	movlw	0
  8371   001CBC  6E19               	movwf	___flmul@a^(0+1280),c
  8372   001CBE  0E00               	movlw	0
  8373   001CC0  6E1A               	movwf	(___flmul@a+1)^(0+1280),c
  8374   001CC2  0E20               	movlw	32
  8375   001CC4  6E1B               	movwf	(___flmul@a+2)^(0+1280),c
  8376   001CC6  0E41               	movlw	65
  8377   001CC8  6E1C               	movwf	(___flmul@a+3)^(0+1280),c
  8378   001CCA  C57C  F515         	movff	efgtoa@ou,___flmul@b
  8379   001CCE  C57D  F516         	movff	efgtoa@ou+1,___flmul@b+1
  8380   001CD2  C57E  F517         	movff	efgtoa@ou+2,___flmul@b+2
  8381   001CD6  C57F  F518         	movff	efgtoa@ou+3,___flmul@b+3
  8382   001CDA  EC7C  F012         	call	___flmul	;wreg free
  8383   001CDE  C515  F532         	movff	?___flmul,___flge@ff2
  8384   001CE2  C516  F533         	movff	?___flmul+1,___flge@ff2+1
  8385   001CE6  C517  F534         	movff	?___flmul+2,___flge@ff2+2
  8386   001CEA  C518  F535         	movff	?___flmul+3,___flge@ff2+3
  8387   001CEE  EC8D  F01A         	call	___flge	;wreg free
  8388   001CF2  A0D8               	btfss	status,0,c
  8389   001CF4  EF7E  F00E         	goto	u4431
  8390   001CF8  EF80  F00E         	goto	u4430
  8391   001CFC                     u4431:
  8392   001CFC  EFA9  F00E         	goto	l5261
  8393   001D00                     u4430:
  8394   001D00                     
  8395                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
  8396   001D00  0105               	movlb	5	; () banked
  8397   001D02  4B78               	infsnz	efgtoa@e& (0+255),f,b
  8398   001D04  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  8399   001D06                     
  8400                           ; BSR set to: 5
  8401                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  8402   001D06  C57C  F515         	movff	efgtoa@ou,___flmul@b
  8403   001D0A  C57D  F516         	movff	efgtoa@ou+1,___flmul@b+1
  8404   001D0E  C57E  F517         	movff	efgtoa@ou+2,___flmul@b+2
  8405   001D12  C57F  F518         	movff	efgtoa@ou+3,___flmul@b+3
  8406   001D16  0E00               	movlw	0
  8407   001D18  6E19               	movwf	___flmul@a^(0+1280),c
  8408   001D1A  0E00               	movlw	0
  8409   001D1C  6E1A               	movwf	(___flmul@a+1)^(0+1280),c
  8410   001D1E  0E20               	movlw	32
  8411   001D20  6E1B               	movwf	(___flmul@a+2)^(0+1280),c
  8412   001D22  0E41               	movlw	65
  8413   001D24  6E1C               	movwf	(___flmul@a+3)^(0+1280),c
  8414   001D26  EC7C  F012         	call	___flmul	;wreg free
  8415   001D2A  C515  F57C         	movff	?___flmul,efgtoa@ou
  8416   001D2E  C516  F57D         	movff	?___flmul+1,efgtoa@ou+1
  8417   001D32  C517  F57E         	movff	?___flmul+2,efgtoa@ou+2
  8418   001D36  C518  F57F         	movff	?___flmul+3,efgtoa@ou+3
  8419   001D3A                     
  8420                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  8421   001D3A  0E66               	movlw	102
  8422   001D3C  0105               	movlb	5	; () banked
  8423   001D3E  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  8424   001D40  A4D8               	btfss	status,2,c
  8425   001D42  EFA5  F00E         	goto	u4441
  8426   001D46  EFA7  F00E         	goto	u4440
  8427   001D4A                     u4441:
  8428   001D4A  EFA9  F00E         	goto	l5261
  8429   001D4E                     u4440:
  8430   001D4E                     
  8431                           ; BSR set to: 5
  8432                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
  8433   001D4E  4B76               	infsnz	efgtoa@m& (0+255),f,b
  8434   001D50  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  8435   001D52                     l5261:
  8436                           
  8437                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  8438   001D52  C57C  F591         	movff	efgtoa@ou,efgtoa@u
  8439   001D56  C57D  F592         	movff	efgtoa@ou+1,efgtoa@u+1
  8440   001D5A  C57E  F593         	movff	efgtoa@ou+2,efgtoa@u+2
  8441   001D5E  C57F  F594         	movff	efgtoa@ou+3,efgtoa@u+3
  8442   001D62                     
  8443                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  8444   001D62  C578  F569         	movff	efgtoa@e,efgtoa@ne
  8445   001D66  C579  F56A         	movff	efgtoa@e+1,efgtoa@ne+1
  8446   001D6A                     
  8447                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  8448   001D6A  0105               	movlb	5	; () banked
  8449   001D6C  6B71               	clrf	efgtoa@pp& (0+255),b
  8450   001D6E                     
  8451                           ; BSR set to: 5
  8452                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  8453   001D6E  0E00               	movlw	0
  8454   001D70  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  8455   001D72  0E00               	movlw	0
  8456   001D74  6F6D               	movwf	efgtoa@t& (0+255),b
  8457   001D76                     
  8458                           ; BSR set to: 5
  8459                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  8460   001D76  0E00               	movlw	0
  8461   001D78  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  8462   001D7A  0E00               	movlw	0
  8463   001D7C  6F80               	movwf	efgtoa@i& (0+255),b
  8464                           
  8465                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8466   001D7E  EFA6  F00F         	goto	l5311
  8467   001D82                     l5271:
  8468                           
  8469                           ; BSR set to: 5
  8470                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  8471   001D82  C582  F52E         	movff	efgtoa@h,___fldiv@b
  8472   001D86  C583  F52F         	movff	efgtoa@h+1,___fldiv@b+1
  8473   001D8A  C584  F530         	movff	efgtoa@h+2,___fldiv@b+2
  8474   001D8E  C585  F531         	movff	efgtoa@h+3,___fldiv@b+3
  8475   001D92  C591  F532         	movff	efgtoa@u,___fldiv@a
  8476   001D96  C592  F533         	movff	efgtoa@u+1,___fldiv@a+1
  8477   001D9A  C593  F534         	movff	efgtoa@u+2,___fldiv@a+2
  8478   001D9E  C594  F535         	movff	efgtoa@u+3,___fldiv@a+3
  8479   001DA2  EC8F  F014         	call	___fldiv	;wreg free
  8480   001DA6  C52E  F547         	movff	?___fldiv,floorf@x
  8481   001DAA  C52F  F548         	movff	?___fldiv+1,floorf@x+1
  8482   001DAE  C530  F549         	movff	?___fldiv+2,floorf@x+2
  8483   001DB2  C531  F54A         	movff	?___fldiv+3,floorf@x+3
  8484   001DB6  EC62  F017         	call	_floorf	;wreg free
  8485   001DBA  C547  F586         	movff	?_floorf,efgtoa@l
  8486   001DBE  C548  F587         	movff	?_floorf+1,efgtoa@l+1
  8487   001DC2  C549  F588         	movff	?_floorf+2,efgtoa@l+2
  8488   001DC6  C54A  F589         	movff	?_floorf+3,efgtoa@l+3
  8489                           
  8490                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  8491   001DCA  C586  F503         	movff	efgtoa@l,___fltol@f1
  8492   001DCE  C587  F504         	movff	efgtoa@l+1,___fltol@f1+1
  8493   001DD2  C588  F505         	movff	efgtoa@l+2,___fltol@f1+2
  8494   001DD6  C589  F506         	movff	efgtoa@l+3,___fltol@f1+3
  8495   001DDA  EC0A  F01A         	call	___fltol	;wreg free
  8496   001DDE  BE04               	btfsc	(?___fltol+1)^(0+1280),7,c
  8497   001DE0  EFFD  F00E         	goto	u4450
  8498   001DE4  5004               	movf	(?___fltol+1)^(0+1280),w,c
  8499   001DE6  E107               	bnz	u4451
  8500   001DE8  0E0A               	movlw	10
  8501   001DEA  5C03               	subwf	?___fltol^(0+1280),w,c
  8502   001DEC  B0D8               	btfsc	status,0,c
  8503   001DEE  EFFB  F00E         	goto	u4451
  8504   001DF2  EFFD  F00E         	goto	u4450
  8505   001DF6                     u4451:
  8506   001DF6  EF0D  F00F         	goto	l5275
  8507   001DFA                     u4450:
  8508   001DFA  C586  F503         	movff	efgtoa@l,___fltol@f1
  8509   001DFE  C587  F504         	movff	efgtoa@l+1,___fltol@f1+1
  8510   001E02  C588  F505         	movff	efgtoa@l+2,___fltol@f1+2
  8511   001E06  C589  F506         	movff	efgtoa@l+3,___fltol@f1+3
  8512   001E0A  EC0A  F01A         	call	___fltol	;wreg free
  8513   001E0E  C503  F574         	movff	?___fltol,efgtoa@d
  8514   001E12  C504  F575         	movff	?___fltol+1,efgtoa@d+1
  8515   001E16  EF12  F00F         	goto	l1627
  8516   001E1A                     l5275:
  8517   001E1A  0E00               	movlw	0
  8518   001E1C  0105               	movlb	5	; () banked
  8519   001E1E  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  8520   001E20  0E09               	movlw	9
  8521   001E22  6F74               	movwf	efgtoa@d& (0+255),b
  8522   001E24                     l1627:
  8523                           
  8524                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  8525   001E24  0105               	movlb	5	; () banked
  8526   001E26  5171               	movf	efgtoa@pp& (0+255),w,b
  8527   001E28  A4D8               	btfss	status,2,c
  8528   001E2A  EF19  F00F         	goto	u4461
  8529   001E2E  EF1B  F00F         	goto	u4460
  8530   001E32                     u4461:
  8531   001E32  EF43  F00F         	goto	l5295
  8532   001E36                     u4460:
  8533   001E36                     
  8534                           ; BSR set to: 5
  8535   001E36  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8536   001E38  EF22  F00F         	goto	u4470
  8537   001E3C  EF20  F00F         	goto	u4471
  8538   001E40                     u4471:
  8539   001E40  EF43  F00F         	goto	l5295
  8540   001E44                     u4470:
  8541   001E44                     
  8542                           ; BSR set to: 5
  8543                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  8544   001E44  0E00               	movlw	low _dbuf
  8545   001E46  258F               	addwf	efgtoa@n& (0+255),w,b
  8546   001E48  6ED9               	movwf	fsr2l,c
  8547   001E4A  0E06               	movlw	high _dbuf
  8548   001E4C  2190               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8549   001E4E  6EDA               	movwf	fsr2h,c
  8550   001E50  0E2E               	movlw	46
  8551   001E52  6EDF               	movwf	indf2,c
  8552   001E54                     
  8553                           ; BSR set to: 5
  8554   001E54  4B8F               	infsnz	efgtoa@n& (0+255),f,b
  8555   001E56  2B90               	incf	(efgtoa@n+1)& (0+255),f,b
  8556   001E58                     
  8557                           ; BSR set to: 5
  8558                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  8559   001E58  077A               	decf	efgtoa@w& (0+255),f,b
  8560   001E5A  A0D8               	btfss	status,0,c
  8561   001E5C  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  8562   001E5E                     
  8563                           ; BSR set to: 5
  8564                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  8565   001E5E  0E01               	movlw	1
  8566   001E60  6F71               	movwf	efgtoa@pp& (0+255),b
  8567   001E62  EF43  F00F         	goto	l5295
  8568   001E66                     l5287:
  8569                           
  8570                           ; BSR set to: 5
  8571                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  8572   001E66  0E00               	movlw	low _dbuf
  8573   001E68  258F               	addwf	efgtoa@n& (0+255),w,b
  8574   001E6A  6ED9               	movwf	fsr2l,c
  8575   001E6C  0E06               	movlw	high _dbuf
  8576   001E6E  2190               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8577   001E70  6EDA               	movwf	fsr2h,c
  8578   001E72  0E30               	movlw	48
  8579   001E74  6EDF               	movwf	indf2,c
  8580   001E76                     
  8581                           ; BSR set to: 5
  8582   001E76  4B8F               	infsnz	efgtoa@n& (0+255),f,b
  8583   001E78  2B90               	incf	(efgtoa@n+1)& (0+255),f,b
  8584   001E7A                     
  8585                           ; BSR set to: 5
  8586                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  8587   001E7A  077A               	decf	efgtoa@w& (0+255),f,b
  8588   001E7C  A0D8               	btfss	status,0,c
  8589   001E7E  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  8590   001E80                     
  8591                           ; BSR set to: 5
  8592                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  8593   001E80  076D               	decf	efgtoa@t& (0+255),f,b
  8594   001E82  A0D8               	btfss	status,0,c
  8595   001E84  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  8596   001E86                     l5295:
  8597                           
  8598                           ; BSR set to: 5
  8599                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  8600   001E86  516D               	movf	efgtoa@t& (0+255),w,b
  8601   001E88  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  8602   001E8A  A4D8               	btfss	status,2,c
  8603   001E8C  EF4A  F00F         	goto	u4481
  8604   001E90  EF4C  F00F         	goto	u4480
  8605   001E94                     u4481:
  8606   001E94  EF33  F00F         	goto	l5287
  8607   001E98                     u4480:
  8608   001E98                     
  8609                           ; BSR set to: 5
  8610                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  8611   001E98  0E00               	movlw	low _dbuf
  8612   001E9A  258F               	addwf	efgtoa@n& (0+255),w,b
  8613   001E9C  6ED9               	movwf	fsr2l,c
  8614   001E9E  0E06               	movlw	high _dbuf
  8615   001EA0  2190               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8616   001EA2  6EDA               	movwf	fsr2h,c
  8617   001EA4  5174               	movf	efgtoa@d& (0+255),w,b
  8618   001EA6  0F30               	addlw	48
  8619   001EA8  6EDF               	movwf	indf2,c
  8620   001EAA                     
  8621                           ; BSR set to: 5
  8622   001EAA  4B8F               	infsnz	efgtoa@n& (0+255),f,b
  8623   001EAC  2B90               	incf	(efgtoa@n+1)& (0+255),f,b
  8624   001EAE                     
  8625                           ; BSR set to: 5
  8626                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  8627   001EAE  077A               	decf	efgtoa@w& (0+255),f,b
  8628   001EB0  A0D8               	btfss	status,0,c
  8629   001EB2  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  8630   001EB4                     
  8631                           ; BSR set to: 5
  8632                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  8633   001EB4  C582  F52E         	movff	efgtoa@h,___flsub@b
  8634   001EB8  C583  F52F         	movff	efgtoa@h+1,___flsub@b+1
  8635   001EBC  C584  F530         	movff	efgtoa@h+2,___flsub@b+2
  8636   001EC0  C585  F531         	movff	efgtoa@h+3,___flsub@b+3
  8637   001EC4  C586  F519         	movff	efgtoa@l,___flmul@a
  8638   001EC8  C587  F51A         	movff	efgtoa@l+1,___flmul@a+1
  8639   001ECC  C588  F51B         	movff	efgtoa@l+2,___flmul@a+2
  8640   001ED0  C589  F51C         	movff	efgtoa@l+3,___flmul@a+3
  8641   001ED4  C591  F515         	movff	efgtoa@u,___flmul@b
  8642   001ED8  C592  F516         	movff	efgtoa@u+1,___flmul@b+1
  8643   001EDC  C593  F517         	movff	efgtoa@u+2,___flmul@b+2
  8644   001EE0  C594  F518         	movff	efgtoa@u+3,___flmul@b+3
  8645   001EE4  EC7C  F012         	call	___flmul	;wreg free
  8646   001EE8  C515  F532         	movff	?___flmul,___flsub@a
  8647   001EEC  C516  F533         	movff	?___flmul+1,___flsub@a+1
  8648   001EF0  C517  F534         	movff	?___flmul+2,___flsub@a+2
  8649   001EF4  C518  F535         	movff	?___flmul+3,___flsub@a+3
  8650   001EF8  EC97  F01E         	call	___flsub	;wreg free
  8651   001EFC  C52E  F582         	movff	?___flsub,efgtoa@h
  8652   001F00  C52F  F583         	movff	?___flsub+1,efgtoa@h+1
  8653   001F04  C530  F584         	movff	?___flsub+2,efgtoa@h+2
  8654   001F08  C531  F585         	movff	?___flsub+3,efgtoa@h+3
  8655   001F0C                     
  8656                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  8657   001F0C  C591  F52E         	movff	efgtoa@u,___fldiv@b
  8658   001F10  C592  F52F         	movff	efgtoa@u+1,___fldiv@b+1
  8659   001F14  C593  F530         	movff	efgtoa@u+2,___fldiv@b+2
  8660   001F18  C594  F531         	movff	efgtoa@u+3,___fldiv@b+3
  8661   001F1C  0E00               	movlw	0
  8662   001F1E  6E32               	movwf	___fldiv@a^(0+1280),c
  8663   001F20  0E00               	movlw	0
  8664   001F22  6E33               	movwf	(___fldiv@a+1)^(0+1280),c
  8665   001F24  0E20               	movlw	32
  8666   001F26  6E34               	movwf	(___fldiv@a+2)^(0+1280),c
  8667   001F28  0E41               	movlw	65
  8668   001F2A  6E35               	movwf	(___fldiv@a+3)^(0+1280),c
  8669   001F2C  EC8F  F014         	call	___fldiv	;wreg free
  8670   001F30  C52E  F591         	movff	?___fldiv,efgtoa@u
  8671   001F34  C52F  F592         	movff	?___fldiv+1,efgtoa@u+1
  8672   001F38  C530  F593         	movff	?___fldiv+2,efgtoa@u+2
  8673   001F3C  C531  F594         	movff	?___fldiv+3,efgtoa@u+3
  8674   001F40                     
  8675                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  8676   001F40  0105               	movlb	5	; () banked
  8677   001F42  0769               	decf	efgtoa@ne& (0+255),f,b
  8678   001F44  A0D8               	btfss	status,0,c
  8679   001F46  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  8680   001F48                     
  8681                           ; BSR set to: 5
  8682                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
  8683   001F48  4B80               	infsnz	efgtoa@i& (0+255),f,b
  8684   001F4A  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  8685   001F4C                     l5311:
  8686                           
  8687                           ; BSR set to: 5
  8688                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8689   001F4C  5176               	movf	efgtoa@m& (0+255),w,b
  8690   001F4E  5D80               	subwf	efgtoa@i& (0+255),w,b
  8691   001F50  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  8692   001F52  0A80               	xorlw	128
  8693   001F54  6F67               	movwf	??_efgtoa& (0+255),b
  8694   001F56  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  8695   001F58  0A80               	xorlw	128
  8696   001F5A  5967               	subwfb	??_efgtoa& (0+255),w,b
  8697   001F5C  B0D8               	btfsc	status,0,c
  8698   001F5E  EFB3  F00F         	goto	u4491
  8699   001F62  EFB5  F00F         	goto	u4490
  8700   001F66                     u4491:
  8701   001F66  EFC3  F00F         	goto	l5315
  8702   001F6A                     u4490:
  8703   001F6A                     
  8704                           ; BSR set to: 5
  8705   001F6A  BF90               	btfsc	(efgtoa@n+1)& (0+255),7,b
  8706   001F6C  EFC1  F00F         	goto	u4501
  8707   001F70  5190               	movf	(efgtoa@n+1)& (0+255),w,b
  8708   001F72  E109               	bnz	u4500
  8709   001F74  0E4B               	movlw	75
  8710   001F76  5D8F               	subwf	efgtoa@n& (0+255),w,b
  8711   001F78  A0D8               	btfss	status,0,c
  8712   001F7A  EFC1  F00F         	goto	u4501
  8713   001F7E  EFC3  F00F         	goto	u4500
  8714   001F82                     u4501:
  8715   001F82  EFC1  F00E         	goto	l5271
  8716   001F86                     u4500:
  8717   001F86                     l5315:
  8718                           
  8719                           ; BSR set to: 5
  8720                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  8721   001F86  0E00               	movlw	0
  8722   001F88  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  8723   001F8A  0E4F               	movlw	79
  8724   001F8C  6F80               	movwf	efgtoa@i& (0+255),b
  8725   001F8E                     
  8726                           ; BSR set to: 5
  8727                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  8728   001F8E  0E00               	movlw	low _dbuf
  8729   001F90  2580               	addwf	efgtoa@i& (0+255),w,b
  8730   001F92  6ED9               	movwf	fsr2l,c
  8731   001F94  0E06               	movlw	high _dbuf
  8732   001F96  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8733   001F98  6EDA               	movwf	fsr2h,c
  8734   001F9A  6ADF               	clrf	indf2,c
  8735   001F9C                     
  8736                           ; BSR set to: 5
  8737                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  8738   001F9C  0E00               	movlw	low _dbuf
  8739   001F9E  6F67               	movwf	??_efgtoa& (0+255),b
  8740   001FA0  0E06               	movlw	high _dbuf
  8741   001FA2  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  8742   001FA4  518F               	movf	efgtoa@n& (0+255),w,b
  8743   001FA6  5F67               	subwf	??_efgtoa& (0+255),f,b
  8744   001FA8  5190               	movf	(efgtoa@n+1)& (0+255),w,b
  8745   001FAA  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  8746   001FAC  5180               	movf	efgtoa@i& (0+255),w,b
  8747   001FAE  2567               	addwf	??_efgtoa& (0+255),w,b
  8748   001FB0  6E03               	movwf	memcpy@d1^(0+1280),c
  8749   001FB2  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  8750   001FB4  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  8751   001FB6  6E04               	movwf	(memcpy@d1+1)^(0+1280),c
  8752   001FB8  0E00               	movlw	low _dbuf
  8753   001FBA  6E05               	movwf	memcpy@s1^(0+1280),c
  8754   001FBC  0E06               	movlw	high _dbuf
  8755   001FBE  6E06               	movwf	(memcpy@s1+1)^(0+1280),c
  8756   001FC0  C58F  F507         	movff	efgtoa@n,memcpy@n
  8757   001FC4  C590  F508         	movff	efgtoa@n+1,memcpy@n+1
  8758   001FC8  EC6F  F01E         	call	_memcpy	;wreg free
  8759   001FCC                     
  8760                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  8761   001FCC  0105               	movlb	5	; () banked
  8762   001FCE  518F               	movf	efgtoa@n& (0+255),w,b
  8763   001FD0  5D80               	subwf	efgtoa@i& (0+255),w,b
  8764   001FD2  6F8F               	movwf	efgtoa@n& (0+255),b
  8765   001FD4  5190               	movf	(efgtoa@n+1)& (0+255),w,b
  8766   001FD6  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  8767   001FD8  6F90               	movwf	(efgtoa@n+1)& (0+255),b
  8768   001FDA                     
  8769                           ; BSR set to: 5
  8770                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  8771   001FDA  518A               	movf	efgtoa@sign& (0+255),w,b
  8772   001FDC  A4D8               	btfss	status,2,c
  8773   001FDE  EFF3  F00F         	goto	u4511
  8774   001FE2  EFF6  F00F         	goto	u4510
  8775   001FE6                     u4511:
  8776   001FE6  0E01               	movlw	1
  8777   001FE8  EFF7  F00F         	goto	u4520
  8778   001FEC                     u4510:
  8779   001FEC  0E00               	movlw	0
  8780   001FEE                     u4520:
  8781   001FEE  6F80               	movwf	efgtoa@i& (0+255),b
  8782   001FF0  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  8783   001FF2                     
  8784                           ; BSR set to: 5
  8785                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  8786   001FF2  518A               	movf	efgtoa@sign& (0+255),w,b
  8787   001FF4  B4D8               	btfsc	status,2,c
  8788   001FF6  EFFF  F00F         	goto	u4531
  8789   001FFA  EF01  F010         	goto	u4530
  8790   001FFE                     u4531:
  8791   001FFE  EF0C  F010         	goto	l5329
  8792   002002                     u4530:
  8793   002002                     
  8794                           ; BSR set to: 5
  8795                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  8796   002002  078F               	decf	efgtoa@n& (0+255),f,b
  8797   002004  A0D8               	btfss	status,0,c
  8798   002006  0790               	decf	(efgtoa@n+1)& (0+255),f,b
  8799   002008  0E00               	movlw	low _dbuf
  8800   00200A  258F               	addwf	efgtoa@n& (0+255),w,b
  8801   00200C  6ED9               	movwf	fsr2l,c
  8802   00200E  0E06               	movlw	high _dbuf
  8803   002010  2190               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8804   002012  6EDA               	movwf	fsr2h,c
  8805   002014  C58A  F4DF         	movff	efgtoa@sign,indf2
  8806   002018                     l5329:
  8807                           
  8808                           ; BSR set to: 5
  8809                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  8810   002018  5180               	movf	efgtoa@i& (0+255),w,b
  8811   00201A  5F7A               	subwf	efgtoa@w& (0+255),f,b
  8812   00201C  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  8813   00201E  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  8814   002020                     
  8815                           ; BSR set to: 5
  8816                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  8817   002020  C560  F515         	movff	efgtoa@fp,pad@fp
  8818   002024  C561  F516         	movff	efgtoa@fp+1,pad@fp+1
  8819   002028  0E00               	movlw	low _dbuf
  8820   00202A  258F               	addwf	efgtoa@n& (0+255),w,b
  8821   00202C  6E17               	movwf	pad@buf^(0+1280),c
  8822   00202E  0E06               	movlw	high _dbuf
  8823   002030  2190               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8824   002032  6E18               	movwf	(pad@buf+1)^(0+1280),c
  8825   002034  C57A  F519         	movff	efgtoa@w,pad@p
  8826   002038  C57B  F51A         	movff	efgtoa@w+1,pad@p+1
  8827   00203C  ECBB  F01D         	call	_pad	;wreg free
  8828   002040                     l1594:
  8829   002040  0012               	return		;funcret
  8830   002042                     __end_of_efgtoa:
  8831                           	callstack 0
  8832                           
  8833 ;; *************** function _strcpy *****************
  8834 ;; Defined at:
  8835 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
  8836 ;; Parameters:    Size  Location     Type
  8837 ;;  dest            2    2[COMRAM] PTR unsigned char 
  8838 ;;		 -> dbuf(80), 
  8839 ;;  src             1    4[COMRAM] PTR const unsigned char 
  8840 ;;		 -> STR_6(4), STR_3(4), 
  8841 ;; Auto vars:     Size  Location     Type
  8842 ;;  d               2    6[COMRAM] PTR unsigned char 
  8843 ;;		 -> dbuf(80), 
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  2    2[COMRAM] PTR unsigned char 
  8846 ;; Registers used:
  8847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  8853 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8854 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8855 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8856 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8857 ;;Total ram usage:        6 bytes
  8858 ;; Hardware stack levels used: 1
  8859 ;; Hardware stack levels required when called: 4
  8860 ;; This function calls:
  8861 ;;		Nothing
  8862 ;; This function is called by:
  8863 ;;		_efgtoa
  8864 ;; This function uses a non-reentrant model
  8865 ;;
  8866                           
  8867                           	psect	text6
  8868   003DB8                     __ptext6:
  8869                           	callstack 0
  8870   003DB8                     _strcpy:
  8871                           	callstack 118
  8872   003DB8  C503  F507         	movff	strcpy@dest,strcpy@d
  8873   003DBC  C504  F508         	movff	strcpy@dest+1,strcpy@d+1
  8874   003DC0                     l4259:
  8875   003DC0  2A05               	incf	strcpy@src^(0+1280),f,c
  8876   003DC2  0405               	decf	strcpy@src^(0+1280),w,c
  8877   003DC4  6E06               	movwf	??_strcpy^(0+1280),c
  8878   003DC6  C506  F4F6         	movff	??_strcpy,tblptrl
  8879   003DCA                     	if	1	;There is more than 1 active tblptr byte
  8880   003DCA  0E16               	movlw	high __smallconst
  8881   003DCC  6EF7               	movwf	tblptrh,c
  8882   003DCE                     	endif
  8883   003DCE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8884   003DCE  6AF8               	clrf	tblptru,c
  8885   003DD0                     	endif
  8886   003DD0                     	if	0	;tblptru may be non-zero
  8887   003DD0                     	endif
  8888   003DD0  C507  F4D9         	movff	strcpy@d,fsr2l
  8889   003DD4  C508  F4DA         	movff	strcpy@d+1,fsr2h
  8890   003DD8  4A07               	infsnz	strcpy@d^(0+1280),f,c
  8891   003DDA  2A08               	incf	(strcpy@d+1)^(0+1280),f,c
  8892   003DDC  0008               	tblrd		*
  8893   003DDE  C4F5 F4DF          	movff	tablat,indf2
  8894   003DE2  50DF               	movf	indf2,w,c
  8895   003DE4  A4D8               	btfss	status,2,c
  8896   003DE6  EFF7  F01E         	goto	u3281
  8897   003DEA  EFF9  F01E         	goto	u3280
  8898   003DEE                     u3281:
  8899   003DEE  EFE0  F01E         	goto	l4259
  8900   003DF2                     u3280:
  8901   003DF2  0012               	return		;funcret
  8902   003DF4                     __end_of_strcpy:
  8903                           	callstack 0
  8904                           
  8905 ;; *************** function _pad *****************
  8906 ;; Defined at:
  8907 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  8908 ;; Parameters:    Size  Location     Type
  8909 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  8910 ;;		 -> NULL(0), 
  8911 ;;  buf             2   22[COMRAM] PTR unsigned char 
  8912 ;;		 -> dbuf(80), 
  8913 ;;  p               2   24[COMRAM] int 
  8914 ;; Auto vars:     Size  Location     Type
  8915 ;;  i               2   27[COMRAM] int 
  8916 ;; Return value:  Size  Location     Type
  8917 ;;                  1    wreg      void 
  8918 ;; Registers used:
  8919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8920 ;; Tracked objects:
  8921 ;;		On entry : 0/0
  8922 ;;		On exit  : 0/0
  8923 ;;		Unchanged: 0/0
  8924 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  8925 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8926 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8927 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8928 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8929 ;;Total ram usage:        9 bytes
  8930 ;; Hardware stack levels used: 1
  8931 ;; Hardware stack levels required when called: 8
  8932 ;; This function calls:
  8933 ;;		_fputc
  8934 ;;		_fputs
  8935 ;; This function is called by:
  8936 ;;		_efgtoa
  8937 ;; This function uses a non-reentrant model
  8938 ;;
  8939                           
  8940                           	psect	text7
  8941   003B76                     __ptext7:
  8942                           	callstack 0
  8943   003B76                     _pad:
  8944                           	callstack 114
  8945   003B76                     
  8946                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  8947   003B76  BE1A               	btfsc	(pad@p+1)^(0+1280),7,c
  8948   003B78  EFC2  F01D         	goto	u3190
  8949   003B7C  EFC0  F01D         	goto	u3191
  8950   003B80                     u3191:
  8951   003B80  EFC6  F01D         	goto	l1579
  8952   003B84                     u3190:
  8953   003B84                     
  8954                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  8955   003B84  0E00               	movlw	0
  8956   003B86  6E1A               	movwf	(pad@p+1)^(0+1280),c
  8957   003B88  0E00               	movlw	0
  8958   003B8A  6E19               	movwf	pad@p^(0+1280),c
  8959   003B8C                     l1579:
  8960                           
  8961                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  8962   003B8C  0E00               	movlw	0
  8963   003B8E  6E1D               	movwf	(pad@i+1)^(0+1280),c
  8964   003B90  0E00               	movlw	0
  8965   003B92  6E1C               	movwf	pad@i^(0+1280),c
  8966                           
  8967                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  8968   003B94  EFD8  F01D         	goto	l4231
  8969   003B98                     l4227:
  8970                           
  8971                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  8972   003B98  0E00               	movlw	0
  8973   003B9A  6E06               	movwf	(fputc@c+1)^(0+1280),c
  8974   003B9C  0E20               	movlw	32
  8975   003B9E  6E05               	movwf	fputc@c^(0+1280),c
  8976   003BA0  C515  F507         	movff	pad@fp,fputc@fp
  8977   003BA4  C516  F508         	movff	pad@fp+1,fputc@fp+1
  8978   003BA8  ECF6  F01B         	call	_fputc	;wreg free
  8979   003BAC                     
  8980                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  8981   003BAC  4A1C               	infsnz	pad@i^(0+1280),f,c
  8982   003BAE  2A1D               	incf	(pad@i+1)^(0+1280),f,c
  8983   003BB0                     l4231:
  8984                           
  8985                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  8986   003BB0  5019               	movf	pad@p^(0+1280),w,c
  8987   003BB2  5C1C               	subwf	pad@i^(0+1280),w,c
  8988   003BB4  501D               	movf	(pad@i+1)^(0+1280),w,c
  8989   003BB6  0A80               	xorlw	128
  8990   003BB8  6E1B               	movwf	??_pad^(0+1280),c
  8991   003BBA  501A               	movf	(pad@p+1)^(0+1280),w,c
  8992   003BBC  0A80               	xorlw	128
  8993   003BBE  581B               	subwfb	??_pad^(0+1280),w,c
  8994   003BC0  A0D8               	btfss	status,0,c
  8995   003BC2  EFE5  F01D         	goto	u3201
  8996   003BC6  EFE7  F01D         	goto	u3200
  8997   003BCA                     u3201:
  8998   003BCA  EFCC  F01D         	goto	l4227
  8999   003BCE                     u3200:
  9000   003BCE                     
  9001                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  9002   003BCE  C517  F50E         	movff	pad@buf,fputs@s
  9003   003BD2  C518  F50F         	movff	pad@buf+1,fputs@s+1
  9004   003BD6  C515  F510         	movff	pad@fp,fputs@fp
  9005   003BDA  C516  F511         	movff	pad@fp+1,fputs@fp+1
  9006   003BDE  ECBA  F01E         	call	_fputs	;wreg free
  9007   003BE2  0012               	return		;funcret
  9008   003BE4                     __end_of_pad:
  9009                           	callstack 0
  9010                           
  9011 ;; *************** function _fputs *****************
  9012 ;; Defined at:
  9013 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  9014 ;; Parameters:    Size  Location     Type
  9015 ;;  s               2   13[COMRAM] PTR const unsigned char 
  9016 ;;		 -> dbuf(80), 
  9017 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  9018 ;;		 -> NULL(0), 
  9019 ;; Auto vars:     Size  Location     Type
  9020 ;;  i               2   18[COMRAM] int 
  9021 ;;  c               1   17[COMRAM] unsigned char 
  9022 ;; Return value:  Size  Location     Type
  9023 ;;                  2   13[COMRAM] int 
  9024 ;; Registers used:
  9025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9026 ;; Tracked objects:
  9027 ;;		On entry : 0/0
  9028 ;;		On exit  : 0/0
  9029 ;;		Unchanged: 0/0
  9030 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9031 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9032 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9034 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9035 ;;Total ram usage:        7 bytes
  9036 ;; Hardware stack levels used: 1
  9037 ;; Hardware stack levels required when called: 7
  9038 ;; This function calls:
  9039 ;;		_fputc
  9040 ;; This function is called by:
  9041 ;;		_pad
  9042 ;; This function uses a non-reentrant model
  9043 ;;
  9044                           
  9045                           	psect	text8
  9046   003D74                     __ptext8:
  9047                           	callstack 0
  9048   003D74                     _fputs:
  9049                           	callstack 114
  9050   003D74  0E00               	movlw	0
  9051   003D76  6E14               	movwf	(fputs@i+1)^(0+1280),c
  9052   003D78  0E00               	movlw	0
  9053   003D7A  6E13               	movwf	fputs@i^(0+1280),c
  9054   003D7C  EFCB  F01E         	goto	l3861
  9055   003D80                     l3857:
  9056   003D80  C512  F505         	movff	fputs@c,fputc@c
  9057   003D84  6A06               	clrf	(fputc@c+1)^(0+1280),c
  9058   003D86  C510  F507         	movff	fputs@fp,fputc@fp
  9059   003D8A  C511  F508         	movff	fputs@fp+1,fputc@fp+1
  9060   003D8E  ECF6  F01B         	call	_fputc	;wreg free
  9061   003D92  4A13               	infsnz	fputs@i^(0+1280),f,c
  9062   003D94  2A14               	incf	(fputs@i+1)^(0+1280),f,c
  9063   003D96                     l3861:
  9064   003D96  5013               	movf	fputs@i^(0+1280),w,c
  9065   003D98  240E               	addwf	fputs@s^(0+1280),w,c
  9066   003D9A  6ED9               	movwf	fsr2l,c
  9067   003D9C  5014               	movf	(fputs@i+1)^(0+1280),w,c
  9068   003D9E  200F               	addwfc	(fputs@s+1)^(0+1280),w,c
  9069   003DA0  6EDA               	movwf	fsr2h,c
  9070   003DA2  50DF               	movf	indf2,w,c
  9071   003DA4  6E12               	movwf	fputs@c^(0+1280),c
  9072   003DA6  5012               	movf	fputs@c^(0+1280),w,c
  9073   003DA8  A4D8               	btfss	status,2,c
  9074   003DAA  EFD9  F01E         	goto	u2601
  9075   003DAE  EFDB  F01E         	goto	u2600
  9076   003DB2                     u2601:
  9077   003DB2  EFC0  F01E         	goto	l3857
  9078   003DB6                     u2600:
  9079   003DB6  0012               	return		;funcret
  9080   003DB8                     __end_of_fputs:
  9081                           	callstack 0
  9082                           
  9083 ;; *************** function _fputc *****************
  9084 ;; Defined at:
  9085 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  9086 ;; Parameters:    Size  Location     Type
  9087 ;;  c               2    4[COMRAM] int 
  9088 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  9089 ;;		 -> NULL(0), 
  9090 ;; Auto vars:     Size  Location     Type
  9091 ;;		None
  9092 ;; Return value:  Size  Location     Type
  9093 ;;                  2    4[COMRAM] int 
  9094 ;; Registers used:
  9095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9096 ;; Tracked objects:
  9097 ;;		On entry : 0/0
  9098 ;;		On exit  : 0/0
  9099 ;;		Unchanged: 0/0
  9100 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9101 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9103 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9104 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9105 ;;Total ram usage:        9 bytes
  9106 ;; Hardware stack levels used: 1
  9107 ;; Hardware stack levels required when called: 6
  9108 ;; This function calls:
  9109 ;;		_putch
  9110 ;; This function is called by:
  9111 ;;		_pad
  9112 ;;		_vfpfcnvrt
  9113 ;;		_fputs
  9114 ;; This function uses a non-reentrant model
  9115 ;;
  9116                           
  9117                           	psect	text9
  9118   0037EC                     __ptext9:
  9119                           	callstack 0
  9120   0037EC                     _fputc:
  9121                           	callstack 117
  9122   0037EC  5007               	movf	fputc@fp^(0+1280),w,c
  9123   0037EE  1008               	iorwf	(fputc@fp+1)^(0+1280),w,c
  9124   0037F0  B4D8               	btfsc	status,2,c
  9125   0037F2  EFFD  F01B         	goto	u2171
  9126   0037F6  EFFF  F01B         	goto	u2170
  9127   0037FA                     u2171:
  9128   0037FA  EF08  F01C         	goto	l3651
  9129   0037FE                     u2170:
  9130   0037FE  5007               	movf	fputc@fp^(0+1280),w,c
  9131   003800  1008               	iorwf	(fputc@fp+1)^(0+1280),w,c
  9132   003802  A4D8               	btfss	status,2,c
  9133   003804  EF06  F01C         	goto	u2181
  9134   003808  EF08  F01C         	goto	u2180
  9135   00380C                     u2181:
  9136   00380C  EF0D  F01C         	goto	l3653
  9137   003810                     u2180:
  9138   003810                     l3651:
  9139   003810  5005               	movf	fputc@c^(0+1280),w,c
  9140   003812  EC87  F01F         	call	_putch
  9141   003816  EF5A  F01C         	goto	l1719
  9142   00381A                     l3653:
  9143   00381A  EE20 F009          	lfsr	2,9
  9144   00381E  5007               	movf	fputc@fp^(0+1280),w,c
  9145   003820  26D9               	addwf	fsr2l,f,c
  9146   003822  5008               	movf	(fputc@fp+1)^(0+1280),w,c
  9147   003824  22DA               	addwfc	fsr2h,f,c
  9148   003826  50DE               	movf	postinc2,w,c
  9149   003828  10DE               	iorwf	postinc2,w,c
  9150   00382A  B4D8               	btfsc	status,2,c
  9151   00382C  EF1A  F01C         	goto	u2191
  9152   003830  EF1C  F01C         	goto	u2190
  9153   003834                     u2191:
  9154   003834  EF37  F01C         	goto	l3657
  9155   003838                     u2190:
  9156   003838  EE20 F009          	lfsr	2,9
  9157   00383C  5007               	movf	fputc@fp^(0+1280),w,c
  9158   00383E  26D9               	addwf	fsr2l,f,c
  9159   003840  5008               	movf	(fputc@fp+1)^(0+1280),w,c
  9160   003842  22DA               	addwfc	fsr2h,f,c
  9161   003844  EE10 F002          	lfsr	1,2
  9162   003848  5007               	movf	fputc@fp^(0+1280),w,c
  9163   00384A  26E1               	addwf	fsr1l,f,c
  9164   00384C  5008               	movf	(fputc@fp+1)^(0+1280),w,c
  9165   00384E  22E2               	addwfc	fsr1h,f,c
  9166   003850  50DE               	movf	postinc2,w,c
  9167   003852  5CE6               	subwf	postinc1,w,c
  9168   003854  50E6               	movf	postinc1,w,c
  9169   003856  0A80               	xorlw	128
  9170   003858  6E0D               	movwf	(??_fputc+4)^(0+1280),c
  9171   00385A  50DE               	movf	postinc2,w,c
  9172   00385C  0A80               	xorlw	128
  9173   00385E  580D               	subwfb	(??_fputc+4)^(0+1280),w,c
  9174   003860  B0D8               	btfsc	status,0,c
  9175   003862  EF35  F01C         	goto	u2201
  9176   003866  EF37  F01C         	goto	u2200
  9177   00386A                     u2201:
  9178   00386A  EF5A  F01C         	goto	l1719
  9179   00386E                     u2200:
  9180   00386E                     l3657:
  9181   00386E  EE20 F002          	lfsr	2,2
  9182   003872  5007               	movf	fputc@fp^(0+1280),w,c
  9183   003874  26D9               	addwf	fsr2l,f,c
  9184   003876  5008               	movf	(fputc@fp+1)^(0+1280),w,c
  9185   003878  22DA               	addwfc	fsr2h,f,c
  9186   00387A  C4DE F509          	movff	postinc2,??_fputc
  9187   00387E  C4DD F50A          	movff	postdec2,??_fputc+1
  9188   003882  C507  F4D9         	movff	fputc@fp,fsr2l
  9189   003886  C508  F4DA         	movff	fputc@fp+1,fsr2h
  9190   00388A  C4DE F50B          	movff	postinc2,??_fputc+2
  9191   00388E  C4DD F50C          	movff	postdec2,??_fputc+3
  9192   003892  5009               	movf	??_fputc^(0+1280),w,c
  9193   003894  240B               	addwf	(??_fputc+2)^(0+1280),w,c
  9194   003896  6ED9               	movwf	fsr2l,c
  9195   003898  500A               	movf	(??_fputc+1)^(0+1280),w,c
  9196   00389A  200C               	addwfc	(??_fputc+3)^(0+1280),w,c
  9197   00389C  6EDA               	movwf	fsr2h,c
  9198   00389E  C505  F4DF         	movff	fputc@c,indf2
  9199   0038A2  EE20 F002          	lfsr	2,2
  9200   0038A6  5007               	movf	fputc@fp^(0+1280),w,c
  9201   0038A8  26D9               	addwf	fsr2l,f,c
  9202   0038AA  5008               	movf	(fputc@fp+1)^(0+1280),w,c
  9203   0038AC  22DA               	addwfc	fsr2h,f,c
  9204   0038AE  2ADE               	incf	postinc2,f,c
  9205   0038B0  0E00               	movlw	0
  9206   0038B2  22DD               	addwfc	postdec2,f,c
  9207   0038B4                     l1719:
  9208   0038B4  0012               	return		;funcret
  9209   0038B6                     __end_of_fputc:
  9210                           	callstack 0
  9211                           
  9212 ;; *************** function _putch *****************
  9213 ;; Defined at:
  9214 ;;		line 296 in file "mcc_generated_files/uart/src/uart2.c"
  9215 ;; Parameters:    Size  Location     Type
  9216 ;;  txData          1    wreg     unsigned char 
  9217 ;; Auto vars:     Size  Location     Type
  9218 ;;  txData          1    3[COMRAM] unsigned char 
  9219 ;; Return value:  Size  Location     Type
  9220 ;;                  1    wreg      void 
  9221 ;; Registers used:
  9222 ;;		wreg, status,2, cstack
  9223 ;; Tracked objects:
  9224 ;;		On entry : 0/0
  9225 ;;		On exit  : 0/0
  9226 ;;		Unchanged: 0/0
  9227 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9229 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9231 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9232 ;;Total ram usage:        1 bytes
  9233 ;; Hardware stack levels used: 1
  9234 ;; Hardware stack levels required when called: 5
  9235 ;; This function calls:
  9236 ;;		_UART2_IsTxReady
  9237 ;;		_UART2_Write
  9238 ;; This function is called by:
  9239 ;;		_fputc
  9240 ;; This function uses a non-reentrant model
  9241 ;;
  9242                           
  9243                           	psect	text10
  9244   003F0E                     __ptext10:
  9245                           	callstack 0
  9246   003F0E                     _putch:
  9247                           	callstack 117
  9248                           
  9249                           ;incstack = 0
  9250                           ;putch@txData stored from wreg
  9251   003F0E  6E04               	movwf	putch@txData^(0+1280),c
  9252   003F10                     l3641:
  9253                           
  9254                           ;mcc_generated_files/uart/src/uart2.c: 298:     while(!(UART2_IsTxReady()))
  9255   003F10  EC61  F01F         	call	_UART2_IsTxReady	;wreg free
  9256   003F14  0900               	iorlw	0
  9257   003F16  B4D8               	btfsc	status,2,c
  9258   003F18  EF90  F01F         	goto	u2161
  9259   003F1C  EF92  F01F         	goto	u2160
  9260   003F20                     u2161:
  9261   003F20  EF88  F01F         	goto	l3641
  9262   003F24                     u2160:
  9263   003F24                     
  9264                           ;mcc_generated_files/uart/src/uart2.c: 302:     return UART2_Write(txData);;	Return valu
      +                          e of _putch is never used
  9265   003F24  5004               	movf	putch@txData^(0+1280),w,c
  9266   003F26  EC0E  F020         	call	_UART2_Write
  9267   003F2A  0012               	return		;funcret
  9268   003F2C                     __end_of_putch:
  9269                           	callstack 0
  9270                           
  9271 ;; *************** function _UART2_Write *****************
  9272 ;; Defined at:
  9273 ;;		line 281 in file "mcc_generated_files/uart/src/uart2.c"
  9274 ;; Parameters:    Size  Location     Type
  9275 ;;  txData          1    wreg     unsigned char 
  9276 ;; Auto vars:     Size  Location     Type
  9277 ;;  txData          1    2[COMRAM] unsigned char 
  9278 ;; Return value:  Size  Location     Type
  9279 ;;                  1    wreg      void 
  9280 ;; Registers used:
  9281 ;;		wreg
  9282 ;; Tracked objects:
  9283 ;;		On entry : 0/0
  9284 ;;		On exit  : 0/0
  9285 ;;		Unchanged: 0/0
  9286 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9288 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9290 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9291 ;;Total ram usage:        1 bytes
  9292 ;; Hardware stack levels used: 1
  9293 ;; Hardware stack levels required when called: 4
  9294 ;; This function calls:
  9295 ;;		Nothing
  9296 ;; This function is called by:
  9297 ;;		_putch
  9298 ;; This function uses a non-reentrant model
  9299 ;;
  9300                           
  9301                           	psect	text11
  9302   00401C                     __ptext11:
  9303                           	callstack 0
  9304   00401C                     _UART2_Write:
  9305                           	callstack 117
  9306                           
  9307                           ;incstack = 0
  9308                           ;UART2_Write@txData stored from wreg
  9309   00401C  6E03               	movwf	UART2_Write@txData^(0+1280),c
  9310   00401E                     
  9311                           ;mcc_generated_files/uart/src/uart2.c: 281: void UART2_Write(uint8_t txData);mcc_generat
      +                          ed_files/uart/src/uart2.c: 282: {;mcc_generated_files/uart/src/uart2.c: 283:     U2TXB =
      +                           txData;
  9312   00401E  C503  F2B6         	movff	UART2_Write@txData,694	;volatile
  9313   004022  0012               	return		;funcret
  9314   004024                     __end_of_UART2_Write:
  9315                           	callstack 0
  9316                           
  9317 ;; *************** function _UART2_IsTxReady *****************
  9318 ;; Defined at:
  9319 ;;		line 233 in file "mcc_generated_files/uart/src/uart2.c"
  9320 ;; Parameters:    Size  Location     Type
  9321 ;;		None
  9322 ;; Auto vars:     Size  Location     Type
  9323 ;;		None
  9324 ;; Return value:  Size  Location     Type
  9325 ;;                  1    wreg      _Bool 
  9326 ;; Registers used:
  9327 ;;		wreg, status,2
  9328 ;; Tracked objects:
  9329 ;;		On entry : 0/0
  9330 ;;		On exit  : 0/0
  9331 ;;		Unchanged: 0/0
  9332 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9334 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9336 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9337 ;;Total ram usage:        1 bytes
  9338 ;; Hardware stack levels used: 1
  9339 ;; Hardware stack levels required when called: 4
  9340 ;; This function calls:
  9341 ;;		Nothing
  9342 ;; This function is called by:
  9343 ;;		_putch
  9344 ;; This function uses a non-reentrant model
  9345 ;;
  9346                           
  9347                           	psect	text12
  9348   003EC2                     __ptext12:
  9349                           	callstack 0
  9350   003EC2                     _UART2_IsTxReady:
  9351                           	callstack 117
  9352   003EC2                     
  9353                           ;mcc_generated_files/uart/src/uart2.c: 235:     return (_Bool)(U2FIFObits.TXBE && U2CON0
      +                          bits.TXEN);
  9354   003EC2  6A03               	clrf	_UART2_IsTxReady$1067^(0+1280),c
  9355   003EC4  0102               	movlb	2	; () banked
  9356   003EC6  ABC3               	btfss	195,5,b	;volatile
  9357   003EC8  EF68  F01F         	goto	u2141
  9358   003ECC  EF6A  F01F         	goto	u2140
  9359   003ED0                     u2141:
  9360   003ED0  EF73  F01F         	goto	l460
  9361   003ED4                     u2140:
  9362   003ED4                     
  9363                           ; BSR set to: 2
  9364   003ED4  ABBE               	btfss	190,5,b	;volatile
  9365   003ED6  EF6F  F01F         	goto	u2151
  9366   003EDA  EF71  F01F         	goto	u2150
  9367   003EDE                     u2151:
  9368   003EDE  EF73  F01F         	goto	l460
  9369   003EE2                     u2150:
  9370   003EE2                     
  9371                           ; BSR set to: 2
  9372   003EE2  0E01               	movlw	1
  9373   003EE4  6E03               	movwf	_UART2_IsTxReady$1067^(0+1280),c
  9374   003EE6                     l460:
  9375                           
  9376                           ; BSR set to: 2
  9377   003EE6  5003               	movf	_UART2_IsTxReady$1067^(0+1280),w,c
  9378   003EE8                     
  9379                           ; BSR set to: 2
  9380   003EE8  0012               	return		;funcret
  9381   003EEA                     __end_of_UART2_IsTxReady:
  9382                           	callstack 0
  9383                           
  9384 ;; *************** function _memcpy *****************
  9385 ;; Defined at:
  9386 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  9387 ;; Parameters:    Size  Location     Type
  9388 ;;  d1              2    2[COMRAM] PTR void 
  9389 ;;		 -> dbuf(80), 
  9390 ;;  s1              2    4[COMRAM] PTR const void 
  9391 ;;		 -> dbuf(80), 
  9392 ;;  n               2    6[COMRAM] unsigned int 
  9393 ;; Auto vars:     Size  Location     Type
  9394 ;;  s               2   10[COMRAM] PTR const unsigned char 
  9395 ;;		 -> dbuf(80), 
  9396 ;;  d               2    8[COMRAM] PTR unsigned char 
  9397 ;;		 -> dbuf(80), 
  9398 ;;  tmp             1   12[COMRAM] unsigned char 
  9399 ;; Return value:  Size  Location     Type
  9400 ;;                  2    2[COMRAM] PTR void 
  9401 ;; Registers used:
  9402 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9403 ;; Tracked objects:
  9404 ;;		On entry : 0/0
  9405 ;;		On exit  : 0/0
  9406 ;;		Unchanged: 0/0
  9407 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9408 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9409 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9411 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9412 ;;Total ram usage:       11 bytes
  9413 ;; Hardware stack levels used: 1
  9414 ;; Hardware stack levels required when called: 4
  9415 ;; This function calls:
  9416 ;;		Nothing
  9417 ;; This function is called by:
  9418 ;;		_efgtoa
  9419 ;; This function uses a non-reentrant model
  9420 ;;
  9421                           
  9422                           	psect	text13
  9423   003CDE                     __ptext13:
  9424                           	callstack 0
  9425   003CDE                     _memcpy:
  9426                           	callstack 118
  9427   003CDE  C505  F50B         	movff	memcpy@s1,memcpy@s
  9428   003CE2  C506  F50C         	movff	memcpy@s1+1,memcpy@s+1
  9429   003CE6  C503  F509         	movff	memcpy@d1,memcpy@d
  9430   003CEA  C504  F50A         	movff	memcpy@d1+1,memcpy@d+1
  9431   003CEE  EF89  F01E         	goto	l4307
  9432   003CF2                     l4299:
  9433   003CF2  C50B  F4D9         	movff	memcpy@s,fsr2l
  9434   003CF6  C50C  F4DA         	movff	memcpy@s+1,fsr2h
  9435   003CFA  50DF               	movf	indf2,w,c
  9436   003CFC  6E0D               	movwf	memcpy@tmp^(0+1280),c
  9437   003CFE  4A0B               	infsnz	memcpy@s^(0+1280),f,c
  9438   003D00  2A0C               	incf	(memcpy@s+1)^(0+1280),f,c
  9439   003D02  C509  F4D9         	movff	memcpy@d,fsr2l
  9440   003D06  C50A  F4DA         	movff	memcpy@d+1,fsr2h
  9441   003D0A  C50D  F4DF         	movff	memcpy@tmp,indf2
  9442   003D0E  4A09               	infsnz	memcpy@d^(0+1280),f,c
  9443   003D10  2A0A               	incf	(memcpy@d+1)^(0+1280),f,c
  9444   003D12                     l4307:
  9445   003D12  0607               	decf	memcpy@n^(0+1280),f,c
  9446   003D14  A0D8               	btfss	status,0,c
  9447   003D16  0608               	decf	(memcpy@n+1)^(0+1280),f,c
  9448   003D18  2807               	incf	memcpy@n^(0+1280),w,c
  9449   003D1A  E106               	bnz	u3401
  9450   003D1C  2808               	incf	(memcpy@n+1)^(0+1280),w,c
  9451   003D1E  A4D8               	btfss	status,2,c
  9452   003D20  EF94  F01E         	goto	u3401
  9453   003D24  EF96  F01E         	goto	u3400
  9454   003D28                     u3401:
  9455   003D28  EF79  F01E         	goto	l4299
  9456   003D2C                     u3400:
  9457   003D2C  0012               	return		;funcret
  9458   003D2E                     __end_of_memcpy:
  9459                           	callstack 0
  9460                           
  9461 ;; *************** function _labs *****************
  9462 ;; Defined at:
  9463 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
  9464 ;; Parameters:    Size  Location     Type
  9465 ;;  a               4    2[COMRAM] long 
  9466 ;; Auto vars:     Size  Location     Type
  9467 ;;		None
  9468 ;; Return value:  Size  Location     Type
  9469 ;;                  4    2[COMRAM] long 
  9470 ;; Registers used:
  9471 ;;		wreg, status,2, status,0
  9472 ;; Tracked objects:
  9473 ;;		On entry : 0/0
  9474 ;;		On exit  : 0/0
  9475 ;;		Unchanged: 0/0
  9476 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9477 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9479 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9480 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9481 ;;Total ram usage:        8 bytes
  9482 ;; Hardware stack levels used: 1
  9483 ;; Hardware stack levels required when called: 4
  9484 ;; This function calls:
  9485 ;;		Nothing
  9486 ;; This function is called by:
  9487 ;;		_efgtoa
  9488 ;; This function uses a non-reentrant model
  9489 ;;
  9490                           
  9491                           	psect	text14
  9492   003BE4                     __ptext14:
  9493                           	callstack 0
  9494   003BE4                     _labs:
  9495                           	callstack 118
  9496   003BE4  BE06               	btfsc	(labs@a+3)^(0+1280),7,c
  9497   003BE6  EFF7  F01D         	goto	u3291
  9498   003BEA  EFF9  F01D         	goto	u3290
  9499   003BEE                     u3291:
  9500   003BEE  EF03  F01E         	goto	l4265
  9501   003BF2                     u3290:
  9502   003BF2  C503  F503         	movff	labs@a,?_labs
  9503   003BF6  C504  F504         	movff	labs@a+1,?_labs+1
  9504   003BFA  C505  F505         	movff	labs@a+2,?_labs+2
  9505   003BFE  C506  F506         	movff	labs@a+3,?_labs+3
  9506   003C02  EF1C  F01E         	goto	l1701
  9507   003C06                     l4265:
  9508   003C06  C503  F507         	movff	labs@a,??_labs
  9509   003C0A  C504  F508         	movff	labs@a+1,??_labs+1
  9510   003C0E  C505  F509         	movff	labs@a+2,??_labs+2
  9511   003C12  C506  F50A         	movff	labs@a+3,??_labs+3
  9512   003C16  1E07               	comf	??_labs^(0+1280),f,c
  9513   003C18  1E08               	comf	(??_labs+1)^(0+1280),f,c
  9514   003C1A  1E09               	comf	(??_labs+2)^(0+1280),f,c
  9515   003C1C  1E0A               	comf	(??_labs+3)^(0+1280),f,c
  9516   003C1E  2A07               	incf	??_labs^(0+1280),f,c
  9517   003C20  0E00               	movlw	0
  9518   003C22  2208               	addwfc	(??_labs+1)^(0+1280),f,c
  9519   003C24  2209               	addwfc	(??_labs+2)^(0+1280),f,c
  9520   003C26  220A               	addwfc	(??_labs+3)^(0+1280),f,c
  9521   003C28  C507  F503         	movff	??_labs,?_labs
  9522   003C2C  C508  F504         	movff	??_labs+1,?_labs+1
  9523   003C30  C509  F505         	movff	??_labs+2,?_labs+2
  9524   003C34  C50A  F506         	movff	??_labs+3,?_labs+3
  9525   003C38                     l1701:
  9526   003C38  0012               	return		;funcret
  9527   003C3A                     __end_of_labs:
  9528                           	callstack 0
  9529                           
  9530 ;; *************** function _floorf *****************
  9531 ;; Defined at:
  9532 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
  9533 ;; Parameters:    Size  Location     Type
  9534 ;;  x               4   70[COMRAM] float 
  9535 ;; Auto vars:     Size  Location     Type
  9536 ;;  u               4   86[COMRAM] struct .
  9537 ;;  m               4   80[COMRAM] unsigned long 
  9538 ;;  e               2   84[COMRAM] int 
  9539 ;; Return value:  Size  Location     Type
  9540 ;;                  4   70[COMRAM] float 
  9541 ;; Registers used:
  9542 ;;		wreg, status,2, status,0
  9543 ;; Tracked objects:
  9544 ;;		On entry : 0/0
  9545 ;;		On exit  : 0/0
  9546 ;;		Unchanged: 0/0
  9547 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9548 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9549 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9550 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9551 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9552 ;;Total ram usage:       20 bytes
  9553 ;; Hardware stack levels used: 1
  9554 ;; Hardware stack levels required when called: 4
  9555 ;; This function calls:
  9556 ;;		Nothing
  9557 ;; This function is called by:
  9558 ;;		_efgtoa
  9559 ;; This function uses a non-reentrant model
  9560 ;;
  9561                           
  9562                           	psect	text15
  9563   002EC4                     __ptext15:
  9564                           	callstack 0
  9565   002EC4                     _floorf:
  9566                           	callstack 118
  9567   002EC4  C5B7  F557         	movff	floorf@F521,floorf@u
  9568   002EC8  C5B8  F558         	movff	floorf@F521+1,floorf@u+1
  9569   002ECC  C5B9  F559         	movff	floorf@F521+2,floorf@u+2
  9570   002ED0  C5BA  F55A         	movff	floorf@F521+3,floorf@u+3
  9571   002ED4  C547  F557         	movff	floorf@x,floorf@u
  9572   002ED8  C548  F558         	movff	floorf@x+1,floorf@u+1
  9573   002EDC  C549  F559         	movff	floorf@x+2,floorf@u+2
  9574   002EE0  C54A  F55A         	movff	floorf@x+3,floorf@u+3
  9575   002EE4  0E81               	movlw	129
  9576   002EE6  6E4B               	movwf	??_floorf^(0+1280),c
  9577   002EE8  0EFF               	movlw	255
  9578   002EEA  6E4C               	movwf	(??_floorf+1)^(0+1280),c
  9579   002EEC  C557  F54D         	movff	floorf@u,??_floorf+2
  9580   002EF0  C558  F54E         	movff	floorf@u+1,??_floorf+3
  9581   002EF4  C559  F54F         	movff	floorf@u+2,??_floorf+4
  9582   002EF8  C55A  F550         	movff	floorf@u+3,??_floorf+5
  9583   002EFC  0E18               	movlw	24
  9584   002EFE  EF86  F017         	goto	u3300
  9585   002F02                     u3305:
  9586   002F02  90D8               	bcf	status,0,c
  9587   002F04  3250               	rrcf	(??_floorf+5)^(0+1280),f,c
  9588   002F06  324F               	rrcf	(??_floorf+4)^(0+1280),f,c
  9589   002F08  324E               	rrcf	(??_floorf+3)^(0+1280),f,c
  9590   002F0A  324D               	rrcf	(??_floorf+2)^(0+1280),f,c
  9591   002F0C                     u3300:
  9592   002F0C  2EE8               	decfsz	wreg,f,c
  9593   002F0E  EF81  F017         	goto	u3305
  9594   002F12  504D               	movf	(??_floorf+2)^(0+1280),w,c
  9595   002F14  244B               	addwf	??_floorf^(0+1280),w,c
  9596   002F16  6E55               	movwf	floorf@e^(0+1280),c
  9597   002F18  0E00               	movlw	0
  9598   002F1A  204C               	addwfc	(??_floorf+1)^(0+1280),w,c
  9599   002F1C  6E56               	movwf	(floorf@e+1)^(0+1280),c
  9600   002F1E  BE56               	btfsc	(floorf@e+1)^(0+1280),7,c
  9601   002F20  EF9B  F017         	goto	u3311
  9602   002F24  5056               	movf	(floorf@e+1)^(0+1280),w,c
  9603   002F26  E109               	bnz	u3310
  9604   002F28  0E17               	movlw	23
  9605   002F2A  5C55               	subwf	floorf@e^(0+1280),w,c
  9606   002F2C  A0D8               	btfss	status,0,c
  9607   002F2E  EF9B  F017         	goto	u3311
  9608   002F32  EF9D  F017         	goto	u3310
  9609   002F36                     u3311:
  9610   002F36  EFA7  F017         	goto	l4275
  9611   002F3A                     u3310:
  9612   002F3A                     l4273:
  9613   002F3A  C547  F547         	movff	floorf@x,?_floorf
  9614   002F3E  C548  F548         	movff	floorf@x+1,?_floorf+1
  9615   002F42  C549  F549         	movff	floorf@x+2,?_floorf+2
  9616   002F46  C54A  F54A         	movff	floorf@x+3,?_floorf+3
  9617   002F4A  EF6A  F018         	goto	l1687
  9618   002F4E                     l4275:
  9619   002F4E  BE56               	btfsc	(floorf@e+1)^(0+1280),7,c
  9620   002F50  EFAC  F017         	goto	u3321
  9621   002F54  EFAE  F017         	goto	u3320
  9622   002F58                     u3321:
  9623   002F58  EF1E  F018         	goto	l4285
  9624   002F5C                     u3320:
  9625   002F5C  C555  F54B         	movff	floorf@e,??_floorf
  9626   002F60  0EFF               	movlw	255
  9627   002F62  6E4C               	movwf	(??_floorf+1)^(0+1280),c
  9628   002F64  0EFF               	movlw	255
  9629   002F66  6E4D               	movwf	(??_floorf+2)^(0+1280),c
  9630   002F68  0E7F               	movlw	127
  9631   002F6A  6E4E               	movwf	(??_floorf+3)^(0+1280),c
  9632   002F6C  0E00               	movlw	0
  9633   002F6E  6E4F               	movwf	(??_floorf+4)^(0+1280),c
  9634   002F70                     u3335:
  9635   002F70  664B               	tstfsz	??_floorf^(0+1280),c
  9636   002F72  EFBD  F017         	goto	u3336
  9637   002F76  EFC5  F017         	goto	u3337
  9638   002F7A                     u3336:
  9639   002F7A  344F               	rlcf	(??_floorf+4)^(0+1280),w,c
  9640   002F7C  324F               	rrcf	(??_floorf+4)^(0+1280),f,c
  9641   002F7E  324E               	rrcf	(??_floorf+3)^(0+1280),f,c
  9642   002F80  324D               	rrcf	(??_floorf+2)^(0+1280),f,c
  9643   002F82  324C               	rrcf	(??_floorf+1)^(0+1280),f,c
  9644   002F84  2E4B               	decfsz	??_floorf^(0+1280),f,c
  9645   002F86  EFB8  F017         	goto	u3335
  9646   002F8A                     u3337:
  9647   002F8A  C54C  F551         	movff	??_floorf+1,floorf@m
  9648   002F8E  C54D  F552         	movff	??_floorf+2,floorf@m+1
  9649   002F92  C54E  F553         	movff	??_floorf+3,floorf@m+2
  9650   002F96  C54F  F554         	movff	??_floorf+4,floorf@m+3
  9651   002F9A  5051               	movf	floorf@m^(0+1280),w,c
  9652   002F9C  1457               	andwf	floorf@u^(0+1280),w,c
  9653   002F9E  6E4B               	movwf	??_floorf^(0+1280),c
  9654   002FA0  5052               	movf	(floorf@m+1)^(0+1280),w,c
  9655   002FA2  1458               	andwf	(floorf@u+1)^(0+1280),w,c
  9656   002FA4  6E4C               	movwf	(??_floorf+1)^(0+1280),c
  9657   002FA6  5053               	movf	(floorf@m+2)^(0+1280),w,c
  9658   002FA8  1459               	andwf	(floorf@u+2)^(0+1280),w,c
  9659   002FAA  6E4D               	movwf	(??_floorf+2)^(0+1280),c
  9660   002FAC  5054               	movf	(floorf@m+3)^(0+1280),w,c
  9661   002FAE  145A               	andwf	(floorf@u+3)^(0+1280),w,c
  9662   002FB0  6E4E               	movwf	(??_floorf+3)^(0+1280),c
  9663   002FB2  504B               	movf	??_floorf^(0+1280),w,c
  9664   002FB4  104C               	iorwf	(??_floorf+1)^(0+1280),w,c
  9665   002FB6  104D               	iorwf	(??_floorf+2)^(0+1280),w,c
  9666   002FB8  104E               	iorwf	(??_floorf+3)^(0+1280),w,c
  9667   002FBA  A4D8               	btfss	status,2,c
  9668   002FBC  EFE2  F017         	goto	u3341
  9669   002FC0  EFE4  F017         	goto	u3340
  9670   002FC4                     u3341:
  9671   002FC4  EFE6  F017         	goto	l4281
  9672   002FC8                     u3340:
  9673   002FC8  EF9D  F017         	goto	l4273
  9674   002FCC                     l4281:
  9675   002FCC  C557  F54B         	movff	floorf@u,??_floorf
  9676   002FD0  C558  F54C         	movff	floorf@u+1,??_floorf+1
  9677   002FD4  C559  F54D         	movff	floorf@u+2,??_floorf+2
  9678   002FD8  C55A  F54E         	movff	floorf@u+3,??_floorf+3
  9679   002FDC  0E20               	movlw	32
  9680   002FDE  EFF6  F017         	goto	u3350
  9681   002FE2                     u3355:
  9682   002FE2  90D8               	bcf	status,0,c
  9683   002FE4  324E               	rrcf	(??_floorf+3)^(0+1280),f,c
  9684   002FE6  324D               	rrcf	(??_floorf+2)^(0+1280),f,c
  9685   002FE8  324C               	rrcf	(??_floorf+1)^(0+1280),f,c
  9686   002FEA  324B               	rrcf	??_floorf^(0+1280),f,c
  9687   002FEC                     u3350:
  9688   002FEC  2EE8               	decfsz	wreg,f,c
  9689   002FEE  EFF1  F017         	goto	u3355
  9690   002FF2  504B               	movf	??_floorf^(0+1280),w,c
  9691   002FF4  104C               	iorwf	(??_floorf+1)^(0+1280),w,c
  9692   002FF6  104D               	iorwf	(??_floorf+2)^(0+1280),w,c
  9693   002FF8  104E               	iorwf	(??_floorf+3)^(0+1280),w,c
  9694   002FFA  B4D8               	btfsc	status,2,c
  9695   002FFC  EF02  F018         	goto	u3361
  9696   003000  EF04  F018         	goto	u3360
  9697   003004                     u3361:
  9698   003004  EF0C  F018         	goto	l1690
  9699   003008                     u3360:
  9700   003008  5051               	movf	floorf@m^(0+1280),w,c
  9701   00300A  2657               	addwf	floorf@u^(0+1280),f,c
  9702   00300C  5052               	movf	(floorf@m+1)^(0+1280),w,c
  9703   00300E  2258               	addwfc	(floorf@u+1)^(0+1280),f,c
  9704   003010  5053               	movf	(floorf@m+2)^(0+1280),w,c
  9705   003012  2259               	addwfc	(floorf@u+2)^(0+1280),f,c
  9706   003014  5054               	movf	(floorf@m+3)^(0+1280),w,c
  9707   003016  225A               	addwfc	(floorf@u+3)^(0+1280),f,c
  9708   003018                     l1690:
  9709   003018  1C51               	comf	floorf@m^(0+1280),w,c
  9710   00301A  6E4B               	movwf	??_floorf^(0+1280),c
  9711   00301C  1C52               	comf	(floorf@m+1)^(0+1280),w,c
  9712   00301E  6E4C               	movwf	(??_floorf+1)^(0+1280),c
  9713   003020  1C53               	comf	(floorf@m+2)^(0+1280),w,c
  9714   003022  6E4D               	movwf	(??_floorf+2)^(0+1280),c
  9715   003024  1C54               	comf	(floorf@m+3)^(0+1280),w,c
  9716   003026  6E4E               	movwf	(??_floorf+3)^(0+1280),c
  9717   003028  504B               	movf	??_floorf^(0+1280),w,c
  9718   00302A  1657               	andwf	floorf@u^(0+1280),f,c
  9719   00302C  504C               	movf	(??_floorf+1)^(0+1280),w,c
  9720   00302E  1658               	andwf	(floorf@u+1)^(0+1280),f,c
  9721   003030  504D               	movf	(??_floorf+2)^(0+1280),w,c
  9722   003032  1659               	andwf	(floorf@u+2)^(0+1280),f,c
  9723   003034  504E               	movf	(??_floorf+3)^(0+1280),w,c
  9724   003036  165A               	andwf	(floorf@u+3)^(0+1280),f,c
  9725   003038  EF62  F018         	goto	l4293
  9726   00303C                     l4285:
  9727   00303C  C557  F54B         	movff	floorf@u,??_floorf
  9728   003040  C558  F54C         	movff	floorf@u+1,??_floorf+1
  9729   003044  C559  F54D         	movff	floorf@u+2,??_floorf+2
  9730   003048  C55A  F54E         	movff	floorf@u+3,??_floorf+3
  9731   00304C  0E20               	movlw	32
  9732   00304E  EF2E  F018         	goto	u3370
  9733   003052                     u3375:
  9734   003052  90D8               	bcf	status,0,c
  9735   003054  324E               	rrcf	(??_floorf+3)^(0+1280),f,c
  9736   003056  324D               	rrcf	(??_floorf+2)^(0+1280),f,c
  9737   003058  324C               	rrcf	(??_floorf+1)^(0+1280),f,c
  9738   00305A  324B               	rrcf	??_floorf^(0+1280),f,c
  9739   00305C                     u3370:
  9740   00305C  2EE8               	decfsz	wreg,f,c
  9741   00305E  EF29  F018         	goto	u3375
  9742   003062  504B               	movf	??_floorf^(0+1280),w,c
  9743   003064  104C               	iorwf	(??_floorf+1)^(0+1280),w,c
  9744   003066  104D               	iorwf	(??_floorf+2)^(0+1280),w,c
  9745   003068  104E               	iorwf	(??_floorf+3)^(0+1280),w,c
  9746   00306A  A4D8               	btfss	status,2,c
  9747   00306C  EF3A  F018         	goto	u3381
  9748   003070  EF3C  F018         	goto	u3380
  9749   003074                     u3381:
  9750   003074  EF46  F018         	goto	l4289
  9751   003078                     u3380:
  9752   003078  0E00               	movlw	0
  9753   00307A  6E57               	movwf	floorf@u^(0+1280),c
  9754   00307C  0E00               	movlw	0
  9755   00307E  6E58               	movwf	(floorf@u+1)^(0+1280),c
  9756   003080  0E00               	movlw	0
  9757   003082  6E59               	movwf	(floorf@u+2)^(0+1280),c
  9758   003084  0E00               	movlw	0
  9759   003086  6E5A               	movwf	(floorf@u+3)^(0+1280),c
  9760   003088  EF62  F018         	goto	l4293
  9761   00308C                     l4289:
  9762   00308C  90D8               	bcf	status,0,c
  9763   00308E  3457               	rlcf	floorf@u^(0+1280),w,c
  9764   003090  6E4B               	movwf	??_floorf^(0+1280),c
  9765   003092  3458               	rlcf	(floorf@u+1)^(0+1280),w,c
  9766   003094  6E4C               	movwf	(??_floorf+1)^(0+1280),c
  9767   003096  3459               	rlcf	(floorf@u+2)^(0+1280),w,c
  9768   003098  6E4D               	movwf	(??_floorf+2)^(0+1280),c
  9769   00309A  345A               	rlcf	(floorf@u+3)^(0+1280),w,c
  9770   00309C  6E4E               	movwf	(??_floorf+3)^(0+1280),c
  9771   00309E  504B               	movf	??_floorf^(0+1280),w,c
  9772   0030A0  104C               	iorwf	(??_floorf+1)^(0+1280),w,c
  9773   0030A2  104D               	iorwf	(??_floorf+2)^(0+1280),w,c
  9774   0030A4  104E               	iorwf	(??_floorf+3)^(0+1280),w,c
  9775   0030A6  B4D8               	btfsc	status,2,c
  9776   0030A8  EF58  F018         	goto	u3391
  9777   0030AC  EF5A  F018         	goto	u3390
  9778   0030B0                     u3391:
  9779   0030B0  EF62  F018         	goto	l4293
  9780   0030B4                     u3390:
  9781   0030B4  0E00               	movlw	0
  9782   0030B6  6E57               	movwf	floorf@u^(0+1280),c
  9783   0030B8  0E00               	movlw	0
  9784   0030BA  6E58               	movwf	(floorf@u+1)^(0+1280),c
  9785   0030BC  0E80               	movlw	128
  9786   0030BE  6E59               	movwf	(floorf@u+2)^(0+1280),c
  9787   0030C0  0EBF               	movlw	191
  9788   0030C2  6E5A               	movwf	(floorf@u+3)^(0+1280),c
  9789   0030C4                     l4293:
  9790   0030C4  C557  F547         	movff	floorf@u,?_floorf
  9791   0030C8  C558  F548         	movff	floorf@u+1,?_floorf+1
  9792   0030CC  C559  F549         	movff	floorf@u+2,?_floorf+2
  9793   0030D0  C55A  F54A         	movff	floorf@u+3,?_floorf+3
  9794   0030D4                     l1687:
  9795   0030D4  0012               	return		;funcret
  9796   0030D6                     __end_of_floorf:
  9797                           	callstack 0
  9798                           
  9799 ;; *************** function ___fpclassifyf *****************
  9800 ;; Defined at:
  9801 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
  9802 ;; Parameters:    Size  Location     Type
  9803 ;;  x               4    2[COMRAM] float 
  9804 ;; Auto vars:     Size  Location     Type
  9805 ;;  u               4   12[COMRAM] struct .
  9806 ;;  e               2   10[COMRAM] int 
  9807 ;; Return value:  Size  Location     Type
  9808 ;;                  2    2[COMRAM] int 
  9809 ;; Registers used:
  9810 ;;		wreg, status,2, status,0
  9811 ;; Tracked objects:
  9812 ;;		On entry : 0/0
  9813 ;;		On exit  : 0/0
  9814 ;;		Unchanged: 0/0
  9815 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9816 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9817 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9818 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9819 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9820 ;;Total ram usage:       14 bytes
  9821 ;; Hardware stack levels used: 1
  9822 ;; Hardware stack levels required when called: 4
  9823 ;; This function calls:
  9824 ;;		Nothing
  9825 ;; This function is called by:
  9826 ;;		_efgtoa
  9827 ;; This function uses a non-reentrant model
  9828 ;;
  9829                           
  9830                           	psect	text16
  9831   00361E                     __ptext16:
  9832                           	callstack 0
  9833   00361E                     ___fpclassifyf:
  9834                           	callstack 118
  9835   00361E  C5BB  F50D         	movff	___fpclassifyf@F465,___fpclassifyf@u
  9836   003622  C5BC  F50E         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  9837   003626  C5BD  F50F         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  9838   00362A  C5BE  F510         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  9839   00362E  C503  F50D         	movff	___fpclassifyf@x,___fpclassifyf@u
  9840   003632  C504  F50E         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  9841   003636  C505  F50F         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  9842   00363A  C506  F510         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  9843   00363E  C50D  F507         	movff	___fpclassifyf@u,??___fpclassifyf
  9844   003642  C50E  F508         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9845   003646  C50F  F509         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9846   00364A  C510  F50A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9847   00364E  0E18               	movlw	24
  9848   003650  EF2F  F01B         	goto	u3210
  9849   003654                     u3215:
  9850   003654  90D8               	bcf	status,0,c
  9851   003656  320A               	rrcf	(??___fpclassifyf+3)^(0+1280),f,c
  9852   003658  3209               	rrcf	(??___fpclassifyf+2)^(0+1280),f,c
  9853   00365A  3208               	rrcf	(??___fpclassifyf+1)^(0+1280),f,c
  9854   00365C  3207               	rrcf	??___fpclassifyf^(0+1280),f,c
  9855   00365E                     u3210:
  9856   00365E  2EE8               	decfsz	wreg,f,c
  9857   003660  EF2A  F01B         	goto	u3215
  9858   003664  5007               	movf	??___fpclassifyf^(0+1280),w,c
  9859   003666  6E0B               	movwf	___fpclassifyf@e^(0+1280),c
  9860   003668  6A0C               	clrf	(___fpclassifyf@e+1)^(0+1280),c
  9861   00366A  500B               	movf	___fpclassifyf@e^(0+1280),w,c
  9862   00366C  100C               	iorwf	(___fpclassifyf@e+1)^(0+1280),w,c
  9863   00366E  A4D8               	btfss	status,2,c
  9864   003670  EF3C  F01B         	goto	u3221
  9865   003674  EF3E  F01B         	goto	u3220
  9866   003678                     u3221:
  9867   003678  EF5E  F01B         	goto	l4247
  9868   00367C                     u3220:
  9869   00367C  90D8               	bcf	status,0,c
  9870   00367E  340D               	rlcf	___fpclassifyf@u^(0+1280),w,c
  9871   003680  6E07               	movwf	??___fpclassifyf^(0+1280),c
  9872   003682  340E               	rlcf	(___fpclassifyf@u+1)^(0+1280),w,c
  9873   003684  6E08               	movwf	(??___fpclassifyf+1)^(0+1280),c
  9874   003686  340F               	rlcf	(___fpclassifyf@u+2)^(0+1280),w,c
  9875   003688  6E09               	movwf	(??___fpclassifyf+2)^(0+1280),c
  9876   00368A  3410               	rlcf	(___fpclassifyf@u+3)^(0+1280),w,c
  9877   00368C  6E0A               	movwf	(??___fpclassifyf+3)^(0+1280),c
  9878   00368E  5007               	movf	??___fpclassifyf^(0+1280),w,c
  9879   003690  1008               	iorwf	(??___fpclassifyf+1)^(0+1280),w,c
  9880   003692  1009               	iorwf	(??___fpclassifyf+2)^(0+1280),w,c
  9881   003694  100A               	iorwf	(??___fpclassifyf+3)^(0+1280),w,c
  9882   003696  A4D8               	btfss	status,2,c
  9883   003698  EF50  F01B         	goto	u3231
  9884   00369C  EF52  F01B         	goto	u3230
  9885   0036A0                     u3231:
  9886   0036A0  EF58  F01B         	goto	l4243
  9887   0036A4                     u3230:
  9888   0036A4  0E00               	movlw	0
  9889   0036A6  6E04               	movwf	(?___fpclassifyf+1)^(0+1280),c
  9890   0036A8  0E02               	movlw	2
  9891   0036AA  6E03               	movwf	?___fpclassifyf^(0+1280),c
  9892   0036AC  EF8D  F01B         	goto	l1680
  9893   0036B0                     l4243:
  9894   0036B0  0E00               	movlw	0
  9895   0036B2  6E04               	movwf	(?___fpclassifyf+1)^(0+1280),c
  9896   0036B4  0E03               	movlw	3
  9897   0036B6  6E03               	movwf	?___fpclassifyf^(0+1280),c
  9898   0036B8  EF8D  F01B         	goto	l1680
  9899   0036BC                     l4247:
  9900   0036BC  280B               	incf	___fpclassifyf@e^(0+1280),w,c
  9901   0036BE  100C               	iorwf	(___fpclassifyf@e+1)^(0+1280),w,c
  9902   0036C0  A4D8               	btfss	status,2,c
  9903   0036C2  EF65  F01B         	goto	u3241
  9904   0036C6  EF67  F01B         	goto	u3240
  9905   0036CA                     u3241:
  9906   0036CA  EF89  F01B         	goto	l4253
  9907   0036CE                     u3240:
  9908   0036CE  C50D  F507         	movff	___fpclassifyf@u,??___fpclassifyf
  9909   0036D2  C50E  F508         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9910   0036D6  C50F  F509         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9911   0036DA  C510  F50A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9912   0036DE  0E09               	movlw	9
  9913   0036E0                     u3255:
  9914   0036E0  90D8               	bcf	status,0,c
  9915   0036E2  3607               	rlcf	??___fpclassifyf^(0+1280),f,c
  9916   0036E4  3608               	rlcf	(??___fpclassifyf+1)^(0+1280),f,c
  9917   0036E6  3609               	rlcf	(??___fpclassifyf+2)^(0+1280),f,c
  9918   0036E8  360A               	rlcf	(??___fpclassifyf+3)^(0+1280),f,c
  9919   0036EA  2EE8               	decfsz	wreg,f,c
  9920   0036EC  EF70  F01B         	goto	u3255
  9921   0036F0  5007               	movf	??___fpclassifyf^(0+1280),w,c
  9922   0036F2  1008               	iorwf	(??___fpclassifyf+1)^(0+1280),w,c
  9923   0036F4  1009               	iorwf	(??___fpclassifyf+2)^(0+1280),w,c
  9924   0036F6  100A               	iorwf	(??___fpclassifyf+3)^(0+1280),w,c
  9925   0036F8  B4D8               	btfsc	status,2,c
  9926   0036FA  EF81  F01B         	goto	u3261
  9927   0036FE  EF84  F01B         	goto	u3260
  9928   003702                     u3261:
  9929   003702  0E01               	movlw	1
  9930   003704  EF85  F01B         	goto	u3270
  9931   003708                     u3260:
  9932   003708  0E00               	movlw	0
  9933   00370A                     u3270:
  9934   00370A  6E03               	movwf	?___fpclassifyf^(0+1280),c
  9935   00370C  6A04               	clrf	(?___fpclassifyf+1)^(0+1280),c
  9936   00370E  EF8D  F01B         	goto	l1680
  9937   003712                     l4253:
  9938   003712  0E00               	movlw	0
  9939   003714  6E04               	movwf	(?___fpclassifyf+1)^(0+1280),c
  9940   003716  0E04               	movlw	4
  9941   003718  6E03               	movwf	?___fpclassifyf^(0+1280),c
  9942   00371A                     l1680:
  9943   00371A  0012               	return		;funcret
  9944   00371C                     __end_of___fpclassifyf:
  9945                           	callstack 0
  9946                           
  9947 ;; *************** function ___fltol *****************
  9948 ;; Defined at:
  9949 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
  9950 ;; Parameters:    Size  Location     Type
  9951 ;;  f1              4    2[COMRAM] int 
  9952 ;; Auto vars:     Size  Location     Type
  9953 ;;  exp1            1   11[COMRAM] unsigned char 
  9954 ;;  sign1           1   10[COMRAM] unsigned char 
  9955 ;; Return value:  Size  Location     Type
  9956 ;;                  4    2[COMRAM] long 
  9957 ;; Registers used:
  9958 ;;		wreg, status,2, status,0
  9959 ;; Tracked objects:
  9960 ;;		On entry : 0/0
  9961 ;;		On exit  : 0/0
  9962 ;;		Unchanged: 0/0
  9963 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9964 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9965 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9966 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9967 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9968 ;;Total ram usage:       10 bytes
  9969 ;; Hardware stack levels used: 1
  9970 ;; Hardware stack levels required when called: 4
  9971 ;; This function calls:
  9972 ;;		Nothing
  9973 ;; This function is called by:
  9974 ;;		_efgtoa
  9975 ;; This function uses a non-reentrant model
  9976 ;;
  9977                           
  9978                           	psect	text17
  9979   003414                     __ptext17:
  9980                           	callstack 0
  9981   003414                     ___fltol:
  9982                           	callstack 118
  9983   003414  3405               	rlcf	(___fltol@f1+2)^(0+1280),w,c
  9984   003416  3406               	rlcf	(___fltol@f1+3)^(0+1280),w,c
  9985   003418  6E0C               	movwf	___fltol@exp1^(0+1280),c
  9986   00341A  500C               	movf	___fltol@exp1^(0+1280),w,c
  9987   00341C  A4D8               	btfss	status,2,c
  9988   00341E  EF13  F01A         	goto	u3121
  9989   003422  EF15  F01A         	goto	u3120
  9990   003426                     u3121:
  9991   003426  EF1F  F01A         	goto	l4185
  9992   00342A                     u3120:
  9993   00342A                     l4181:
  9994   00342A  0E00               	movlw	0
  9995   00342C  6E03               	movwf	?___fltol^(0+1280),c
  9996   00342E  0E00               	movlw	0
  9997   003430  6E04               	movwf	(?___fltol+1)^(0+1280),c
  9998   003432  0E00               	movlw	0
  9999   003434  6E05               	movwf	(?___fltol+2)^(0+1280),c
 10000   003436  0E00               	movlw	0
 10001   003438  6E06               	movwf	(?___fltol+3)^(0+1280),c
 10002   00343A  EF8C  F01A         	goto	l1171
 10003   00343E                     l4185:
 10004   00343E  C503  F507         	movff	___fltol@f1,??___fltol
 10005   003442  C504  F508         	movff	___fltol@f1+1,??___fltol+1
 10006   003446  C505  F509         	movff	___fltol@f1+2,??___fltol+2
 10007   00344A  C506  F50A         	movff	___fltol@f1+3,??___fltol+3
 10008   00344E  0E20               	movlw	32
 10009   003450  EF2F  F01A         	goto	u3130
 10010   003454                     u3135:
 10011   003454  90D8               	bcf	status,0,c
 10012   003456  320A               	rrcf	(??___fltol+3)^(0+1280),f,c
 10013   003458  3209               	rrcf	(??___fltol+2)^(0+1280),f,c
 10014   00345A  3208               	rrcf	(??___fltol+1)^(0+1280),f,c
 10015   00345C  3207               	rrcf	??___fltol^(0+1280),f,c
 10016   00345E                     u3130:
 10017   00345E  2EE8               	decfsz	wreg,f,c
 10018   003460  EF2A  F01A         	goto	u3135
 10019   003464  5007               	movf	??___fltol^(0+1280),w,c
 10020   003466  6E0B               	movwf	___fltol@sign1^(0+1280),c
 10021   003468  8E05               	bsf	(___fltol@f1+2)^(0+1280),7,c
 10022   00346A  0EFF               	movlw	255
 10023   00346C  1603               	andwf	___fltol@f1^(0+1280),f,c
 10024   00346E  0EFF               	movlw	255
 10025   003470  1604               	andwf	(___fltol@f1+1)^(0+1280),f,c
 10026   003472  0EFF               	movlw	255
 10027   003474  1605               	andwf	(___fltol@f1+2)^(0+1280),f,c
 10028   003476  0E00               	movlw	0
 10029   003478  1606               	andwf	(___fltol@f1+3)^(0+1280),f,c
 10030   00347A  0E96               	movlw	150
 10031   00347C  5E0C               	subwf	___fltol@exp1^(0+1280),f,c
 10032   00347E  BE0C               	btfsc	___fltol@exp1^(0+1280),7,c
 10033   003480  EF46  F01A         	goto	u3140
 10034   003484  EF44  F01A         	goto	u3141
 10035   003488                     u3141:
 10036   003488  EF5C  F01A         	goto	l4205
 10037   00348C                     u3140:
 10038   00348C  500C               	movf	___fltol@exp1^(0+1280),w,c
 10039   00348E  0A80               	xorlw	128
 10040   003490  0F97               	addlw	151
 10041   003492  B0D8               	btfsc	status,0,c
 10042   003494  EF4E  F01A         	goto	u3151
 10043   003498  EF50  F01A         	goto	u3150
 10044   00349C                     u3151:
 10045   00349C  EF52  F01A         	goto	l4201
 10046   0034A0                     u3150:
 10047   0034A0  EF15  F01A         	goto	l4181
 10048   0034A4                     l4201:
 10049   0034A4  90D8               	bcf	status,0,c
 10050   0034A6  3206               	rrcf	(___fltol@f1+3)^(0+1280),f,c
 10051   0034A8  3205               	rrcf	(___fltol@f1+2)^(0+1280),f,c
 10052   0034AA  3204               	rrcf	(___fltol@f1+1)^(0+1280),f,c
 10053   0034AC  3203               	rrcf	___fltol@f1^(0+1280),f,c
 10054   0034AE  3E0C               	incfsz	___fltol@exp1^(0+1280),f,c
 10055   0034B0  EF52  F01A         	goto	l4201
 10056   0034B4  EF74  F01A         	goto	l4215
 10057   0034B8                     l4205:
 10058   0034B8  0E1F               	movlw	31
 10059   0034BA  640C               	cpfsgt	___fltol@exp1^(0+1280),c
 10060   0034BC  EF62  F01A         	goto	u3161
 10061   0034C0  EF64  F01A         	goto	u3160
 10062   0034C4                     u3161:
 10063   0034C4  EF6C  F01A         	goto	l4213
 10064   0034C8                     u3160:
 10065   0034C8  EF15  F01A         	goto	l4181
 10066   0034CC                     l4211:
 10067   0034CC  90D8               	bcf	status,0,c
 10068   0034CE  3603               	rlcf	___fltol@f1^(0+1280),f,c
 10069   0034D0  3604               	rlcf	(___fltol@f1+1)^(0+1280),f,c
 10070   0034D2  3605               	rlcf	(___fltol@f1+2)^(0+1280),f,c
 10071   0034D4  3606               	rlcf	(___fltol@f1+3)^(0+1280),f,c
 10072   0034D6  060C               	decf	___fltol@exp1^(0+1280),f,c
 10073   0034D8                     l4213:
 10074   0034D8  500C               	movf	___fltol@exp1^(0+1280),w,c
 10075   0034DA  A4D8               	btfss	status,2,c
 10076   0034DC  EF72  F01A         	goto	u3171
 10077   0034E0  EF74  F01A         	goto	u3170
 10078   0034E4                     u3171:
 10079   0034E4  EF66  F01A         	goto	l4211
 10080   0034E8                     u3170:
 10081   0034E8                     l4215:
 10082   0034E8  500B               	movf	___fltol@sign1^(0+1280),w,c
 10083   0034EA  B4D8               	btfsc	status,2,c
 10084   0034EC  EF7A  F01A         	goto	u3181
 10085   0034F0  EF7C  F01A         	goto	u3180
 10086   0034F4                     u3181:
 10087   0034F4  EF84  F01A         	goto	l4219
 10088   0034F8                     u3180:
 10089   0034F8  1E06               	comf	(___fltol@f1+3)^(0+1280),f,c
 10090   0034FA  1E05               	comf	(___fltol@f1+2)^(0+1280),f,c
 10091   0034FC  1E04               	comf	(___fltol@f1+1)^(0+1280),f,c
 10092   0034FE  6C03               	negf	___fltol@f1^(0+1280),c
 10093   003500  0E00               	movlw	0
 10094   003502  2204               	addwfc	(___fltol@f1+1)^(0+1280),f,c
 10095   003504  2205               	addwfc	(___fltol@f1+2)^(0+1280),f,c
 10096   003506  2206               	addwfc	(___fltol@f1+3)^(0+1280),f,c
 10097   003508                     l4219:
 10098   003508  C503  F503         	movff	___fltol@f1,?___fltol
 10099   00350C  C504  F504         	movff	___fltol@f1+1,?___fltol+1
 10100   003510  C505  F505         	movff	___fltol@f1+2,?___fltol+2
 10101   003514  C506  F506         	movff	___fltol@f1+3,?___fltol+3
 10102   003518                     l1171:
 10103   003518  0012               	return		;funcret
 10104   00351A                     __end_of___fltol:
 10105                           	callstack 0
 10106                           
 10107 ;; *************** function ___flsub *****************
 10108 ;; Defined at:
 10109 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 10110 ;; Parameters:    Size  Location     Type
 10111 ;;  b               4   45[COMRAM] long 
 10112 ;;  a               4   49[COMRAM] long 
 10113 ;; Auto vars:     Size  Location     Type
 10114 ;;		None
 10115 ;; Return value:  Size  Location     Type
 10116 ;;                  4   45[COMRAM] long 
 10117 ;; Registers used:
 10118 ;;		wreg, status,2, status,0, cstack
 10119 ;; Tracked objects:
 10120 ;;		On entry : 0/0
 10121 ;;		On exit  : 0/0
 10122 ;;		Unchanged: 0/0
 10123 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 10124 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10127 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10128 ;;Total ram usage:        8 bytes
 10129 ;; Hardware stack levels used: 1
 10130 ;; Hardware stack levels required when called: 5
 10131 ;; This function calls:
 10132 ;;		___fladd
 10133 ;; This function is called by:
 10134 ;;		_efgtoa
 10135 ;; This function uses a non-reentrant model
 10136 ;;
 10137                           
 10138                           	psect	text18
 10139   003D2E                     __ptext18:
 10140                           	callstack 0
 10141   003D2E                     ___flsub:
 10142                           	callstack 117
 10143   003D2E  0E00               	movlw	0
 10144   003D30  1A32               	xorwf	___flsub@a^(0+1280),f,c
 10145   003D32  0E00               	movlw	0
 10146   003D34  1A33               	xorwf	(___flsub@a+1)^(0+1280),f,c
 10147   003D36  0E00               	movlw	0
 10148   003D38  1A34               	xorwf	(___flsub@a+2)^(0+1280),f,c
 10149   003D3A  0E80               	movlw	128
 10150   003D3C  1A35               	xorwf	(___flsub@a+3)^(0+1280),f,c
 10151   003D3E  C52E  F503         	movff	___flsub@b,___fladd@b
 10152   003D42  C52F  F504         	movff	___flsub@b+1,___fladd@b+1
 10153   003D46  C530  F505         	movff	___flsub@b+2,___fladd@b+2
 10154   003D4A  C531  F506         	movff	___flsub@b+3,___fladd@b+3
 10155   003D4E  C532  F507         	movff	___flsub@a,___fladd@a
 10156   003D52  C533  F508         	movff	___flsub@a+1,___fladd@a+1
 10157   003D56  C534  F509         	movff	___flsub@a+2,___fladd@a+2
 10158   003D5A  C535  F50A         	movff	___flsub@a+3,___fladd@a+3
 10159   003D5E  EC21  F010         	call	___fladd	;wreg free
 10160   003D62  C503  F52E         	movff	?___fladd,?___flsub
 10161   003D66  C504  F52F         	movff	?___fladd+1,?___flsub+1
 10162   003D6A  C505  F530         	movff	?___fladd+2,?___flsub+2
 10163   003D6E  C506  F531         	movff	?___fladd+3,?___flsub+3
 10164   003D72  0012               	return		;funcret
 10165   003D74                     __end_of___flsub:
 10166                           	callstack 0
 10167                           
 10168 ;; *************** function ___fladd *****************
 10169 ;; Defined at:
 10170 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 10171 ;; Parameters:    Size  Location     Type
 10172 ;;  b               4    2[COMRAM] long 
 10173 ;;  a               4    6[COMRAM] long 
 10174 ;; Auto vars:     Size  Location     Type
 10175 ;;  grs             1   17[COMRAM] unsigned char 
 10176 ;;  bexp            1   16[COMRAM] unsigned char 
 10177 ;;  aexp            1   15[COMRAM] unsigned char 
 10178 ;;  signs           1   14[COMRAM] unsigned char 
 10179 ;; Return value:  Size  Location     Type
 10180 ;;                  4    2[COMRAM] unsigned char 
 10181 ;; Registers used:
 10182 ;;		wreg, status,2, status,0
 10183 ;; Tracked objects:
 10184 ;;		On entry : 0/0
 10185 ;;		On exit  : 0/0
 10186 ;;		Unchanged: 0/0
 10187 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 10188 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10189 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10190 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10191 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10192 ;;Total ram usage:       16 bytes
 10193 ;; Hardware stack levels used: 1
 10194 ;; Hardware stack levels required when called: 4
 10195 ;; This function calls:
 10196 ;;		Nothing
 10197 ;; This function is called by:
 10198 ;;		___flsub
 10199 ;;		_efgtoa
 10200 ;; This function uses a non-reentrant model
 10201 ;;
 10202                           
 10203                           	psect	text19
 10204   002042                     __ptext19:
 10205                           	callstack 0
 10206   002042                     ___fladd:
 10207                           	callstack 117
 10208   002042  5006               	movf	(___fladd@b+3)^(0+1280),w,c
 10209   002044  0B80               	andlw	128
 10210   002046  6E0F               	movwf	___fladd@signs^(0+1280),c
 10211   002048  5006               	movf	(___fladd@b+3)^(0+1280),w,c
 10212   00204A  2406               	addwf	(___fladd@b+3)^(0+1280),w,c
 10213   00204C  6E11               	movwf	___fladd@bexp^(0+1280),c
 10214   00204E  AE05               	btfss	(___fladd@b+2)^(0+1280),7,c
 10215   002050  EF2C  F010         	goto	u2211
 10216   002054  EF2E  F010         	goto	u2210
 10217   002058                     u2211:
 10218   002058  EF2F  F010         	goto	l3667
 10219   00205C                     u2210:
 10220   00205C  8011               	bsf	___fladd@bexp^(0+1280),0,c
 10221   00205E                     l3667:
 10222   00205E  5011               	movf	___fladd@bexp^(0+1280),w,c
 10223   002060  B4D8               	btfsc	status,2,c
 10224   002062  EF35  F010         	goto	u2221
 10225   002066  EF37  F010         	goto	u2220
 10226   00206A                     u2221:
 10227   00206A  EF4B  F010         	goto	l3677
 10228   00206E                     u2220:
 10229   00206E  2811               	incf	___fladd@bexp^(0+1280),w,c
 10230   002070  A4D8               	btfss	status,2,c
 10231   002072  EF3D  F010         	goto	u2231
 10232   002076  EF3F  F010         	goto	u2230
 10233   00207A                     u2231:
 10234   00207A  EF47  F010         	goto	l3673
 10235   00207E                     u2230:
 10236   00207E  0E00               	movlw	0
 10237   002080  6E03               	movwf	___fladd@b^(0+1280),c
 10238   002082  0E00               	movlw	0
 10239   002084  6E04               	movwf	(___fladd@b+1)^(0+1280),c
 10240   002086  0E00               	movlw	0
 10241   002088  6E05               	movwf	(___fladd@b+2)^(0+1280),c
 10242   00208A  0E00               	movlw	0
 10243   00208C  6E06               	movwf	(___fladd@b+3)^(0+1280),c
 10244   00208E                     l3673:
 10245   00208E  8E05               	bsf	(___fladd@b+2)^(0+1280),7,c
 10246   002090  6A06               	clrf	(___fladd@b+3)^(0+1280),c
 10247   002092  EF53  F010         	goto	l3679
 10248   002096                     l3677:
 10249   002096  0E00               	movlw	0
 10250   002098  6E03               	movwf	___fladd@b^(0+1280),c
 10251   00209A  0E00               	movlw	0
 10252   00209C  6E04               	movwf	(___fladd@b+1)^(0+1280),c
 10253   00209E  0E00               	movlw	0
 10254   0020A0  6E05               	movwf	(___fladd@b+2)^(0+1280),c
 10255   0020A2  0E00               	movlw	0
 10256   0020A4  6E06               	movwf	(___fladd@b+3)^(0+1280),c
 10257   0020A6                     l3679:
 10258   0020A6  500A               	movf	(___fladd@a+3)^(0+1280),w,c
 10259   0020A8  0B80               	andlw	128
 10260   0020AA  6E10               	movwf	___fladd@aexp^(0+1280),c
 10261   0020AC  500F               	movf	___fladd@signs^(0+1280),w,c
 10262   0020AE  1810               	xorwf	___fladd@aexp^(0+1280),w,c
 10263   0020B0  B4D8               	btfsc	status,2,c
 10264   0020B2  EF5D  F010         	goto	u2241
 10265   0020B6  EF5F  F010         	goto	u2240
 10266   0020BA                     u2241:
 10267   0020BA  EF60  F010         	goto	l3685
 10268   0020BE                     u2240:
 10269   0020BE  8C0F               	bsf	___fladd@signs^(0+1280),6,c
 10270   0020C0                     l3685:
 10271   0020C0  500A               	movf	(___fladd@a+3)^(0+1280),w,c
 10272   0020C2  240A               	addwf	(___fladd@a+3)^(0+1280),w,c
 10273   0020C4  6E10               	movwf	___fladd@aexp^(0+1280),c
 10274   0020C6  AE09               	btfss	(___fladd@a+2)^(0+1280),7,c
 10275   0020C8  EF68  F010         	goto	u2251
 10276   0020CC  EF6A  F010         	goto	u2250
 10277   0020D0                     u2251:
 10278   0020D0  EF6B  F010         	goto	l3691
 10279   0020D4                     u2250:
 10280   0020D4  8010               	bsf	___fladd@aexp^(0+1280),0,c
 10281   0020D6                     l3691:
 10282   0020D6  5010               	movf	___fladd@aexp^(0+1280),w,c
 10283   0020D8  B4D8               	btfsc	status,2,c
 10284   0020DA  EF71  F010         	goto	u2261
 10285   0020DE  EF73  F010         	goto	u2260
 10286   0020E2                     u2261:
 10287   0020E2  EF87  F010         	goto	l3701
 10288   0020E6                     u2260:
 10289   0020E6  2810               	incf	___fladd@aexp^(0+1280),w,c
 10290   0020E8  A4D8               	btfss	status,2,c
 10291   0020EA  EF79  F010         	goto	u2271
 10292   0020EE  EF7B  F010         	goto	u2270
 10293   0020F2                     u2271:
 10294   0020F2  EF83  F010         	goto	l3697
 10295   0020F6                     u2270:
 10296   0020F6  0E00               	movlw	0
 10297   0020F8  6E07               	movwf	___fladd@a^(0+1280),c
 10298   0020FA  0E00               	movlw	0
 10299   0020FC  6E08               	movwf	(___fladd@a+1)^(0+1280),c
 10300   0020FE  0E00               	movlw	0
 10301   002100  6E09               	movwf	(___fladd@a+2)^(0+1280),c
 10302   002102  0E00               	movlw	0
 10303   002104  6E0A               	movwf	(___fladd@a+3)^(0+1280),c
 10304   002106                     l3697:
 10305   002106  8E09               	bsf	(___fladd@a+2)^(0+1280),7,c
 10306   002108  6A0A               	clrf	(___fladd@a+3)^(0+1280),c
 10307   00210A  EF8F  F010         	goto	l3703
 10308   00210E                     l3701:
 10309   00210E  0E00               	movlw	0
 10310   002110  6E07               	movwf	___fladd@a^(0+1280),c
 10311   002112  0E00               	movlw	0
 10312   002114  6E08               	movwf	(___fladd@a+1)^(0+1280),c
 10313   002116  0E00               	movlw	0
 10314   002118  6E09               	movwf	(___fladd@a+2)^(0+1280),c
 10315   00211A  0E00               	movlw	0
 10316   00211C  6E0A               	movwf	(___fladd@a+3)^(0+1280),c
 10317   00211E                     l3703:
 10318   00211E  5011               	movf	___fladd@bexp^(0+1280),w,c
 10319   002120  5C10               	subwf	___fladd@aexp^(0+1280),w,c
 10320   002122  B0D8               	btfsc	status,0,c
 10321   002124  EF96  F010         	goto	u2281
 10322   002128  EF98  F010         	goto	u2280
 10323   00212C                     u2281:
 10324   00212C  EFBF  F010         	goto	l3739
 10325   002130                     u2280:
 10326   002130  AC0F               	btfss	___fladd@signs^(0+1280),6,c
 10327   002132  EF9D  F010         	goto	u2291
 10328   002136  EF9F  F010         	goto	u2290
 10329   00213A                     u2291:
 10330   00213A  EFA1  F010         	goto	l3709
 10331   00213E                     u2290:
 10332   00213E  0E80               	movlw	128
 10333   002140  1A0F               	xorwf	___fladd@signs^(0+1280),f,c
 10334   002142                     l3709:
 10335   002142  C511  F512         	movff	___fladd@bexp,___fladd@grs
 10336   002146  C510  F511         	movff	___fladd@aexp,___fladd@bexp
 10337   00214A  C512  F510         	movff	___fladd@grs,___fladd@aexp
 10338   00214E  C503  F512         	movff	___fladd@b,___fladd@grs
 10339   002152  C507  F503         	movff	___fladd@a,___fladd@b
 10340   002156  C512  F507         	movff	___fladd@grs,___fladd@a
 10341   00215A  C504  F512         	movff	___fladd@b+1,___fladd@grs
 10342   00215E  C508  F504         	movff	___fladd@a+1,___fladd@b+1
 10343   002162  C512  F508         	movff	___fladd@grs,___fladd@a+1
 10344   002166  C505  F512         	movff	___fladd@b+2,___fladd@grs
 10345   00216A  C509  F505         	movff	___fladd@a+2,___fladd@b+2
 10346   00216E  C512  F509         	movff	___fladd@grs,___fladd@a+2
 10347   002172  C506  F512         	movff	___fladd@b+3,___fladd@grs
 10348   002176  C50A  F506         	movff	___fladd@a+3,___fladd@b+3
 10349   00217A  C512  F50A         	movff	___fladd@grs,___fladd@a+3
 10350   00217E                     l3739:
 10351   00217E  6A12               	clrf	___fladd@grs^(0+1280),c
 10352   002180  5011               	movf	___fladd@bexp^(0+1280),w,c
 10353   002182  C510  F50B         	movff	___fladd@aexp,??___fladd
 10354   002186  6A0C               	clrf	(??___fladd+1)^(0+1280),c
 10355   002188  5E0B               	subwf	??___fladd^(0+1280),f,c
 10356   00218A  0E00               	movlw	0
 10357   00218C  5A0C               	subwfb	(??___fladd+1)^(0+1280),f,c
 10358   00218E  BE0C               	btfsc	(??___fladd+1)^(0+1280),7,c
 10359   002190  EFD3  F010         	goto	u2301
 10360   002194  500C               	movf	(??___fladd+1)^(0+1280),w,c
 10361   002196  E109               	bnz	u2300
 10362   002198  0E1A               	movlw	26
 10363   00219A  5C0B               	subwf	??___fladd^(0+1280),w,c
 10364   00219C  A0D8               	btfss	status,0,c
 10365   00219E  EFD3  F010         	goto	u2301
 10366   0021A2  EFD5  F010         	goto	u2300
 10367   0021A6                     u2301:
 10368   0021A6  EF0C  F011         	goto	l1403
 10369   0021AA                     u2300:
 10370   0021AA  5003               	movf	___fladd@b^(0+1280),w,c
 10371   0021AC  1004               	iorwf	(___fladd@b+1)^(0+1280),w,c
 10372   0021AE  1005               	iorwf	(___fladd@b+2)^(0+1280),w,c
 10373   0021B0  1006               	iorwf	(___fladd@b+3)^(0+1280),w,c
 10374   0021B2  A4D8               	btfss	status,2,c
 10375   0021B4  EFDE  F010         	goto	u2311
 10376   0021B8  EFE1  F010         	goto	u2310
 10377   0021BC                     u2311:
 10378   0021BC  0E01               	movlw	1
 10379   0021BE  EFE2  F010         	goto	u2320
 10380   0021C2                     u2310:
 10381   0021C2  0E00               	movlw	0
 10382   0021C4                     u2320:
 10383   0021C4  6E12               	movwf	___fladd@grs^(0+1280),c
 10384   0021C6  0E00               	movlw	0
 10385   0021C8  6E03               	movwf	___fladd@b^(0+1280),c
 10386   0021CA  0E00               	movlw	0
 10387   0021CC  6E04               	movwf	(___fladd@b+1)^(0+1280),c
 10388   0021CE  0E00               	movlw	0
 10389   0021D0  6E05               	movwf	(___fladd@b+2)^(0+1280),c
 10390   0021D2  0E00               	movlw	0
 10391   0021D4  6E06               	movwf	(___fladd@b+3)^(0+1280),c
 10392   0021D6  C510  F511         	movff	___fladd@aexp,___fladd@bexp
 10393   0021DA  EF15  F011         	goto	l1402
 10394   0021DE                     l1404:
 10395   0021DE  A012               	btfss	___fladd@grs^(0+1280),0,c
 10396   0021E0  EFF4  F010         	goto	u2331
 10397   0021E4  EFF6  F010         	goto	u2330
 10398   0021E8                     u2331:
 10399   0021E8  EFFC  F010         	goto	l3749
 10400   0021EC                     u2330:
 10401   0021EC  90D8               	bcf	status,0,c
 10402   0021EE  3012               	rrcf	___fladd@grs^(0+1280),w,c
 10403   0021F0  0901               	iorlw	1
 10404   0021F2  6E12               	movwf	___fladd@grs^(0+1280),c
 10405   0021F4  EFFE  F010         	goto	l3751
 10406   0021F8                     l3749:
 10407   0021F8  90D8               	bcf	status,0,c
 10408   0021FA  3212               	rrcf	___fladd@grs^(0+1280),f,c
 10409   0021FC                     l3751:
 10410   0021FC  A003               	btfss	___fladd@b^(0+1280),0,c
 10411   0021FE  EF03  F011         	goto	u2341
 10412   002202  EF05  F011         	goto	u2340
 10413   002206                     u2341:
 10414   002206  EF06  F011         	goto	l3755
 10415   00220A                     u2340:
 10416   00220A  8E12               	bsf	___fladd@grs^(0+1280),7,c
 10417   00220C                     l3755:
 10418   00220C  3406               	rlcf	(___fladd@b+3)^(0+1280),w,c
 10419   00220E  3206               	rrcf	(___fladd@b+3)^(0+1280),f,c
 10420   002210  3205               	rrcf	(___fladd@b+2)^(0+1280),f,c
 10421   002212  3204               	rrcf	(___fladd@b+1)^(0+1280),f,c
 10422   002214  3203               	rrcf	___fladd@b^(0+1280),f,c
 10423   002216  2A11               	incf	___fladd@bexp^(0+1280),f,c
 10424   002218                     l1403:
 10425   002218  5010               	movf	___fladd@aexp^(0+1280),w,c
 10426   00221A  5C11               	subwf	___fladd@bexp^(0+1280),w,c
 10427   00221C  A0D8               	btfss	status,0,c
 10428   00221E  EF13  F011         	goto	u2351
 10429   002222  EF15  F011         	goto	u2350
 10430   002226                     u2351:
 10431   002226  EFEF  F010         	goto	l1404
 10432   00222A                     u2350:
 10433   00222A                     l1402:
 10434   00222A  BC0F               	btfsc	___fladd@signs^(0+1280),6,c
 10435   00222C  EF1A  F011         	goto	u2361
 10436   002230  EF1C  F011         	goto	u2360
 10437   002234                     u2361:
 10438   002234  EF5C  F011         	goto	l3783
 10439   002238                     u2360:
 10440   002238  5011               	movf	___fladd@bexp^(0+1280),w,c
 10441   00223A  A4D8               	btfss	status,2,c
 10442   00223C  EF22  F011         	goto	u2371
 10443   002240  EF24  F011         	goto	u2370
 10444   002244                     u2371:
 10445   002244  EF2E  F011         	goto	l3765
 10446   002248                     u2370:
 10447   002248  0E00               	movlw	0
 10448   00224A  6E03               	movwf	?___fladd^(0+1280),c
 10449   00224C  0E00               	movlw	0
 10450   00224E  6E04               	movwf	(?___fladd+1)^(0+1280),c
 10451   002250  0E00               	movlw	0
 10452   002252  6E05               	movwf	(?___fladd+2)^(0+1280),c
 10453   002254  0E00               	movlw	0
 10454   002256  6E06               	movwf	(?___fladd+3)^(0+1280),c
 10455   002258  EF7B  F012         	goto	l1411
 10456   00225C                     l3765:
 10457   00225C  5007               	movf	___fladd@a^(0+1280),w,c
 10458   00225E  2603               	addwf	___fladd@b^(0+1280),f,c
 10459   002260  5008               	movf	(___fladd@a+1)^(0+1280),w,c
 10460   002262  2204               	addwfc	(___fladd@b+1)^(0+1280),f,c
 10461   002264  5009               	movf	(___fladd@a+2)^(0+1280),w,c
 10462   002266  2205               	addwfc	(___fladd@b+2)^(0+1280),f,c
 10463   002268  500A               	movf	(___fladd@a+3)^(0+1280),w,c
 10464   00226A  2206               	addwfc	(___fladd@b+3)^(0+1280),f,c
 10465   00226C  A006               	btfss	(___fladd@b+3)^(0+1280),0,c
 10466   00226E  EF3B  F011         	goto	u2381
 10467   002272  EF3D  F011         	goto	u2380
 10468   002276                     u2381:
 10469   002276  EFE9  F011         	goto	l1416
 10470   00227A                     u2380:
 10471   00227A  A012               	btfss	___fladd@grs^(0+1280),0,c
 10472   00227C  EF42  F011         	goto	u2391
 10473   002280  EF44  F011         	goto	u2390
 10474   002284                     u2391:
 10475   002284  EF4A  F011         	goto	l3773
 10476   002288                     u2390:
 10477   002288  90D8               	bcf	status,0,c
 10478   00228A  3012               	rrcf	___fladd@grs^(0+1280),w,c
 10479   00228C  0901               	iorlw	1
 10480   00228E  6E12               	movwf	___fladd@grs^(0+1280),c
 10481   002290  EF4C  F011         	goto	l3775
 10482   002294                     l3773:
 10483   002294  90D8               	bcf	status,0,c
 10484   002296  3212               	rrcf	___fladd@grs^(0+1280),f,c
 10485   002298                     l3775:
 10486   002298  A003               	btfss	___fladd@b^(0+1280),0,c
 10487   00229A  EF51  F011         	goto	u2401
 10488   00229E  EF53  F011         	goto	u2400
 10489   0022A2                     u2401:
 10490   0022A2  EF54  F011         	goto	l3779
 10491   0022A6                     u2400:
 10492   0022A6  8E12               	bsf	___fladd@grs^(0+1280),7,c
 10493   0022A8                     l3779:
 10494   0022A8  3406               	rlcf	(___fladd@b+3)^(0+1280),w,c
 10495   0022AA  3206               	rrcf	(___fladd@b+3)^(0+1280),f,c
 10496   0022AC  3205               	rrcf	(___fladd@b+2)^(0+1280),f,c
 10497   0022AE  3204               	rrcf	(___fladd@b+1)^(0+1280),f,c
 10498   0022B0  3203               	rrcf	___fladd@b^(0+1280),f,c
 10499   0022B2  2A11               	incf	___fladd@bexp^(0+1280),f,c
 10500   0022B4  EFE9  F011         	goto	l1416
 10501   0022B8                     l3783:
 10502   0022B8  5007               	movf	___fladd@a^(0+1280),w,c
 10503   0022BA  5C03               	subwf	___fladd@b^(0+1280),w,c
 10504   0022BC  5008               	movf	(___fladd@a+1)^(0+1280),w,c
 10505   0022BE  5804               	subwfb	(___fladd@b+1)^(0+1280),w,c
 10506   0022C0  5009               	movf	(___fladd@a+2)^(0+1280),w,c
 10507   0022C2  5805               	subwfb	(___fladd@b+2)^(0+1280),w,c
 10508   0022C4  5006               	movf	(___fladd@b+3)^(0+1280),w,c
 10509   0022C6  0A80               	xorlw	128
 10510   0022C8  6E0B               	movwf	??___fladd^(0+1280),c
 10511   0022CA  500A               	movf	(___fladd@a+3)^(0+1280),w,c
 10512   0022CC  0A80               	xorlw	128
 10513   0022CE  580B               	subwfb	??___fladd^(0+1280),w,c
 10514   0022D0  B0D8               	btfsc	status,0,c
 10515   0022D2  EF6D  F011         	goto	u2411
 10516   0022D6  EF6F  F011         	goto	u2410
 10517   0022DA                     u2411:
 10518   0022DA  EF9A  F011         	goto	l3793
 10519   0022DE                     u2410:
 10520   0022DE  5003               	movf	___fladd@b^(0+1280),w,c
 10521   0022E0  5C07               	subwf	___fladd@a^(0+1280),w,c
 10522   0022E2  6E0B               	movwf	??___fladd^(0+1280),c
 10523   0022E4  5004               	movf	(___fladd@b+1)^(0+1280),w,c
 10524   0022E6  5808               	subwfb	(___fladd@a+1)^(0+1280),w,c
 10525   0022E8  6E0C               	movwf	(??___fladd+1)^(0+1280),c
 10526   0022EA  5005               	movf	(___fladd@b+2)^(0+1280),w,c
 10527   0022EC  5809               	subwfb	(___fladd@a+2)^(0+1280),w,c
 10528   0022EE  6E0D               	movwf	(??___fladd+2)^(0+1280),c
 10529   0022F0  5006               	movf	(___fladd@b+3)^(0+1280),w,c
 10530   0022F2  580A               	subwfb	(___fladd@a+3)^(0+1280),w,c
 10531   0022F4  6E0E               	movwf	(??___fladd+3)^(0+1280),c
 10532   0022F6  0EFF               	movlw	255
 10533   0022F8  240B               	addwf	??___fladd^(0+1280),w,c
 10534   0022FA  6E03               	movwf	___fladd@b^(0+1280),c
 10535   0022FC  0EFF               	movlw	255
 10536   0022FE  200C               	addwfc	(??___fladd+1)^(0+1280),w,c
 10537   002300  6E04               	movwf	(___fladd@b+1)^(0+1280),c
 10538   002302  0EFF               	movlw	255
 10539   002304  200D               	addwfc	(??___fladd+2)^(0+1280),w,c
 10540   002306  6E05               	movwf	(___fladd@b+2)^(0+1280),c
 10541   002308  0EFF               	movlw	255
 10542   00230A  200E               	addwfc	(??___fladd+3)^(0+1280),w,c
 10543   00230C  6E06               	movwf	(___fladd@b+3)^(0+1280),c
 10544   00230E  0E80               	movlw	128
 10545   002310  1A0F               	xorwf	___fladd@signs^(0+1280),f,c
 10546   002312  6C12               	negf	___fladd@grs^(0+1280),c
 10547   002314  5012               	movf	___fladd@grs^(0+1280),w,c
 10548   002316  A4D8               	btfss	status,2,c
 10549   002318  EF90  F011         	goto	u2421
 10550   00231C  EF92  F011         	goto	u2420
 10551   002320                     u2421:
 10552   002320  EFA2  F011         	goto	l1419
 10553   002324                     u2420:
 10554   002324  0E01               	movlw	1
 10555   002326  2603               	addwf	___fladd@b^(0+1280),f,c
 10556   002328  0E00               	movlw	0
 10557   00232A  2204               	addwfc	(___fladd@b+1)^(0+1280),f,c
 10558   00232C  2205               	addwfc	(___fladd@b+2)^(0+1280),f,c
 10559   00232E  2206               	addwfc	(___fladd@b+3)^(0+1280),f,c
 10560   002330  EFA2  F011         	goto	l1419
 10561   002334                     l3793:
 10562   002334  5007               	movf	___fladd@a^(0+1280),w,c
 10563   002336  5E03               	subwf	___fladd@b^(0+1280),f,c
 10564   002338  5008               	movf	(___fladd@a+1)^(0+1280),w,c
 10565   00233A  5A04               	subwfb	(___fladd@b+1)^(0+1280),f,c
 10566   00233C  5009               	movf	(___fladd@a+2)^(0+1280),w,c
 10567   00233E  5A05               	subwfb	(___fladd@b+2)^(0+1280),f,c
 10568   002340  500A               	movf	(___fladd@a+3)^(0+1280),w,c
 10569   002342  5A06               	subwfb	(___fladd@b+3)^(0+1280),f,c
 10570   002344                     l1419:
 10571   002344  5003               	movf	___fladd@b^(0+1280),w,c
 10572   002346  1004               	iorwf	(___fladd@b+1)^(0+1280),w,c
 10573   002348  1005               	iorwf	(___fladd@b+2)^(0+1280),w,c
 10574   00234A  1006               	iorwf	(___fladd@b+3)^(0+1280),w,c
 10575   00234C  A4D8               	btfss	status,2,c
 10576   00234E  EFAB  F011         	goto	u2431
 10577   002352  EFAD  F011         	goto	u2430
 10578   002356                     u2431:
 10579   002356  EFE2  F011         	goto	l3817
 10580   00235A                     u2430:
 10581   00235A  5012               	movf	___fladd@grs^(0+1280),w,c
 10582   00235C  A4D8               	btfss	status,2,c
 10583   00235E  EFB3  F011         	goto	u2441
 10584   002362  EFB5  F011         	goto	u2440
 10585   002366                     u2441:
 10586   002366  EFE2  F011         	goto	l3817
 10587   00236A                     u2440:
 10588   00236A  0E00               	movlw	0
 10589   00236C  6E03               	movwf	?___fladd^(0+1280),c
 10590   00236E  0E00               	movlw	0
 10591   002370  6E04               	movwf	(?___fladd+1)^(0+1280),c
 10592   002372  0E00               	movlw	0
 10593   002374  6E05               	movwf	(?___fladd+2)^(0+1280),c
 10594   002376  0E00               	movlw	0
 10595   002378  6E06               	movwf	(?___fladd+3)^(0+1280),c
 10596   00237A  EF7B  F012         	goto	l1411
 10597   00237E                     l3801:
 10598   00237E  90D8               	bcf	status,0,c
 10599   002380  3603               	rlcf	___fladd@b^(0+1280),f,c
 10600   002382  3604               	rlcf	(___fladd@b+1)^(0+1280),f,c
 10601   002384  3605               	rlcf	(___fladd@b+2)^(0+1280),f,c
 10602   002386  3606               	rlcf	(___fladd@b+3)^(0+1280),f,c
 10603   002388  AE12               	btfss	___fladd@grs^(0+1280),7,c
 10604   00238A  EFC9  F011         	goto	u2451
 10605   00238E  EFCB  F011         	goto	u2450
 10606   002392                     u2451:
 10607   002392  EFCC  F011         	goto	l3807
 10608   002396                     u2450:
 10609   002396  8003               	bsf	___fladd@b^(0+1280),0,c
 10610   002398                     l3807:
 10611   002398  A012               	btfss	___fladd@grs^(0+1280),0,c
 10612   00239A  EFD1  F011         	goto	u2461
 10613   00239E  EFD3  F011         	goto	u2460
 10614   0023A2                     u2461:
 10615   0023A2  EFD7  F011         	goto	l3811
 10616   0023A6                     u2460:
 10617   0023A6  80D8               	bsf	status,0,c
 10618   0023A8  3612               	rlcf	___fladd@grs^(0+1280),f,c
 10619   0023AA  EFD9  F011         	goto	l3813
 10620   0023AE                     l3811:
 10621   0023AE  90D8               	bcf	status,0,c
 10622   0023B0  3612               	rlcf	___fladd@grs^(0+1280),f,c
 10623   0023B2                     l3813:
 10624   0023B2  5011               	movf	___fladd@bexp^(0+1280),w,c
 10625   0023B4  B4D8               	btfsc	status,2,c
 10626   0023B6  EFDF  F011         	goto	u2471
 10627   0023BA  EFE1  F011         	goto	u2470
 10628   0023BE                     u2471:
 10629   0023BE  EFE2  F011         	goto	l3817
 10630   0023C2                     u2470:
 10631   0023C2  0611               	decf	___fladd@bexp^(0+1280),f,c
 10632   0023C4                     l3817:
 10633   0023C4  AE05               	btfss	(___fladd@b+2)^(0+1280),7,c
 10634   0023C6  EFE7  F011         	goto	u2481
 10635   0023CA  EFE9  F011         	goto	u2480
 10636   0023CE                     u2481:
 10637   0023CE  EFBF  F011         	goto	l3801
 10638   0023D2                     u2480:
 10639   0023D2                     l1416:
 10640   0023D2  6A10               	clrf	___fladd@aexp^(0+1280),c
 10641   0023D4  AE12               	btfss	___fladd@grs^(0+1280),7,c
 10642   0023D6  EFEF  F011         	goto	u2491
 10643   0023DA  EFF1  F011         	goto	u2490
 10644   0023DE                     u2491:
 10645   0023DE  EF09  F012         	goto	l1428
 10646   0023E2                     u2490:
 10647   0023E2  C512  F50B         	movff	___fladd@grs,??___fladd
 10648   0023E6  0E7F               	movlw	127
 10649   0023E8  160B               	andwf	??___fladd^(0+1280),f,c
 10650   0023EA  B4D8               	btfsc	status,2,c
 10651   0023EC  EFFA  F011         	goto	u2501
 10652   0023F0  EFFC  F011         	goto	u2500
 10653   0023F4                     u2501:
 10654   0023F4  EF00  F012         	goto	l1429
 10655   0023F8                     u2500:
 10656   0023F8                     l3821:
 10657   0023F8  0E01               	movlw	1
 10658   0023FA  6E10               	movwf	___fladd@aexp^(0+1280),c
 10659   0023FC  EF09  F012         	goto	l1428
 10660   002400                     l1429:
 10661   002400  A003               	btfss	___fladd@b^(0+1280),0,c
 10662   002402  EF05  F012         	goto	u2511
 10663   002406  EF07  F012         	goto	u2510
 10664   00240A                     u2511:
 10665   00240A  EF09  F012         	goto	l1428
 10666   00240E                     u2510:
 10667   00240E  EFFC  F011         	goto	l3821
 10668   002412                     l1428:
 10669   002412  5010               	movf	___fladd@aexp^(0+1280),w,c
 10670   002414  B4D8               	btfsc	status,2,c
 10671   002416  EF0F  F012         	goto	u2521
 10672   00241A  EF11  F012         	goto	u2520
 10673   00241E                     u2521:
 10674   00241E  EF3C  F012         	goto	l3833
 10675   002422                     u2520:
 10676   002422  0E01               	movlw	1
 10677   002424  2603               	addwf	___fladd@b^(0+1280),f,c
 10678   002426  0E00               	movlw	0
 10679   002428  2204               	addwfc	(___fladd@b+1)^(0+1280),f,c
 10680   00242A  2205               	addwfc	(___fladd@b+2)^(0+1280),f,c
 10681   00242C  2206               	addwfc	(___fladd@b+3)^(0+1280),f,c
 10682   00242E  A006               	btfss	(___fladd@b+3)^(0+1280),0,c
 10683   002430  EF1C  F012         	goto	u2531
 10684   002434  EF1E  F012         	goto	u2530
 10685   002438                     u2531:
 10686   002438  EF3C  F012         	goto	l3833
 10687   00243C                     u2530:
 10688   00243C  C503  F50B         	movff	___fladd@b,??___fladd
 10689   002440  C504  F50C         	movff	___fladd@b+1,??___fladd+1
 10690   002444  C505  F50D         	movff	___fladd@b+2,??___fladd+2
 10691   002448  C506  F50E         	movff	___fladd@b+3,??___fladd+3
 10692   00244C  340E               	rlcf	(??___fladd+3)^(0+1280),w,c
 10693   00244E  320E               	rrcf	(??___fladd+3)^(0+1280),f,c
 10694   002450  320D               	rrcf	(??___fladd+2)^(0+1280),f,c
 10695   002452  320C               	rrcf	(??___fladd+1)^(0+1280),f,c
 10696   002454  320B               	rrcf	??___fladd^(0+1280),f,c
 10697   002456  C50B  F503         	movff	??___fladd,___fladd@b
 10698   00245A  C50C  F504         	movff	??___fladd+1,___fladd@b+1
 10699   00245E  C50D  F505         	movff	??___fladd+2,___fladd@b+2
 10700   002462  C50E  F506         	movff	??___fladd+3,___fladd@b+3
 10701   002466  2811               	incf	___fladd@bexp^(0+1280),w,c
 10702   002468  B4D8               	btfsc	status,2,c
 10703   00246A  EF39  F012         	goto	u2541
 10704   00246E  EF3B  F012         	goto	u2540
 10705   002472                     u2541:
 10706   002472  EF3C  F012         	goto	l3833
 10707   002476                     u2540:
 10708   002476  2A11               	incf	___fladd@bexp^(0+1280),f,c
 10709   002478                     l3833:
 10710   002478  2811               	incf	___fladd@bexp^(0+1280),w,c
 10711   00247A  B4D8               	btfsc	status,2,c
 10712   00247C  EF42  F012         	goto	u2551
 10713   002480  EF44  F012         	goto	u2550
 10714   002484                     u2551:
 10715   002484  EF4C  F012         	goto	l3837
 10716   002488                     u2550:
 10717   002488  5011               	movf	___fladd@bexp^(0+1280),w,c
 10718   00248A  A4D8               	btfss	status,2,c
 10719   00248C  EF4A  F012         	goto	u2561
 10720   002490  EF4C  F012         	goto	u2560
 10721   002494                     u2561:
 10722   002494  EF5D  F012         	goto	l1435
 10723   002498                     u2560:
 10724   002498                     l3837:
 10725   002498  0E00               	movlw	0
 10726   00249A  6E03               	movwf	___fladd@b^(0+1280),c
 10727   00249C  0E00               	movlw	0
 10728   00249E  6E04               	movwf	(___fladd@b+1)^(0+1280),c
 10729   0024A0  0E00               	movlw	0
 10730   0024A2  6E05               	movwf	(___fladd@b+2)^(0+1280),c
 10731   0024A4  0E00               	movlw	0
 10732   0024A6  6E06               	movwf	(___fladd@b+3)^(0+1280),c
 10733   0024A8  5011               	movf	___fladd@bexp^(0+1280),w,c
 10734   0024AA  A4D8               	btfss	status,2,c
 10735   0024AC  EF5A  F012         	goto	u2571
 10736   0024B0  EF5C  F012         	goto	u2570
 10737   0024B4                     u2571:
 10738   0024B4  EF5D  F012         	goto	l1435
 10739   0024B8                     u2570:
 10740   0024B8  6A0F               	clrf	___fladd@signs^(0+1280),c
 10741   0024BA                     l1435:
 10742   0024BA  A011               	btfss	___fladd@bexp^(0+1280),0,c
 10743   0024BC  EF62  F012         	goto	u2581
 10744   0024C0  EF64  F012         	goto	u2580
 10745   0024C4                     u2581:
 10746   0024C4  EF67  F012         	goto	l3843
 10747   0024C8                     u2580:
 10748   0024C8  8E05               	bsf	(___fladd@b+2)^(0+1280),7,c
 10749   0024CA  EF68  F012         	goto	l3845
 10750   0024CE                     l3843:
 10751   0024CE  9E05               	bcf	(___fladd@b+2)^(0+1280),7,c
 10752   0024D0                     l3845:
 10753   0024D0  90D8               	bcf	status,0,c
 10754   0024D2  3011               	rrcf	___fladd@bexp^(0+1280),w,c
 10755   0024D4  6E06               	movwf	(___fladd@b+3)^(0+1280),c
 10756   0024D6  AE0F               	btfss	___fladd@signs^(0+1280),7,c
 10757   0024D8  EF70  F012         	goto	u2591
 10758   0024DC  EF72  F012         	goto	u2590
 10759   0024E0                     u2591:
 10760   0024E0  EF73  F012         	goto	l3851
 10761   0024E4                     u2590:
 10762   0024E4  8E06               	bsf	(___fladd@b+3)^(0+1280),7,c
 10763   0024E6                     l3851:
 10764   0024E6  C503  F503         	movff	___fladd@b,?___fladd
 10765   0024EA  C504  F504         	movff	___fladd@b+1,?___fladd+1
 10766   0024EE  C505  F505         	movff	___fladd@b+2,?___fladd+2
 10767   0024F2  C506  F506         	movff	___fladd@b+3,?___fladd+3
 10768   0024F6                     l1411:
 10769   0024F6  0012               	return		;funcret
 10770   0024F8                     __end_of___fladd:
 10771                           	callstack 0
 10772                           
 10773 ;; *************** function ___flneg *****************
 10774 ;; Defined at:
 10775 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
 10776 ;; Parameters:    Size  Location     Type
 10777 ;;  f1              4    2[COMRAM] unsigned char 
 10778 ;; Auto vars:     Size  Location     Type
 10779 ;;		None
 10780 ;; Return value:  Size  Location     Type
 10781 ;;                  4    2[COMRAM] unsigned char 
 10782 ;; Registers used:
 10783 ;;		wreg, status,2, status,0
 10784 ;; Tracked objects:
 10785 ;;		On entry : 0/0
 10786 ;;		On exit  : 0/0
 10787 ;;		Unchanged: 0/0
 10788 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 10789 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10792 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10793 ;;Total ram usage:        4 bytes
 10794 ;; Hardware stack levels used: 1
 10795 ;; Hardware stack levels required when called: 4
 10796 ;; This function calls:
 10797 ;;		Nothing
 10798 ;; This function is called by:
 10799 ;;		_efgtoa
 10800 ;; This function uses a non-reentrant model
 10801 ;;
 10802                           
 10803                           	psect	text20
 10804   003DF4                     __ptext20:
 10805                           	callstack 0
 10806   003DF4                     ___flneg:
 10807                           	callstack 118
 10808   003DF4  5003               	movf	___flneg@f1^(0+1280),w,c
 10809   003DF6  1004               	iorwf	(___flneg@f1+1)^(0+1280),w,c
 10810   003DF8  1005               	iorwf	(___flneg@f1+2)^(0+1280),w,c
 10811   003DFA  1006               	iorwf	(___flneg@f1+3)^(0+1280),w,c
 10812   003DFC  B4D8               	btfsc	status,2,c
 10813   003DFE  EF03  F01F         	goto	u3111
 10814   003E02  EF05  F01F         	goto	u3110
 10815   003E06                     u3111:
 10816   003E06  EF0D  F01F         	goto	l4175
 10817   003E0A                     u3110:
 10818   003E0A  0E00               	movlw	0
 10819   003E0C  1A03               	xorwf	___flneg@f1^(0+1280),f,c
 10820   003E0E  0E00               	movlw	0
 10821   003E10  1A04               	xorwf	(___flneg@f1+1)^(0+1280),f,c
 10822   003E12  0E00               	movlw	0
 10823   003E14  1A05               	xorwf	(___flneg@f1+2)^(0+1280),f,c
 10824   003E16  0E80               	movlw	128
 10825   003E18  1A06               	xorwf	(___flneg@f1+3)^(0+1280),f,c
 10826   003E1A                     l4175:
 10827   003E1A  C503  F503         	movff	___flneg@f1,?___flneg
 10828   003E1E  C504  F504         	movff	___flneg@f1+1,?___flneg+1
 10829   003E22  C505  F505         	movff	___flneg@f1+2,?___flneg+2
 10830   003E26  C506  F506         	movff	___flneg@f1+3,?___flneg+3
 10831   003E2A  0012               	return		;funcret
 10832   003E2C                     __end_of___flneg:
 10833                           	callstack 0
 10834                           
 10835 ;; *************** function ___flmul *****************
 10836 ;; Defined at:
 10837 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 10838 ;; Parameters:    Size  Location     Type
 10839 ;;  b               4   20[COMRAM] unsigned char 
 10840 ;;  a               4   24[COMRAM] unsigned char 
 10841 ;; Auto vars:     Size  Location     Type
 10842 ;;  prod            4   39[COMRAM] struct .
 10843 ;;  grs             4   33[COMRAM] unsigned long 
 10844 ;;  temp            2   43[COMRAM] struct .
 10845 ;;  bexp            1   38[COMRAM] unsigned char 
 10846 ;;  aexp            1   37[COMRAM] unsigned char 
 10847 ;;  sign            1   32[COMRAM] unsigned char 
 10848 ;; Return value:  Size  Location     Type
 10849 ;;                  4   20[COMRAM] unsigned char 
 10850 ;; Registers used:
 10851 ;;		wreg, status,2, status,0, prodl, prodh
 10852 ;; Tracked objects:
 10853 ;;		On entry : 0/0
 10854 ;;		On exit  : 0/0
 10855 ;;		Unchanged: 0/0
 10856 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 10857 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10858 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10859 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10860 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10861 ;;Total ram usage:       25 bytes
 10862 ;; Hardware stack levels used: 1
 10863 ;; Hardware stack levels required when called: 4
 10864 ;; This function calls:
 10865 ;;		Nothing
 10866 ;; This function is called by:
 10867 ;;		_main
 10868 ;;		_efgtoa
 10869 ;; This function uses a non-reentrant model
 10870 ;;
 10871                           
 10872                           	psect	text21
 10873   0024F8                     __ptext21:
 10874                           	callstack 0
 10875   0024F8                     ___flmul:
 10876                           	callstack 118
 10877   0024F8  5018               	movf	(___flmul@b+3)^(0+1280),w,c
 10878   0024FA  0B80               	andlw	128
 10879   0024FC  6E21               	movwf	___flmul@sign^(0+1280),c
 10880   0024FE  5018               	movf	(___flmul@b+3)^(0+1280),w,c
 10881   002500  2418               	addwf	(___flmul@b+3)^(0+1280),w,c
 10882   002502  6E27               	movwf	___flmul@bexp^(0+1280),c
 10883   002504  AE17               	btfss	(___flmul@b+2)^(0+1280),7,c
 10884   002506  EF87  F012         	goto	u2841
 10885   00250A  EF89  F012         	goto	u2840
 10886   00250E                     u2841:
 10887   00250E  EF8A  F012         	goto	l4005
 10888   002512                     u2840:
 10889   002512  8027               	bsf	___flmul@bexp^(0+1280),0,c
 10890   002514                     l4005:
 10891   002514  5027               	movf	___flmul@bexp^(0+1280),w,c
 10892   002516  B4D8               	btfsc	status,2,c
 10893   002518  EF90  F012         	goto	u2851
 10894   00251C  EF92  F012         	goto	u2850
 10895   002520                     u2851:
 10896   002520  EFA5  F012         	goto	l4013
 10897   002524                     u2850:
 10898   002524  2827               	incf	___flmul@bexp^(0+1280),w,c
 10899   002526  A4D8               	btfss	status,2,c
 10900   002528  EF98  F012         	goto	u2861
 10901   00252C  EF9A  F012         	goto	u2860
 10902   002530                     u2861:
 10903   002530  EFA2  F012         	goto	l4011
 10904   002534                     u2860:
 10905   002534  0E00               	movlw	0
 10906   002536  6E15               	movwf	___flmul@b^(0+1280),c
 10907   002538  0E00               	movlw	0
 10908   00253A  6E16               	movwf	(___flmul@b+1)^(0+1280),c
 10909   00253C  0E00               	movlw	0
 10910   00253E  6E17               	movwf	(___flmul@b+2)^(0+1280),c
 10911   002540  0E00               	movlw	0
 10912   002542  6E18               	movwf	(___flmul@b+3)^(0+1280),c
 10913   002544                     l4011:
 10914   002544  8E17               	bsf	(___flmul@b+2)^(0+1280),7,c
 10915   002546  EFAD  F012         	goto	l4015
 10916   00254A                     l4013:
 10917   00254A  0E00               	movlw	0
 10918   00254C  6E15               	movwf	___flmul@b^(0+1280),c
 10919   00254E  0E00               	movlw	0
 10920   002550  6E16               	movwf	(___flmul@b+1)^(0+1280),c
 10921   002552  0E00               	movlw	0
 10922   002554  6E17               	movwf	(___flmul@b+2)^(0+1280),c
 10923   002556  0E00               	movlw	0
 10924   002558  6E18               	movwf	(___flmul@b+3)^(0+1280),c
 10925   00255A                     l4015:
 10926   00255A  501C               	movf	(___flmul@a+3)^(0+1280),w,c
 10927   00255C  0B80               	andlw	128
 10928   00255E  1A21               	xorwf	___flmul@sign^(0+1280),f,c
 10929   002560  501C               	movf	(___flmul@a+3)^(0+1280),w,c
 10930   002562  241C               	addwf	(___flmul@a+3)^(0+1280),w,c
 10931   002564  6E26               	movwf	___flmul@aexp^(0+1280),c
 10932   002566  AE1B               	btfss	(___flmul@a+2)^(0+1280),7,c
 10933   002568  EFB8  F012         	goto	u2871
 10934   00256C  EFBA  F012         	goto	u2870
 10935   002570                     u2871:
 10936   002570  EFBB  F012         	goto	l4023
 10937   002574                     u2870:
 10938   002574  8026               	bsf	___flmul@aexp^(0+1280),0,c
 10939   002576                     l4023:
 10940   002576  5026               	movf	___flmul@aexp^(0+1280),w,c
 10941   002578  B4D8               	btfsc	status,2,c
 10942   00257A  EFC1  F012         	goto	u2881
 10943   00257E  EFC3  F012         	goto	u2880
 10944   002582                     u2881:
 10945   002582  EFD6  F012         	goto	l4031
 10946   002586                     u2880:
 10947   002586  2826               	incf	___flmul@aexp^(0+1280),w,c
 10948   002588  A4D8               	btfss	status,2,c
 10949   00258A  EFC9  F012         	goto	u2891
 10950   00258E  EFCB  F012         	goto	u2890
 10951   002592                     u2891:
 10952   002592  EFD3  F012         	goto	l4029
 10953   002596                     u2890:
 10954   002596  0E00               	movlw	0
 10955   002598  6E19               	movwf	___flmul@a^(0+1280),c
 10956   00259A  0E00               	movlw	0
 10957   00259C  6E1A               	movwf	(___flmul@a+1)^(0+1280),c
 10958   00259E  0E00               	movlw	0
 10959   0025A0  6E1B               	movwf	(___flmul@a+2)^(0+1280),c
 10960   0025A2  0E00               	movlw	0
 10961   0025A4  6E1C               	movwf	(___flmul@a+3)^(0+1280),c
 10962   0025A6                     l4029:
 10963   0025A6  8E1B               	bsf	(___flmul@a+2)^(0+1280),7,c
 10964   0025A8  EFDE  F012         	goto	l1488
 10965   0025AC                     l4031:
 10966   0025AC  0E00               	movlw	0
 10967   0025AE  6E19               	movwf	___flmul@a^(0+1280),c
 10968   0025B0  0E00               	movlw	0
 10969   0025B2  6E1A               	movwf	(___flmul@a+1)^(0+1280),c
 10970   0025B4  0E00               	movlw	0
 10971   0025B6  6E1B               	movwf	(___flmul@a+2)^(0+1280),c
 10972   0025B8  0E00               	movlw	0
 10973   0025BA  6E1C               	movwf	(___flmul@a+3)^(0+1280),c
 10974   0025BC                     l1488:
 10975   0025BC  5026               	movf	___flmul@aexp^(0+1280),w,c
 10976   0025BE  B4D8               	btfsc	status,2,c
 10977   0025C0  EFE4  F012         	goto	u2901
 10978   0025C4  EFE6  F012         	goto	u2900
 10979   0025C8                     u2901:
 10980   0025C8  EFEE  F012         	goto	l4035
 10981   0025CC                     u2900:
 10982   0025CC  5027               	movf	___flmul@bexp^(0+1280),w,c
 10983   0025CE  A4D8               	btfss	status,2,c
 10984   0025D0  EFEC  F012         	goto	u2911
 10985   0025D4  EFEE  F012         	goto	u2910
 10986   0025D8                     u2911:
 10987   0025D8  EFF8  F012         	goto	l4039
 10988   0025DC                     u2910:
 10989   0025DC                     l4035:
 10990   0025DC  0E00               	movlw	0
 10991   0025DE  6E15               	movwf	?___flmul^(0+1280),c
 10992   0025E0  0E00               	movlw	0
 10993   0025E2  6E16               	movwf	(?___flmul+1)^(0+1280),c
 10994   0025E4  0E00               	movlw	0
 10995   0025E6  6E17               	movwf	(?___flmul+2)^(0+1280),c
 10996   0025E8  0E00               	movlw	0
 10997   0025EA  6E18               	movwf	(?___flmul+3)^(0+1280),c
 10998   0025EC  EF8E  F014         	goto	l1492
 10999   0025F0                     l4039:
 11000   0025F0  501B               	movf	(___flmul@a+2)^(0+1280),w,c
 11001   0025F2  0215               	mulwf	___flmul@b^(0+1280),c
 11002   0025F4  C4F3 F52C          	movff	prodl,___flmul@temp
 11003   0025F8  C4F4 F52D          	movff	prodh,___flmul@temp+1
 11004   0025FC  502C               	movf	___flmul@temp^(0+1280),w,c
 11005   0025FE  6E22               	movwf	___flmul@grs^(0+1280),c
 11006   002600  6A23               	clrf	(___flmul@grs+1)^(0+1280),c
 11007   002602  6A24               	clrf	(___flmul@grs+2)^(0+1280),c
 11008   002604  6A25               	clrf	(___flmul@grs+3)^(0+1280),c
 11009   002606  502D               	movf	(___flmul@temp+1)^(0+1280),w,c
 11010   002608  6E28               	movwf	___flmul@prod^(0+1280),c
 11011   00260A  6A29               	clrf	(___flmul@prod+1)^(0+1280),c
 11012   00260C  6A2A               	clrf	(___flmul@prod+2)^(0+1280),c
 11013   00260E  6A2B               	clrf	(___flmul@prod+3)^(0+1280),c
 11014   002610  501A               	movf	(___flmul@a+1)^(0+1280),w,c
 11015   002612  0216               	mulwf	(___flmul@b+1)^(0+1280),c
 11016   002614  C4F3 F52C          	movff	prodl,___flmul@temp
 11017   002618  C4F4 F52D          	movff	prodh,___flmul@temp+1
 11018   00261C  502C               	movf	___flmul@temp^(0+1280),w,c
 11019   00261E  2622               	addwf	___flmul@grs^(0+1280),f,c
 11020   002620  0E00               	movlw	0
 11021   002622  2223               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 11022   002624  2224               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 11023   002626  2225               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 11024   002628  502D               	movf	(___flmul@temp+1)^(0+1280),w,c
 11025   00262A  2628               	addwf	___flmul@prod^(0+1280),f,c
 11026   00262C  0E00               	movlw	0
 11027   00262E  2229               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 11028   002630  222A               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 11029   002632  222B               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 11030   002634  5019               	movf	___flmul@a^(0+1280),w,c
 11031   002636  0217               	mulwf	(___flmul@b+2)^(0+1280),c
 11032   002638  C4F3 F52C          	movff	prodl,___flmul@temp
 11033   00263C  C4F4 F52D          	movff	prodh,___flmul@temp+1
 11034   002640  502C               	movf	___flmul@temp^(0+1280),w,c
 11035   002642  2622               	addwf	___flmul@grs^(0+1280),f,c
 11036   002644  0E00               	movlw	0
 11037   002646  2223               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 11038   002648  2224               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 11039   00264A  2225               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 11040   00264C  502D               	movf	(___flmul@temp+1)^(0+1280),w,c
 11041   00264E  2628               	addwf	___flmul@prod^(0+1280),f,c
 11042   002650  0E00               	movlw	0
 11043   002652  2229               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 11044   002654  222A               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 11045   002656  222B               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 11046   002658  C524  F525         	movff	___flmul@grs+2,___flmul@grs+3
 11047   00265C  C523  F524         	movff	___flmul@grs+1,___flmul@grs+2
 11048   002660  C522  F523         	movff	___flmul@grs,___flmul@grs+1
 11049   002664  6A22               	clrf	___flmul@grs^(0+1280),c
 11050   002666  5019               	movf	___flmul@a^(0+1280),w,c
 11051   002668  0216               	mulwf	(___flmul@b+1)^(0+1280),c
 11052   00266A  C4F3 F52C          	movff	prodl,___flmul@temp
 11053   00266E  C4F4 F52D          	movff	prodh,___flmul@temp+1
 11054   002672  502C               	movf	___flmul@temp^(0+1280),w,c
 11055   002674  2622               	addwf	___flmul@grs^(0+1280),f,c
 11056   002676  502D               	movf	(___flmul@temp+1)^(0+1280),w,c
 11057   002678  2223               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 11058   00267A  0E00               	movlw	0
 11059   00267C  2224               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 11060   00267E  0E00               	movlw	0
 11061   002680  2225               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 11062   002682  501A               	movf	(___flmul@a+1)^(0+1280),w,c
 11063   002684  0215               	mulwf	___flmul@b^(0+1280),c
 11064   002686  C4F3 F52C          	movff	prodl,___flmul@temp
 11065   00268A  C4F4 F52D          	movff	prodh,___flmul@temp+1
 11066   00268E  502C               	movf	___flmul@temp^(0+1280),w,c
 11067   002690  2622               	addwf	___flmul@grs^(0+1280),f,c
 11068   002692  502D               	movf	(___flmul@temp+1)^(0+1280),w,c
 11069   002694  2223               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 11070   002696  0E00               	movlw	0
 11071   002698  2224               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 11072   00269A  0E00               	movlw	0
 11073   00269C  2225               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 11074   00269E  C524  F525         	movff	___flmul@grs+2,___flmul@grs+3
 11075   0026A2  C523  F524         	movff	___flmul@grs+1,___flmul@grs+2
 11076   0026A6  C522  F523         	movff	___flmul@grs,___flmul@grs+1
 11077   0026AA  6A22               	clrf	___flmul@grs^(0+1280),c
 11078   0026AC  5019               	movf	___flmul@a^(0+1280),w,c
 11079   0026AE  0215               	mulwf	___flmul@b^(0+1280),c
 11080   0026B0  C4F3 F52C          	movff	prodl,___flmul@temp
 11081   0026B4  C4F4 F52D          	movff	prodh,___flmul@temp+1
 11082   0026B8  502C               	movf	___flmul@temp^(0+1280),w,c
 11083   0026BA  2622               	addwf	___flmul@grs^(0+1280),f,c
 11084   0026BC  502D               	movf	(___flmul@temp+1)^(0+1280),w,c
 11085   0026BE  2223               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 11086   0026C0  0E00               	movlw	0
 11087   0026C2  2224               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 11088   0026C4  0E00               	movlw	0
 11089   0026C6  2225               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 11090   0026C8  501B               	movf	(___flmul@a+2)^(0+1280),w,c
 11091   0026CA  0216               	mulwf	(___flmul@b+1)^(0+1280),c
 11092   0026CC  C4F3 F52C          	movff	prodl,___flmul@temp
 11093   0026D0  C4F4 F52D          	movff	prodh,___flmul@temp+1
 11094   0026D4  502C               	movf	___flmul@temp^(0+1280),w,c
 11095   0026D6  2628               	addwf	___flmul@prod^(0+1280),f,c
 11096   0026D8  502D               	movf	(___flmul@temp+1)^(0+1280),w,c
 11097   0026DA  2229               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 11098   0026DC  0E00               	movlw	0
 11099   0026DE  222A               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 11100   0026E0  0E00               	movlw	0
 11101   0026E2  222B               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 11102   0026E4  501A               	movf	(___flmul@a+1)^(0+1280),w,c
 11103   0026E6  0217               	mulwf	(___flmul@b+2)^(0+1280),c
 11104   0026E8  C4F3 F52C          	movff	prodl,___flmul@temp
 11105   0026EC  C4F4 F52D          	movff	prodh,___flmul@temp+1
 11106   0026F0  502C               	movf	___flmul@temp^(0+1280),w,c
 11107   0026F2  2628               	addwf	___flmul@prod^(0+1280),f,c
 11108   0026F4  502D               	movf	(___flmul@temp+1)^(0+1280),w,c
 11109   0026F6  2229               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 11110   0026F8  0E00               	movlw	0
 11111   0026FA  222A               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 11112   0026FC  0E00               	movlw	0
 11113   0026FE  222B               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 11114   002700  501B               	movf	(___flmul@a+2)^(0+1280),w,c
 11115   002702  0217               	mulwf	(___flmul@b+2)^(0+1280),c
 11116   002704  C4F3 F52C          	movff	prodl,___flmul@temp
 11117   002708  C4F4 F52D          	movff	prodh,___flmul@temp+1
 11118   00270C  502C               	movf	___flmul@temp^(0+1280),w,c
 11119   00270E  6E1D               	movwf	??___flmul^(0+1280),c
 11120   002710  502D               	movf	(___flmul@temp+1)^(0+1280),w,c
 11121   002712  6E1E               	movwf	(??___flmul+1)^(0+1280),c
 11122   002714  6A1F               	clrf	(??___flmul+2)^(0+1280),c
 11123   002716  6A20               	clrf	(??___flmul+3)^(0+1280),c
 11124   002718  C51F  F520         	movff	??___flmul+2,??___flmul+3
 11125   00271C  C51E  F51F         	movff	??___flmul+1,??___flmul+2
 11126   002720  C51D  F51E         	movff	??___flmul,??___flmul+1
 11127   002724  6A1D               	clrf	??___flmul^(0+1280),c
 11128   002726  501D               	movf	??___flmul^(0+1280),w,c
 11129   002728  2628               	addwf	___flmul@prod^(0+1280),f,c
 11130   00272A  501E               	movf	(??___flmul+1)^(0+1280),w,c
 11131   00272C  2229               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 11132   00272E  501F               	movf	(??___flmul+2)^(0+1280),w,c
 11133   002730  222A               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 11134   002732  5020               	movf	(??___flmul+3)^(0+1280),w,c
 11135   002734  222B               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 11136   002736  C522  F51D         	movff	___flmul@grs,??___flmul
 11137   00273A  C523  F51E         	movff	___flmul@grs+1,??___flmul+1
 11138   00273E  C524  F51F         	movff	___flmul@grs+2,??___flmul+2
 11139   002742  C525  F520         	movff	___flmul@grs+3,??___flmul+3
 11140   002746  0E19               	movlw	25
 11141   002748  EFAB  F013         	goto	u2920
 11142   00274C                     u2925:
 11143   00274C  90D8               	bcf	status,0,c
 11144   00274E  3220               	rrcf	(??___flmul+3)^(0+1280),f,c
 11145   002750  321F               	rrcf	(??___flmul+2)^(0+1280),f,c
 11146   002752  321E               	rrcf	(??___flmul+1)^(0+1280),f,c
 11147   002754  321D               	rrcf	??___flmul^(0+1280),f,c
 11148   002756                     u2920:
 11149   002756  2EE8               	decfsz	wreg,f,c
 11150   002758  EFA6  F013         	goto	u2925
 11151   00275C  501D               	movf	??___flmul^(0+1280),w,c
 11152   00275E  2628               	addwf	___flmul@prod^(0+1280),f,c
 11153   002760  501E               	movf	(??___flmul+1)^(0+1280),w,c
 11154   002762  2229               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 11155   002764  501F               	movf	(??___flmul+2)^(0+1280),w,c
 11156   002766  222A               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 11157   002768  5020               	movf	(??___flmul+3)^(0+1280),w,c
 11158   00276A  222B               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 11159   00276C  C524  F525         	movff	___flmul@grs+2,___flmul@grs+3
 11160   002770  C523  F524         	movff	___flmul@grs+1,___flmul@grs+2
 11161   002774  C522  F523         	movff	___flmul@grs,___flmul@grs+1
 11162   002778  6A22               	clrf	___flmul@grs^(0+1280),c
 11163   00277A  5026               	movf	___flmul@aexp^(0+1280),w,c
 11164   00277C  C527  F51D         	movff	___flmul@bexp,??___flmul
 11165   002780  6A1E               	clrf	(??___flmul+1)^(0+1280),c
 11166   002782  261D               	addwf	??___flmul^(0+1280),f,c
 11167   002784  0E00               	movlw	0
 11168   002786  221E               	addwfc	(??___flmul+1)^(0+1280),f,c
 11169   002788  0E82               	movlw	130
 11170   00278A  241D               	addwf	??___flmul^(0+1280),w,c
 11171   00278C  6E2C               	movwf	___flmul@temp^(0+1280),c
 11172   00278E  0EFF               	movlw	255
 11173   002790  201E               	addwfc	(??___flmul+1)^(0+1280),w,c
 11174   002792  6E2D               	movwf	(___flmul@temp+1)^(0+1280),c
 11175   002794  EFE1  F013         	goto	l4087
 11176   002798                     l4081:
 11177   002798  90D8               	bcf	status,0,c
 11178   00279A  3628               	rlcf	___flmul@prod^(0+1280),f,c
 11179   00279C  3629               	rlcf	(___flmul@prod+1)^(0+1280),f,c
 11180   00279E  362A               	rlcf	(___flmul@prod+2)^(0+1280),f,c
 11181   0027A0  362B               	rlcf	(___flmul@prod+3)^(0+1280),f,c
 11182   0027A2  AE25               	btfss	(___flmul@grs+3)^(0+1280),7,c
 11183   0027A4  EFD6  F013         	goto	u2931
 11184   0027A8  EFD8  F013         	goto	u2930
 11185   0027AC                     u2931:
 11186   0027AC  EFD9  F013         	goto	l1495
 11187   0027B0                     u2930:
 11188   0027B0  8028               	bsf	___flmul@prod^(0+1280),0,c
 11189   0027B2                     l1495:
 11190   0027B2  90D8               	bcf	status,0,c
 11191   0027B4  3622               	rlcf	___flmul@grs^(0+1280),f,c
 11192   0027B6  3623               	rlcf	(___flmul@grs+1)^(0+1280),f,c
 11193   0027B8  3624               	rlcf	(___flmul@grs+2)^(0+1280),f,c
 11194   0027BA  3625               	rlcf	(___flmul@grs+3)^(0+1280),f,c
 11195   0027BC  062C               	decf	___flmul@temp^(0+1280),f,c
 11196   0027BE  A0D8               	btfss	status,0,c
 11197   0027C0  062D               	decf	(___flmul@temp+1)^(0+1280),f,c
 11198   0027C2                     l4087:
 11199   0027C2  AE2A               	btfss	(___flmul@prod+2)^(0+1280),7,c
 11200   0027C4  EFE6  F013         	goto	u2941
 11201   0027C8  EFE8  F013         	goto	u2940
 11202   0027CC                     u2941:
 11203   0027CC  EFCC  F013         	goto	l4081
 11204   0027D0                     u2940:
 11205   0027D0  6A26               	clrf	___flmul@aexp^(0+1280),c
 11206   0027D2  AE25               	btfss	(___flmul@grs+3)^(0+1280),7,c
 11207   0027D4  EFEE  F013         	goto	u2951
 11208   0027D8  EFF0  F013         	goto	u2950
 11209   0027DC                     u2951:
 11210   0027DC  EF14  F014         	goto	l1497
 11211   0027E0                     u2950:
 11212   0027E0  0EFF               	movlw	255
 11213   0027E2  1422               	andwf	___flmul@grs^(0+1280),w,c
 11214   0027E4  6E1D               	movwf	??___flmul^(0+1280),c
 11215   0027E6  0EFF               	movlw	255
 11216   0027E8  1423               	andwf	(___flmul@grs+1)^(0+1280),w,c
 11217   0027EA  6E1E               	movwf	(??___flmul+1)^(0+1280),c
 11218   0027EC  0EFF               	movlw	255
 11219   0027EE  1424               	andwf	(___flmul@grs+2)^(0+1280),w,c
 11220   0027F0  6E1F               	movwf	(??___flmul+2)^(0+1280),c
 11221   0027F2  0E7F               	movlw	127
 11222   0027F4  1425               	andwf	(___flmul@grs+3)^(0+1280),w,c
 11223   0027F6  6E20               	movwf	(??___flmul+3)^(0+1280),c
 11224   0027F8  501D               	movf	??___flmul^(0+1280),w,c
 11225   0027FA  101E               	iorwf	(??___flmul+1)^(0+1280),w,c
 11226   0027FC  101F               	iorwf	(??___flmul+2)^(0+1280),w,c
 11227   0027FE  1020               	iorwf	(??___flmul+3)^(0+1280),w,c
 11228   002800  B4D8               	btfsc	status,2,c
 11229   002802  EF05  F014         	goto	u2961
 11230   002806  EF07  F014         	goto	u2960
 11231   00280A                     u2961:
 11232   00280A  EF0B  F014         	goto	l1498
 11233   00280E                     u2960:
 11234   00280E                     l4091:
 11235   00280E  0E01               	movlw	1
 11236   002810  6E26               	movwf	___flmul@aexp^(0+1280),c
 11237   002812  EF14  F014         	goto	l1497
 11238   002816                     l1498:
 11239   002816  A028               	btfss	___flmul@prod^(0+1280),0,c
 11240   002818  EF10  F014         	goto	u2971
 11241   00281C  EF12  F014         	goto	u2970
 11242   002820                     u2971:
 11243   002820  EF14  F014         	goto	l1497
 11244   002824                     u2970:
 11245   002824  EF07  F014         	goto	l4091
 11246   002828                     l1497:
 11247   002828  5026               	movf	___flmul@aexp^(0+1280),w,c
 11248   00282A  B4D8               	btfsc	status,2,c
 11249   00282C  EF1A  F014         	goto	u2981
 11250   002830  EF1C  F014         	goto	u2980
 11251   002834                     u2981:
 11252   002834  EF40  F014         	goto	l4103
 11253   002838                     u2980:
 11254   002838  0E01               	movlw	1
 11255   00283A  2628               	addwf	___flmul@prod^(0+1280),f,c
 11256   00283C  0E00               	movlw	0
 11257   00283E  2229               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 11258   002840  222A               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 11259   002842  222B               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 11260   002844  A02B               	btfss	(___flmul@prod+3)^(0+1280),0,c
 11261   002846  EF27  F014         	goto	u2991
 11262   00284A  EF29  F014         	goto	u2990
 11263   00284E                     u2991:
 11264   00284E  EF40  F014         	goto	l4103
 11265   002852                     u2990:
 11266   002852  C528  F51D         	movff	___flmul@prod,??___flmul
 11267   002856  C529  F51E         	movff	___flmul@prod+1,??___flmul+1
 11268   00285A  C52A  F51F         	movff	___flmul@prod+2,??___flmul+2
 11269   00285E  C52B  F520         	movff	___flmul@prod+3,??___flmul+3
 11270   002862  3420               	rlcf	(??___flmul+3)^(0+1280),w,c
 11271   002864  3220               	rrcf	(??___flmul+3)^(0+1280),f,c
 11272   002866  321F               	rrcf	(??___flmul+2)^(0+1280),f,c
 11273   002868  321E               	rrcf	(??___flmul+1)^(0+1280),f,c
 11274   00286A  321D               	rrcf	??___flmul^(0+1280),f,c
 11275   00286C  C51D  F528         	movff	??___flmul,___flmul@prod
 11276   002870  C51E  F529         	movff	??___flmul+1,___flmul@prod+1
 11277   002874  C51F  F52A         	movff	??___flmul+2,___flmul@prod+2
 11278   002878  C520  F52B         	movff	??___flmul+3,___flmul@prod+3
 11279   00287C  4A2C               	infsnz	___flmul@temp^(0+1280),f,c
 11280   00287E  2A2D               	incf	(___flmul@temp+1)^(0+1280),f,c
 11281   002880                     l4103:
 11282   002880  BE2D               	btfsc	(___flmul@temp+1)^(0+1280),7,c
 11283   002882  EF4B  F014         	goto	u3001
 11284   002886  502D               	movf	(___flmul@temp+1)^(0+1280),w,c
 11285   002888  E108               	bnz	u3000
 11286   00288A  282C               	incf	___flmul@temp^(0+1280),w,c
 11287   00288C  A0D8               	btfss	status,0,c
 11288   00288E  EF4B  F014         	goto	u3001
 11289   002892  EF4D  F014         	goto	u3000
 11290   002896                     u3001:
 11291   002896  EF57  F014         	goto	l4107
 11292   00289A                     u3000:
 11293   00289A  0E00               	movlw	0
 11294   00289C  6E28               	movwf	___flmul@prod^(0+1280),c
 11295   00289E  0E00               	movlw	0
 11296   0028A0  6E29               	movwf	(___flmul@prod+1)^(0+1280),c
 11297   0028A2  0E80               	movlw	128
 11298   0028A4  6E2A               	movwf	(___flmul@prod+2)^(0+1280),c
 11299   0028A6  0E7F               	movlw	127
 11300   0028A8  6E2B               	movwf	(___flmul@prod+3)^(0+1280),c
 11301   0028AA  EF84  F014         	goto	l4121
 11302   0028AE                     l4107:
 11303   0028AE  BE2D               	btfsc	(___flmul@temp+1)^(0+1280),7,c
 11304   0028B0  EF64  F014         	goto	u3010
 11305   0028B4  502D               	movf	(___flmul@temp+1)^(0+1280),w,c
 11306   0028B6  E106               	bnz	u3011
 11307   0028B8  042C               	decf	___flmul@temp^(0+1280),w,c
 11308   0028BA  B0D8               	btfsc	status,0,c
 11309   0028BC  EF62  F014         	goto	u3011
 11310   0028C0  EF64  F014         	goto	u3010
 11311   0028C4                     u3011:
 11312   0028C4  EF6F  F014         	goto	l1505
 11313   0028C8                     u3010:
 11314   0028C8  0E00               	movlw	0
 11315   0028CA  6E28               	movwf	___flmul@prod^(0+1280),c
 11316   0028CC  0E00               	movlw	0
 11317   0028CE  6E29               	movwf	(___flmul@prod+1)^(0+1280),c
 11318   0028D0  0E00               	movlw	0
 11319   0028D2  6E2A               	movwf	(___flmul@prod+2)^(0+1280),c
 11320   0028D4  0E00               	movlw	0
 11321   0028D6  6E2B               	movwf	(___flmul@prod+3)^(0+1280),c
 11322   0028D8  6A21               	clrf	___flmul@sign^(0+1280),c
 11323   0028DA  EF84  F014         	goto	l4121
 11324   0028DE                     l1505:
 11325   0028DE  C52C  F527         	movff	___flmul@temp,___flmul@bexp
 11326   0028E2  0EFF               	movlw	255
 11327   0028E4  1628               	andwf	___flmul@prod^(0+1280),f,c
 11328   0028E6  0EFF               	movlw	255
 11329   0028E8  1629               	andwf	(___flmul@prod+1)^(0+1280),f,c
 11330   0028EA  0E7F               	movlw	127
 11331   0028EC  162A               	andwf	(___flmul@prod+2)^(0+1280),f,c
 11332   0028EE  0E00               	movlw	0
 11333   0028F0  162B               	andwf	(___flmul@prod+3)^(0+1280),f,c
 11334   0028F2  A027               	btfss	___flmul@bexp^(0+1280),0,c
 11335   0028F4  EF7E  F014         	goto	u3021
 11336   0028F8  EF80  F014         	goto	u3020
 11337   0028FC                     u3021:
 11338   0028FC  EF81  F014         	goto	l4119
 11339   002900                     u3020:
 11340   002900  8E2A               	bsf	(___flmul@prod+2)^(0+1280),7,c
 11341   002902                     l4119:
 11342   002902  90D8               	bcf	status,0,c
 11343   002904  3027               	rrcf	___flmul@bexp^(0+1280),w,c
 11344   002906  6E2B               	movwf	(___flmul@prod+3)^(0+1280),c
 11345   002908                     l4121:
 11346   002908  5021               	movf	___flmul@sign^(0+1280),w,c
 11347   00290A  122B               	iorwf	(___flmul@prod+3)^(0+1280),f,c
 11348   00290C  C528  F515         	movff	___flmul@prod,?___flmul
 11349   002910  C529  F516         	movff	___flmul@prod+1,?___flmul+1
 11350   002914  C52A  F517         	movff	___flmul@prod+2,?___flmul+2
 11351   002918  C52B  F518         	movff	___flmul@prod+3,?___flmul+3
 11352   00291C                     l1492:
 11353   00291C  0012               	return		;funcret
 11354   00291E                     __end_of___flmul:
 11355                           	callstack 0
 11356                           
 11357 ;; *************** function ___flge *****************
 11358 ;; Defined at:
 11359 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
 11360 ;; Parameters:    Size  Location     Type
 11361 ;;  ff1             4   45[COMRAM] unsigned char 
 11362 ;;  ff2             4   49[COMRAM] unsigned char 
 11363 ;; Auto vars:     Size  Location     Type
 11364 ;;		None
 11365 ;; Return value:  Size  Location     Type
 11366 ;;		None               void
 11367 ;; Registers used:
 11368 ;;		wreg, status,2, status,0
 11369 ;; Tracked objects:
 11370 ;;		On entry : 0/0
 11371 ;;		On exit  : 0/0
 11372 ;;		Unchanged: 0/0
 11373 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 11374 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11376 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11377 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11378 ;;Total ram usage:       12 bytes
 11379 ;; Hardware stack levels used: 1
 11380 ;; Hardware stack levels required when called: 4
 11381 ;; This function calls:
 11382 ;;		Nothing
 11383 ;; This function is called by:
 11384 ;;		_efgtoa
 11385 ;; This function uses a non-reentrant model
 11386 ;;
 11387                           
 11388                           	psect	text22
 11389   00351A                     __ptext22:
 11390                           	callstack 0
 11391   00351A                     ___flge:
 11392                           	callstack 118
 11393   00351A  0E00               	movlw	0
 11394   00351C  142E               	andwf	___flge@ff1^(0+1280),w,c
 11395   00351E  6E36               	movwf	??___flge^(0+1280),c
 11396   003520  0E00               	movlw	0
 11397   003522  142F               	andwf	(___flge@ff1+1)^(0+1280),w,c
 11398   003524  6E37               	movwf	(??___flge+1)^(0+1280),c
 11399   003526  0E80               	movlw	128
 11400   003528  1430               	andwf	(___flge@ff1+2)^(0+1280),w,c
 11401   00352A  6E38               	movwf	(??___flge+2)^(0+1280),c
 11402   00352C  0E7F               	movlw	127
 11403   00352E  1431               	andwf	(___flge@ff1+3)^(0+1280),w,c
 11404   003530  6E39               	movwf	(??___flge+3)^(0+1280),c
 11405   003532  5036               	movf	??___flge^(0+1280),w,c
 11406   003534  1037               	iorwf	(??___flge+1)^(0+1280),w,c
 11407   003536  1038               	iorwf	(??___flge+2)^(0+1280),w,c
 11408   003538  1039               	iorwf	(??___flge+3)^(0+1280),w,c
 11409   00353A  A4D8               	btfss	status,2,c
 11410   00353C  EFA2  F01A         	goto	u3061
 11411   003540  EFA4  F01A         	goto	u3060
 11412   003544                     u3061:
 11413   003544  EFAC  F01A         	goto	l4153
 11414   003548                     u3060:
 11415   003548  0E00               	movlw	0
 11416   00354A  6E2E               	movwf	___flge@ff1^(0+1280),c
 11417   00354C  0E00               	movlw	0
 11418   00354E  6E2F               	movwf	(___flge@ff1+1)^(0+1280),c
 11419   003550  0E00               	movlw	0
 11420   003552  6E30               	movwf	(___flge@ff1+2)^(0+1280),c
 11421   003554  0E00               	movlw	0
 11422   003556  6E31               	movwf	(___flge@ff1+3)^(0+1280),c
 11423   003558                     l4153:
 11424   003558  0E00               	movlw	0
 11425   00355A  1432               	andwf	___flge@ff2^(0+1280),w,c
 11426   00355C  6E36               	movwf	??___flge^(0+1280),c
 11427   00355E  0E00               	movlw	0
 11428   003560  1433               	andwf	(___flge@ff2+1)^(0+1280),w,c
 11429   003562  6E37               	movwf	(??___flge+1)^(0+1280),c
 11430   003564  0E80               	movlw	128
 11431   003566  1434               	andwf	(___flge@ff2+2)^(0+1280),w,c
 11432   003568  6E38               	movwf	(??___flge+2)^(0+1280),c
 11433   00356A  0E7F               	movlw	127
 11434   00356C  1435               	andwf	(___flge@ff2+3)^(0+1280),w,c
 11435   00356E  6E39               	movwf	(??___flge+3)^(0+1280),c
 11436   003570  5036               	movf	??___flge^(0+1280),w,c
 11437   003572  1037               	iorwf	(??___flge+1)^(0+1280),w,c
 11438   003574  1038               	iorwf	(??___flge+2)^(0+1280),w,c
 11439   003576  1039               	iorwf	(??___flge+3)^(0+1280),w,c
 11440   003578  A4D8               	btfss	status,2,c
 11441   00357A  EFC1  F01A         	goto	u3071
 11442   00357E  EFC3  F01A         	goto	u3070
 11443   003582                     u3071:
 11444   003582  EFCB  F01A         	goto	l4157
 11445   003586                     u3070:
 11446   003586  0E00               	movlw	0
 11447   003588  6E32               	movwf	___flge@ff2^(0+1280),c
 11448   00358A  0E00               	movlw	0
 11449   00358C  6E33               	movwf	(___flge@ff2+1)^(0+1280),c
 11450   00358E  0E00               	movlw	0
 11451   003590  6E34               	movwf	(___flge@ff2+2)^(0+1280),c
 11452   003592  0E00               	movlw	0
 11453   003594  6E35               	movwf	(___flge@ff2+3)^(0+1280),c
 11454   003596                     l4157:
 11455   003596  AE31               	btfss	(___flge@ff1+3)^(0+1280),7,c
 11456   003598  EFD0  F01A         	goto	u3081
 11457   00359C  EFD2  F01A         	goto	u3080
 11458   0035A0                     u3081:
 11459   0035A0  EFDB  F01A         	goto	l4161
 11460   0035A4                     u3080:
 11461   0035A4  6C2E               	negf	___flge@ff1^(0+1280),c
 11462   0035A6  1E2F               	comf	(___flge@ff1+1)^(0+1280),f,c
 11463   0035A8  B0D8               	btfsc	status,0,c
 11464   0035AA  2A2F               	incf	(___flge@ff1+1)^(0+1280),f,c
 11465   0035AC  1E30               	comf	(___flge@ff1+2)^(0+1280),f,c
 11466   0035AE  B0D8               	btfsc	status,0,c
 11467   0035B0  2A30               	incf	(___flge@ff1+2)^(0+1280),f,c
 11468   0035B2  0E80               	movlw	128
 11469   0035B4  5631               	subfwb	(___flge@ff1+3)^(0+1280),f,c
 11470   0035B6                     l4161:
 11471   0035B6  AE35               	btfss	(___flge@ff2+3)^(0+1280),7,c
 11472   0035B8  EFE0  F01A         	goto	u3091
 11473   0035BC  EFE2  F01A         	goto	u3090
 11474   0035C0                     u3091:
 11475   0035C0  EFEB  F01A         	goto	l1139
 11476   0035C4                     u3090:
 11477   0035C4  6C32               	negf	___flge@ff2^(0+1280),c
 11478   0035C6  1E33               	comf	(___flge@ff2+1)^(0+1280),f,c
 11479   0035C8  B0D8               	btfsc	status,0,c
 11480   0035CA  2A33               	incf	(___flge@ff2+1)^(0+1280),f,c
 11481   0035CC  1E34               	comf	(___flge@ff2+2)^(0+1280),f,c
 11482   0035CE  B0D8               	btfsc	status,0,c
 11483   0035D0  2A34               	incf	(___flge@ff2+2)^(0+1280),f,c
 11484   0035D2  0E80               	movlw	128
 11485   0035D4  5635               	subfwb	(___flge@ff2+3)^(0+1280),f,c
 11486   0035D6                     l1139:
 11487   0035D6  0E00               	movlw	0
 11488   0035D8  1A2E               	xorwf	___flge@ff1^(0+1280),f,c
 11489   0035DA  0E00               	movlw	0
 11490   0035DC  1A2F               	xorwf	(___flge@ff1+1)^(0+1280),f,c
 11491   0035DE  0E00               	movlw	0
 11492   0035E0  1A30               	xorwf	(___flge@ff1+2)^(0+1280),f,c
 11493   0035E2  0E80               	movlw	128
 11494   0035E4  1A31               	xorwf	(___flge@ff1+3)^(0+1280),f,c
 11495   0035E6  0E00               	movlw	0
 11496   0035E8  1A32               	xorwf	___flge@ff2^(0+1280),f,c
 11497   0035EA  0E00               	movlw	0
 11498   0035EC  1A33               	xorwf	(___flge@ff2+1)^(0+1280),f,c
 11499   0035EE  0E00               	movlw	0
 11500   0035F0  1A34               	xorwf	(___flge@ff2+2)^(0+1280),f,c
 11501   0035F2  0E80               	movlw	128
 11502   0035F4  1A35               	xorwf	(___flge@ff2+3)^(0+1280),f,c
 11503   0035F6  5032               	movf	___flge@ff2^(0+1280),w,c
 11504   0035F8  5C2E               	subwf	___flge@ff1^(0+1280),w,c
 11505   0035FA  5033               	movf	(___flge@ff2+1)^(0+1280),w,c
 11506   0035FC  582F               	subwfb	(___flge@ff1+1)^(0+1280),w,c
 11507   0035FE  5034               	movf	(___flge@ff2+2)^(0+1280),w,c
 11508   003600  5830               	subwfb	(___flge@ff1+2)^(0+1280),w,c
 11509   003602  5035               	movf	(___flge@ff2+3)^(0+1280),w,c
 11510   003604  5831               	subwfb	(___flge@ff1+3)^(0+1280),w,c
 11511   003606  B0D8               	btfsc	status,0,c
 11512   003608  EF08  F01B         	goto	u3101
 11513   00360C  EF0A  F01B         	goto	u3100
 11514   003610                     u3101:
 11515   003610  EF0D  F01B         	goto	l4167
 11516   003614                     u3100:
 11517   003614  90D8               	bcf	status,0,c
 11518   003616  EF0E  F01B         	goto	l1144
 11519   00361A                     l4167:
 11520   00361A  80D8               	bsf	status,0,c
 11521   00361C                     l1144:
 11522   00361C  0012               	return		;funcret
 11523   00361E                     __end_of___flge:
 11524                           	callstack 0
 11525                           
 11526 ;; *************** function ___fleq *****************
 11527 ;; Defined at:
 11528 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
 11529 ;; Parameters:    Size  Location     Type
 11530 ;;  ff1             4    2[COMRAM] unsigned char 
 11531 ;;  ff2             4    6[COMRAM] unsigned char 
 11532 ;; Auto vars:     Size  Location     Type
 11533 ;;		None
 11534 ;; Return value:  Size  Location     Type
 11535 ;;		None               void
 11536 ;; Registers used:
 11537 ;;		wreg, status,2, status,0
 11538 ;; Tracked objects:
 11539 ;;		On entry : 0/0
 11540 ;;		On exit  : 0/0
 11541 ;;		Unchanged: 0/0
 11542 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 11543 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11545 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11546 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11547 ;;Total ram usage:       12 bytes
 11548 ;; Hardware stack levels used: 1
 11549 ;; Hardware stack levels required when called: 4
 11550 ;; This function calls:
 11551 ;;		Nothing
 11552 ;; This function is called by:
 11553 ;;		_efgtoa
 11554 ;; This function uses a non-reentrant model
 11555 ;;
 11556                           
 11557                           	psect	text23
 11558   003A2A                     __ptext23:
 11559                           	callstack 0
 11560   003A2A                     ___fleq:
 11561                           	callstack 118
 11562   003A2A  0E00               	movlw	0
 11563   003A2C  1403               	andwf	___fleq@ff1^(0+1280),w,c
 11564   003A2E  6E0B               	movwf	??___fleq^(0+1280),c
 11565   003A30  0E00               	movlw	0
 11566   003A32  1404               	andwf	(___fleq@ff1+1)^(0+1280),w,c
 11567   003A34  6E0C               	movwf	(??___fleq+1)^(0+1280),c
 11568   003A36  0E80               	movlw	128
 11569   003A38  1405               	andwf	(___fleq@ff1+2)^(0+1280),w,c
 11570   003A3A  6E0D               	movwf	(??___fleq+2)^(0+1280),c
 11571   003A3C  0E7F               	movlw	127
 11572   003A3E  1406               	andwf	(___fleq@ff1+3)^(0+1280),w,c
 11573   003A40  6E0E               	movwf	(??___fleq+3)^(0+1280),c
 11574   003A42  500B               	movf	??___fleq^(0+1280),w,c
 11575   003A44  100C               	iorwf	(??___fleq+1)^(0+1280),w,c
 11576   003A46  100D               	iorwf	(??___fleq+2)^(0+1280),w,c
 11577   003A48  100E               	iorwf	(??___fleq+3)^(0+1280),w,c
 11578   003A4A  A4D8               	btfss	status,2,c
 11579   003A4C  EF2A  F01D         	goto	u3031
 11580   003A50  EF2C  F01D         	goto	u3030
 11581   003A54                     u3031:
 11582   003A54  EF34  F01D         	goto	l4137
 11583   003A58                     u3030:
 11584   003A58  0E00               	movlw	0
 11585   003A5A  6E03               	movwf	___fleq@ff1^(0+1280),c
 11586   003A5C  0E00               	movlw	0
 11587   003A5E  6E04               	movwf	(___fleq@ff1+1)^(0+1280),c
 11588   003A60  0E00               	movlw	0
 11589   003A62  6E05               	movwf	(___fleq@ff1+2)^(0+1280),c
 11590   003A64  0E00               	movlw	0
 11591   003A66  6E06               	movwf	(___fleq@ff1+3)^(0+1280),c
 11592   003A68                     l4137:
 11593   003A68  0E00               	movlw	0
 11594   003A6A  1407               	andwf	___fleq@ff2^(0+1280),w,c
 11595   003A6C  6E0B               	movwf	??___fleq^(0+1280),c
 11596   003A6E  0E00               	movlw	0
 11597   003A70  1408               	andwf	(___fleq@ff2+1)^(0+1280),w,c
 11598   003A72  6E0C               	movwf	(??___fleq+1)^(0+1280),c
 11599   003A74  0E80               	movlw	128
 11600   003A76  1409               	andwf	(___fleq@ff2+2)^(0+1280),w,c
 11601   003A78  6E0D               	movwf	(??___fleq+2)^(0+1280),c
 11602   003A7A  0E7F               	movlw	127
 11603   003A7C  140A               	andwf	(___fleq@ff2+3)^(0+1280),w,c
 11604   003A7E  6E0E               	movwf	(??___fleq+3)^(0+1280),c
 11605   003A80  500B               	movf	??___fleq^(0+1280),w,c
 11606   003A82  100C               	iorwf	(??___fleq+1)^(0+1280),w,c
 11607   003A84  100D               	iorwf	(??___fleq+2)^(0+1280),w,c
 11608   003A86  100E               	iorwf	(??___fleq+3)^(0+1280),w,c
 11609   003A88  A4D8               	btfss	status,2,c
 11610   003A8A  EF49  F01D         	goto	u3041
 11611   003A8E  EF4B  F01D         	goto	u3040
 11612   003A92                     u3041:
 11613   003A92  EF53  F01D         	goto	l4141
 11614   003A96                     u3040:
 11615   003A96  0E00               	movlw	0
 11616   003A98  6E07               	movwf	___fleq@ff2^(0+1280),c
 11617   003A9A  0E00               	movlw	0
 11618   003A9C  6E08               	movwf	(___fleq@ff2+1)^(0+1280),c
 11619   003A9E  0E00               	movlw	0
 11620   003AA0  6E09               	movwf	(___fleq@ff2+2)^(0+1280),c
 11621   003AA2  0E00               	movlw	0
 11622   003AA4  6E0A               	movwf	(___fleq@ff2+3)^(0+1280),c
 11623   003AA6                     l4141:
 11624   003AA6  5007               	movf	___fleq@ff2^(0+1280),w,c
 11625   003AA8  1803               	xorwf	___fleq@ff1^(0+1280),w,c
 11626   003AAA  E10F               	bnz	u3050
 11627   003AAC  5008               	movf	(___fleq@ff2+1)^(0+1280),w,c
 11628   003AAE  1804               	xorwf	(___fleq@ff1+1)^(0+1280),w,c
 11629   003AB0  E10C               	bnz	u3050
 11630   003AB2  5009               	movf	(___fleq@ff2+2)^(0+1280),w,c
 11631   003AB4  1805               	xorwf	(___fleq@ff1+2)^(0+1280),w,c
 11632   003AB6  E109               	bnz	u3050
 11633   003AB8  500A               	movf	(___fleq@ff2+3)^(0+1280),w,c
 11634   003ABA  1806               	xorwf	(___fleq@ff1+3)^(0+1280),w,c
 11635   003ABC  B4D8               	btfsc	status,2,c
 11636   003ABE  EF63  F01D         	goto	u3051
 11637   003AC2  EF65  F01D         	goto	u3050
 11638   003AC6                     u3051:
 11639   003AC6  EF68  F01D         	goto	l4145
 11640   003ACA                     u3050:
 11641   003ACA  90D8               	bcf	status,0,c
 11642   003ACC  EF69  F01D         	goto	l1133
 11643   003AD0                     l4145:
 11644   003AD0  80D8               	bsf	status,0,c
 11645   003AD2                     l1133:
 11646   003AD2  0012               	return		;funcret
 11647   003AD4                     __end_of___fleq:
 11648                           	callstack 0
 11649                           
 11650 ;; *************** function ___fldiv *****************
 11651 ;; Defined at:
 11652 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
 11653 ;; Parameters:    Size  Location     Type
 11654 ;;  b               4   45[COMRAM] unsigned char 
 11655 ;;  a               4   49[COMRAM] unsigned char 
 11656 ;; Auto vars:     Size  Location     Type
 11657 ;;  grs             4   64[COMRAM] unsigned long 
 11658 ;;  rem             4   57[COMRAM] unsigned long 
 11659 ;;  new_exp         2   62[COMRAM] short 
 11660 ;;  aexp            1   69[COMRAM] unsigned char 
 11661 ;;  bexp            1   68[COMRAM] unsigned char 
 11662 ;;  sign            1   61[COMRAM] unsigned char 
 11663 ;; Return value:  Size  Location     Type
 11664 ;;                  4   45[COMRAM] unsigned char 
 11665 ;; Registers used:
 11666 ;;		wreg, status,2, status,0
 11667 ;; Tracked objects:
 11668 ;;		On entry : 0/0
 11669 ;;		On exit  : 0/0
 11670 ;;		Unchanged: 0/0
 11671 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 11672 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11673 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11674 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11675 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11676 ;;Total ram usage:       25 bytes
 11677 ;; Hardware stack levels used: 1
 11678 ;; Hardware stack levels required when called: 4
 11679 ;; This function calls:
 11680 ;;		Nothing
 11681 ;; This function is called by:
 11682 ;;		_main
 11683 ;;		_efgtoa
 11684 ;; This function uses a non-reentrant model
 11685 ;;
 11686                           
 11687                           	psect	text24
 11688   00291E                     __ptext24:
 11689                           	callstack 0
 11690   00291E                     ___fldiv:
 11691                           	callstack 118
 11692   00291E  5031               	movf	(___fldiv@b+3)^(0+1280),w,c
 11693   002920  0B80               	andlw	128
 11694   002922  6E3E               	movwf	___fldiv@sign^(0+1280),c
 11695   002924  5031               	movf	(___fldiv@b+3)^(0+1280),w,c
 11696   002926  2431               	addwf	(___fldiv@b+3)^(0+1280),w,c
 11697   002928  6E45               	movwf	___fldiv@bexp^(0+1280),c
 11698   00292A  AE30               	btfss	(___fldiv@b+2)^(0+1280),7,c
 11699   00292C  EF9A  F014         	goto	u2611
 11700   002930  EF9C  F014         	goto	u2610
 11701   002934                     u2611:
 11702   002934  EF9D  F014         	goto	l3869
 11703   002938                     u2610:
 11704   002938  8045               	bsf	___fldiv@bexp^(0+1280),0,c
 11705   00293A                     l3869:
 11706   00293A  5045               	movf	___fldiv@bexp^(0+1280),w,c
 11707   00293C  B4D8               	btfsc	status,2,c
 11708   00293E  EFA3  F014         	goto	u2621
 11709   002942  EFA5  F014         	goto	u2620
 11710   002946                     u2621:
 11711   002946  EFB9  F014         	goto	l3879
 11712   00294A                     u2620:
 11713   00294A  2845               	incf	___fldiv@bexp^(0+1280),w,c
 11714   00294C  A4D8               	btfss	status,2,c
 11715   00294E  EFAB  F014         	goto	u2631
 11716   002952  EFAD  F014         	goto	u2630
 11717   002956                     u2631:
 11718   002956  EFB5  F014         	goto	l3875
 11719   00295A                     u2630:
 11720   00295A  0E00               	movlw	0
 11721   00295C  6E2E               	movwf	___fldiv@b^(0+1280),c
 11722   00295E  0E00               	movlw	0
 11723   002960  6E2F               	movwf	(___fldiv@b+1)^(0+1280),c
 11724   002962  0E00               	movlw	0
 11725   002964  6E30               	movwf	(___fldiv@b+2)^(0+1280),c
 11726   002966  0E00               	movlw	0
 11727   002968  6E31               	movwf	(___fldiv@b+3)^(0+1280),c
 11728   00296A                     l3875:
 11729   00296A  8E30               	bsf	(___fldiv@b+2)^(0+1280),7,c
 11730   00296C  6A31               	clrf	(___fldiv@b+3)^(0+1280),c
 11731   00296E  EFC1  F014         	goto	l3881
 11732   002972                     l3879:
 11733   002972  0E00               	movlw	0
 11734   002974  6E2E               	movwf	___fldiv@b^(0+1280),c
 11735   002976  0E00               	movlw	0
 11736   002978  6E2F               	movwf	(___fldiv@b+1)^(0+1280),c
 11737   00297A  0E00               	movlw	0
 11738   00297C  6E30               	movwf	(___fldiv@b+2)^(0+1280),c
 11739   00297E  0E00               	movlw	0
 11740   002980  6E31               	movwf	(___fldiv@b+3)^(0+1280),c
 11741   002982                     l3881:
 11742   002982  5035               	movf	(___fldiv@a+3)^(0+1280),w,c
 11743   002984  0B80               	andlw	128
 11744   002986  1A3E               	xorwf	___fldiv@sign^(0+1280),f,c
 11745   002988  5035               	movf	(___fldiv@a+3)^(0+1280),w,c
 11746   00298A  2435               	addwf	(___fldiv@a+3)^(0+1280),w,c
 11747   00298C  6E46               	movwf	___fldiv@aexp^(0+1280),c
 11748   00298E  AE34               	btfss	(___fldiv@a+2)^(0+1280),7,c
 11749   002990  EFCC  F014         	goto	u2641
 11750   002994  EFCE  F014         	goto	u2640
 11751   002998                     u2641:
 11752   002998  EFCF  F014         	goto	l3889
 11753   00299C                     u2640:
 11754   00299C  8046               	bsf	___fldiv@aexp^(0+1280),0,c
 11755   00299E                     l3889:
 11756   00299E  5046               	movf	___fldiv@aexp^(0+1280),w,c
 11757   0029A0  B4D8               	btfsc	status,2,c
 11758   0029A2  EFD5  F014         	goto	u2651
 11759   0029A6  EFD7  F014         	goto	u2650
 11760   0029AA                     u2651:
 11761   0029AA  EFEB  F014         	goto	l3899
 11762   0029AE                     u2650:
 11763   0029AE  2846               	incf	___fldiv@aexp^(0+1280),w,c
 11764   0029B0  A4D8               	btfss	status,2,c
 11765   0029B2  EFDD  F014         	goto	u2661
 11766   0029B6  EFDF  F014         	goto	u2660
 11767   0029BA                     u2661:
 11768   0029BA  EFE7  F014         	goto	l3895
 11769   0029BE                     u2660:
 11770   0029BE  0E00               	movlw	0
 11771   0029C0  6E32               	movwf	___fldiv@a^(0+1280),c
 11772   0029C2  0E00               	movlw	0
 11773   0029C4  6E33               	movwf	(___fldiv@a+1)^(0+1280),c
 11774   0029C6  0E00               	movlw	0
 11775   0029C8  6E34               	movwf	(___fldiv@a+2)^(0+1280),c
 11776   0029CA  0E00               	movlw	0
 11777   0029CC  6E35               	movwf	(___fldiv@a+3)^(0+1280),c
 11778   0029CE                     l3895:
 11779   0029CE  8E34               	bsf	(___fldiv@a+2)^(0+1280),7,c
 11780   0029D0  6A35               	clrf	(___fldiv@a+3)^(0+1280),c
 11781   0029D2  EFF3  F014         	goto	l3901
 11782   0029D6                     l3899:
 11783   0029D6  0E00               	movlw	0
 11784   0029D8  6E32               	movwf	___fldiv@a^(0+1280),c
 11785   0029DA  0E00               	movlw	0
 11786   0029DC  6E33               	movwf	(___fldiv@a+1)^(0+1280),c
 11787   0029DE  0E00               	movlw	0
 11788   0029E0  6E34               	movwf	(___fldiv@a+2)^(0+1280),c
 11789   0029E2  0E00               	movlw	0
 11790   0029E4  6E35               	movwf	(___fldiv@a+3)^(0+1280),c
 11791   0029E6                     l3901:
 11792   0029E6  5032               	movf	___fldiv@a^(0+1280),w,c
 11793   0029E8  1033               	iorwf	(___fldiv@a+1)^(0+1280),w,c
 11794   0029EA  1034               	iorwf	(___fldiv@a+2)^(0+1280),w,c
 11795   0029EC  1035               	iorwf	(___fldiv@a+3)^(0+1280),w,c
 11796   0029EE  A4D8               	btfss	status,2,c
 11797   0029F0  EFFC  F014         	goto	u2671
 11798   0029F4  EFFE  F014         	goto	u2670
 11799   0029F8                     u2671:
 11800   0029F8  EF16  F015         	goto	l3913
 11801   0029FC                     u2670:
 11802   0029FC  0E00               	movlw	0
 11803   0029FE  6E2E               	movwf	___fldiv@b^(0+1280),c
 11804   002A00  0E00               	movlw	0
 11805   002A02  6E2F               	movwf	(___fldiv@b+1)^(0+1280),c
 11806   002A04  0E00               	movlw	0
 11807   002A06  6E30               	movwf	(___fldiv@b+2)^(0+1280),c
 11808   002A08  0E00               	movlw	0
 11809   002A0A  6E31               	movwf	(___fldiv@b+3)^(0+1280),c
 11810   002A0C  0E80               	movlw	128
 11811   002A0E  1230               	iorwf	(___fldiv@b+2)^(0+1280),f,c
 11812   002A10  0E7F               	movlw	127
 11813   002A12  1231               	iorwf	(___fldiv@b+3)^(0+1280),f,c
 11814   002A14                     l3907:
 11815   002A14  503E               	movf	___fldiv@sign^(0+1280),w,c
 11816   002A16  1231               	iorwf	(___fldiv@b+3)^(0+1280),f,c
 11817   002A18  C52E  F52E         	movff	___fldiv@b,?___fldiv
 11818   002A1C  C52F  F52F         	movff	___fldiv@b+1,?___fldiv+1
 11819   002A20  C530  F530         	movff	___fldiv@b+2,?___fldiv+2
 11820   002A24  C531  F531         	movff	___fldiv@b+3,?___fldiv+3
 11821   002A28  EF56  F016         	goto	l1456
 11822   002A2C                     l3913:
 11823   002A2C  5045               	movf	___fldiv@bexp^(0+1280),w,c
 11824   002A2E  A4D8               	btfss	status,2,c
 11825   002A30  EF1C  F015         	goto	u2681
 11826   002A34  EF1E  F015         	goto	u2680
 11827   002A38                     u2681:
 11828   002A38  EF28  F015         	goto	l3921
 11829   002A3C                     u2680:
 11830   002A3C  0E00               	movlw	0
 11831   002A3E  6E2E               	movwf	?___fldiv^(0+1280),c
 11832   002A40  0E00               	movlw	0
 11833   002A42  6E2F               	movwf	(?___fldiv+1)^(0+1280),c
 11834   002A44  0E00               	movlw	0
 11835   002A46  6E30               	movwf	(?___fldiv+2)^(0+1280),c
 11836   002A48  0E00               	movlw	0
 11837   002A4A  6E31               	movwf	(?___fldiv+3)^(0+1280),c
 11838   002A4C  EF56  F016         	goto	l1456
 11839   002A50                     l3921:
 11840   002A50  5046               	movf	___fldiv@aexp^(0+1280),w,c
 11841   002A52  C545  F536         	movff	___fldiv@bexp,??___fldiv
 11842   002A56  6A37               	clrf	(??___fldiv+1)^(0+1280),c
 11843   002A58  5E36               	subwf	??___fldiv^(0+1280),f,c
 11844   002A5A  0E00               	movlw	0
 11845   002A5C  5A37               	subwfb	(??___fldiv+1)^(0+1280),f,c
 11846   002A5E  0E7F               	movlw	127
 11847   002A60  2436               	addwf	??___fldiv^(0+1280),w,c
 11848   002A62  6E3F               	movwf	___fldiv@new_exp^(0+1280),c
 11849   002A64  0E00               	movlw	0
 11850   002A66  2037               	addwfc	(??___fldiv+1)^(0+1280),w,c
 11851   002A68  6E40               	movwf	(___fldiv@new_exp+1)^(0+1280),c
 11852   002A6A  C52E  F53A         	movff	___fldiv@b,___fldiv@rem
 11853   002A6E  C52F  F53B         	movff	___fldiv@b+1,___fldiv@rem+1
 11854   002A72  C530  F53C         	movff	___fldiv@b+2,___fldiv@rem+2
 11855   002A76  C531  F53D         	movff	___fldiv@b+3,___fldiv@rem+3
 11856   002A7A  0E00               	movlw	0
 11857   002A7C  6E2E               	movwf	___fldiv@b^(0+1280),c
 11858   002A7E  0E00               	movlw	0
 11859   002A80  6E2F               	movwf	(___fldiv@b+1)^(0+1280),c
 11860   002A82  0E00               	movlw	0
 11861   002A84  6E30               	movwf	(___fldiv@b+2)^(0+1280),c
 11862   002A86  0E00               	movlw	0
 11863   002A88  6E31               	movwf	(___fldiv@b+3)^(0+1280),c
 11864   002A8A  0E00               	movlw	0
 11865   002A8C  6E41               	movwf	___fldiv@grs^(0+1280),c
 11866   002A8E  0E00               	movlw	0
 11867   002A90  6E42               	movwf	(___fldiv@grs+1)^(0+1280),c
 11868   002A92  0E00               	movlw	0
 11869   002A94  6E43               	movwf	(___fldiv@grs+2)^(0+1280),c
 11870   002A96  0E00               	movlw	0
 11871   002A98  6E44               	movwf	(___fldiv@grs+3)^(0+1280),c
 11872   002A9A  6A46               	clrf	___fldiv@aexp^(0+1280),c
 11873   002A9C  EF88  F015         	goto	l1458
 11874   002AA0                     l3931:
 11875   002AA0  5046               	movf	___fldiv@aexp^(0+1280),w,c
 11876   002AA2  B4D8               	btfsc	status,2,c
 11877   002AA4  EF56  F015         	goto	u2691
 11878   002AA8  EF58  F015         	goto	u2690
 11879   002AAC                     u2691:
 11880   002AAC  EF6F  F015         	goto	l3939
 11881   002AB0                     u2690:
 11882   002AB0  90D8               	bcf	status,0,c
 11883   002AB2  363A               	rlcf	___fldiv@rem^(0+1280),f,c
 11884   002AB4  363B               	rlcf	(___fldiv@rem+1)^(0+1280),f,c
 11885   002AB6  363C               	rlcf	(___fldiv@rem+2)^(0+1280),f,c
 11886   002AB8  363D               	rlcf	(___fldiv@rem+3)^(0+1280),f,c
 11887   002ABA  90D8               	bcf	status,0,c
 11888   002ABC  362E               	rlcf	___fldiv@b^(0+1280),f,c
 11889   002ABE  362F               	rlcf	(___fldiv@b+1)^(0+1280),f,c
 11890   002AC0  3630               	rlcf	(___fldiv@b+2)^(0+1280),f,c
 11891   002AC2  3631               	rlcf	(___fldiv@b+3)^(0+1280),f,c
 11892   002AC4  AE44               	btfss	(___fldiv@grs+3)^(0+1280),7,c
 11893   002AC6  EF67  F015         	goto	u2701
 11894   002ACA  EF69  F015         	goto	u2700
 11895   002ACE                     u2701:
 11896   002ACE  EF6A  F015         	goto	l1461
 11897   002AD2                     u2700:
 11898   002AD2  802E               	bsf	___fldiv@b^(0+1280),0,c
 11899   002AD4                     l1461:
 11900   002AD4  90D8               	bcf	status,0,c
 11901   002AD6  3641               	rlcf	___fldiv@grs^(0+1280),f,c
 11902   002AD8  3642               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
 11903   002ADA  3643               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
 11904   002ADC  3644               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
 11905   002ADE                     l3939:
 11906   002ADE  5032               	movf	___fldiv@a^(0+1280),w,c
 11907   002AE0  5C3A               	subwf	___fldiv@rem^(0+1280),w,c
 11908   002AE2  5033               	movf	(___fldiv@a+1)^(0+1280),w,c
 11909   002AE4  583B               	subwfb	(___fldiv@rem+1)^(0+1280),w,c
 11910   002AE6  5034               	movf	(___fldiv@a+2)^(0+1280),w,c
 11911   002AE8  583C               	subwfb	(___fldiv@rem+2)^(0+1280),w,c
 11912   002AEA  5035               	movf	(___fldiv@a+3)^(0+1280),w,c
 11913   002AEC  583D               	subwfb	(___fldiv@rem+3)^(0+1280),w,c
 11914   002AEE  A0D8               	btfss	status,0,c
 11915   002AF0  EF7C  F015         	goto	u2711
 11916   002AF4  EF7E  F015         	goto	u2710
 11917   002AF8                     u2711:
 11918   002AF8  EF87  F015         	goto	l3945
 11919   002AFC                     u2710:
 11920   002AFC  8C44               	bsf	(___fldiv@grs+3)^(0+1280),6,c
 11921   002AFE  5032               	movf	___fldiv@a^(0+1280),w,c
 11922   002B00  5E3A               	subwf	___fldiv@rem^(0+1280),f,c
 11923   002B02  5033               	movf	(___fldiv@a+1)^(0+1280),w,c
 11924   002B04  5A3B               	subwfb	(___fldiv@rem+1)^(0+1280),f,c
 11925   002B06  5034               	movf	(___fldiv@a+2)^(0+1280),w,c
 11926   002B08  5A3C               	subwfb	(___fldiv@rem+2)^(0+1280),f,c
 11927   002B0A  5035               	movf	(___fldiv@a+3)^(0+1280),w,c
 11928   002B0C  5A3D               	subwfb	(___fldiv@rem+3)^(0+1280),f,c
 11929   002B0E                     l3945:
 11930   002B0E  2A46               	incf	___fldiv@aexp^(0+1280),f,c
 11931   002B10                     l1458:
 11932   002B10  0E19               	movlw	25
 11933   002B12  6446               	cpfsgt	___fldiv@aexp^(0+1280),c
 11934   002B14  EF8E  F015         	goto	u2721
 11935   002B18  EF90  F015         	goto	u2720
 11936   002B1C                     u2721:
 11937   002B1C  EF50  F015         	goto	l3931
 11938   002B20                     u2720:
 11939   002B20  503A               	movf	___fldiv@rem^(0+1280),w,c
 11940   002B22  103B               	iorwf	(___fldiv@rem+1)^(0+1280),w,c
 11941   002B24  103C               	iorwf	(___fldiv@rem+2)^(0+1280),w,c
 11942   002B26  103D               	iorwf	(___fldiv@rem+3)^(0+1280),w,c
 11943   002B28  B4D8               	btfsc	status,2,c
 11944   002B2A  EF99  F015         	goto	u2731
 11945   002B2E  EF9B  F015         	goto	u2730
 11946   002B32                     u2731:
 11947   002B32  EFB3  F015         	goto	l3957
 11948   002B36                     u2730:
 11949   002B36  8041               	bsf	___fldiv@grs^(0+1280),0,c
 11950   002B38  EFB3  F015         	goto	l3957
 11951   002B3C                     l3951:
 11952   002B3C  90D8               	bcf	status,0,c
 11953   002B3E  362E               	rlcf	___fldiv@b^(0+1280),f,c
 11954   002B40  362F               	rlcf	(___fldiv@b+1)^(0+1280),f,c
 11955   002B42  3630               	rlcf	(___fldiv@b+2)^(0+1280),f,c
 11956   002B44  3631               	rlcf	(___fldiv@b+3)^(0+1280),f,c
 11957   002B46  AE44               	btfss	(___fldiv@grs+3)^(0+1280),7,c
 11958   002B48  EFA8  F015         	goto	u2741
 11959   002B4C  EFAA  F015         	goto	u2740
 11960   002B50                     u2741:
 11961   002B50  EFAB  F015         	goto	l1467
 11962   002B54                     u2740:
 11963   002B54  802E               	bsf	___fldiv@b^(0+1280),0,c
 11964   002B56                     l1467:
 11965   002B56  90D8               	bcf	status,0,c
 11966   002B58  3641               	rlcf	___fldiv@grs^(0+1280),f,c
 11967   002B5A  3642               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
 11968   002B5C  3643               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
 11969   002B5E  3644               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
 11970   002B60  063F               	decf	___fldiv@new_exp^(0+1280),f,c
 11971   002B62  A0D8               	btfss	status,0,c
 11972   002B64  0640               	decf	(___fldiv@new_exp+1)^(0+1280),f,c
 11973   002B66                     l3957:
 11974   002B66  AE30               	btfss	(___fldiv@b+2)^(0+1280),7,c
 11975   002B68  EFB8  F015         	goto	u2751
 11976   002B6C  EFBA  F015         	goto	u2750
 11977   002B70                     u2751:
 11978   002B70  EF9E  F015         	goto	l3951
 11979   002B74                     u2750:
 11980   002B74  6A46               	clrf	___fldiv@aexp^(0+1280),c
 11981   002B76  AE44               	btfss	(___fldiv@grs+3)^(0+1280),7,c
 11982   002B78  EFC0  F015         	goto	u2761
 11983   002B7C  EFC2  F015         	goto	u2760
 11984   002B80                     u2761:
 11985   002B80  EFE6  F015         	goto	l1469
 11986   002B84                     u2760:
 11987   002B84  0EFF               	movlw	255
 11988   002B86  1441               	andwf	___fldiv@grs^(0+1280),w,c
 11989   002B88  6E36               	movwf	??___fldiv^(0+1280),c
 11990   002B8A  0EFF               	movlw	255
 11991   002B8C  1442               	andwf	(___fldiv@grs+1)^(0+1280),w,c
 11992   002B8E  6E37               	movwf	(??___fldiv+1)^(0+1280),c
 11993   002B90  0EFF               	movlw	255
 11994   002B92  1443               	andwf	(___fldiv@grs+2)^(0+1280),w,c
 11995   002B94  6E38               	movwf	(??___fldiv+2)^(0+1280),c
 11996   002B96  0E7F               	movlw	127
 11997   002B98  1444               	andwf	(___fldiv@grs+3)^(0+1280),w,c
 11998   002B9A  6E39               	movwf	(??___fldiv+3)^(0+1280),c
 11999   002B9C  5036               	movf	??___fldiv^(0+1280),w,c
 12000   002B9E  1037               	iorwf	(??___fldiv+1)^(0+1280),w,c
 12001   002BA0  1038               	iorwf	(??___fldiv+2)^(0+1280),w,c
 12002   002BA2  1039               	iorwf	(??___fldiv+3)^(0+1280),w,c
 12003   002BA4  B4D8               	btfsc	status,2,c
 12004   002BA6  EFD7  F015         	goto	u2771
 12005   002BAA  EFD9  F015         	goto	u2770
 12006   002BAE                     u2771:
 12007   002BAE  EFDD  F015         	goto	l1470
 12008   002BB2                     u2770:
 12009   002BB2                     l3961:
 12010   002BB2  0E01               	movlw	1
 12011   002BB4  6E46               	movwf	___fldiv@aexp^(0+1280),c
 12012   002BB6  EFE6  F015         	goto	l1469
 12013   002BBA                     l1470:
 12014   002BBA  A02E               	btfss	___fldiv@b^(0+1280),0,c
 12015   002BBC  EFE2  F015         	goto	u2781
 12016   002BC0  EFE4  F015         	goto	u2780
 12017   002BC4                     u2781:
 12018   002BC4  EFE6  F015         	goto	l1469
 12019   002BC8                     u2780:
 12020   002BC8  EFD9  F015         	goto	l3961
 12021   002BCC                     l1469:
 12022   002BCC  5046               	movf	___fldiv@aexp^(0+1280),w,c
 12023   002BCE  B4D8               	btfsc	status,2,c
 12024   002BD0  EFEC  F015         	goto	u2791
 12025   002BD4  EFEE  F015         	goto	u2790
 12026   002BD8                     u2791:
 12027   002BD8  EF12  F016         	goto	l3973
 12028   002BDC                     u2790:
 12029   002BDC  0E01               	movlw	1
 12030   002BDE  262E               	addwf	___fldiv@b^(0+1280),f,c
 12031   002BE0  0E00               	movlw	0
 12032   002BE2  222F               	addwfc	(___fldiv@b+1)^(0+1280),f,c
 12033   002BE4  2230               	addwfc	(___fldiv@b+2)^(0+1280),f,c
 12034   002BE6  2231               	addwfc	(___fldiv@b+3)^(0+1280),f,c
 12035   002BE8  A031               	btfss	(___fldiv@b+3)^(0+1280),0,c
 12036   002BEA  EFF9  F015         	goto	u2801
 12037   002BEE  EFFB  F015         	goto	u2800
 12038   002BF2                     u2801:
 12039   002BF2  EF12  F016         	goto	l3973
 12040   002BF6                     u2800:
 12041   002BF6  C52E  F536         	movff	___fldiv@b,??___fldiv
 12042   002BFA  C52F  F537         	movff	___fldiv@b+1,??___fldiv+1
 12043   002BFE  C530  F538         	movff	___fldiv@b+2,??___fldiv+2
 12044   002C02  C531  F539         	movff	___fldiv@b+3,??___fldiv+3
 12045   002C06  3439               	rlcf	(??___fldiv+3)^(0+1280),w,c
 12046   002C08  3239               	rrcf	(??___fldiv+3)^(0+1280),f,c
 12047   002C0A  3238               	rrcf	(??___fldiv+2)^(0+1280),f,c
 12048   002C0C  3237               	rrcf	(??___fldiv+1)^(0+1280),f,c
 12049   002C0E  3236               	rrcf	??___fldiv^(0+1280),f,c
 12050   002C10  C536  F52E         	movff	??___fldiv,___fldiv@b
 12051   002C14  C537  F52F         	movff	??___fldiv+1,___fldiv@b+1
 12052   002C18  C538  F530         	movff	??___fldiv+2,___fldiv@b+2
 12053   002C1C  C539  F531         	movff	??___fldiv+3,___fldiv@b+3
 12054   002C20  4A3F               	infsnz	___fldiv@new_exp^(0+1280),f,c
 12055   002C22  2A40               	incf	(___fldiv@new_exp+1)^(0+1280),f,c
 12056   002C24                     l3973:
 12057   002C24  BE40               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
 12058   002C26  EF1D  F016         	goto	u2811
 12059   002C2A  5040               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
 12060   002C2C  E108               	bnz	u2810
 12061   002C2E  283F               	incf	___fldiv@new_exp^(0+1280),w,c
 12062   002C30  A0D8               	btfss	status,0,c
 12063   002C32  EF1D  F016         	goto	u2811
 12064   002C36  EF1F  F016         	goto	u2810
 12065   002C3A                     u2811:
 12066   002C3A  EF2A  F016         	goto	l3977
 12067   002C3E                     u2810:
 12068   002C3E  0E00               	movlw	0
 12069   002C40  6E40               	movwf	(___fldiv@new_exp+1)^(0+1280),c
 12070   002C42  683F               	setf	___fldiv@new_exp^(0+1280),c
 12071   002C44  0E00               	movlw	0
 12072   002C46  6E2E               	movwf	___fldiv@b^(0+1280),c
 12073   002C48  0E00               	movlw	0
 12074   002C4A  6E2F               	movwf	(___fldiv@b+1)^(0+1280),c
 12075   002C4C  0E00               	movlw	0
 12076   002C4E  6E30               	movwf	(___fldiv@b+2)^(0+1280),c
 12077   002C50  0E00               	movlw	0
 12078   002C52  6E31               	movwf	(___fldiv@b+3)^(0+1280),c
 12079   002C54                     l3977:
 12080   002C54  BE40               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
 12081   002C56  EF37  F016         	goto	u2820
 12082   002C5A  5040               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
 12083   002C5C  E106               	bnz	u2821
 12084   002C5E  043F               	decf	___fldiv@new_exp^(0+1280),w,c
 12085   002C60  B0D8               	btfsc	status,0,c
 12086   002C62  EF35  F016         	goto	u2821
 12087   002C66  EF37  F016         	goto	u2820
 12088   002C6A                     u2821:
 12089   002C6A  EF44  F016         	goto	l3983
 12090   002C6E                     u2820:
 12091   002C6E  0E00               	movlw	0
 12092   002C70  6E40               	movwf	(___fldiv@new_exp+1)^(0+1280),c
 12093   002C72  0E00               	movlw	0
 12094   002C74  6E3F               	movwf	___fldiv@new_exp^(0+1280),c
 12095   002C76  0E00               	movlw	0
 12096   002C78  6E2E               	movwf	___fldiv@b^(0+1280),c
 12097   002C7A  0E00               	movlw	0
 12098   002C7C  6E2F               	movwf	(___fldiv@b+1)^(0+1280),c
 12099   002C7E  0E00               	movlw	0
 12100   002C80  6E30               	movwf	(___fldiv@b+2)^(0+1280),c
 12101   002C82  0E00               	movlw	0
 12102   002C84  6E31               	movwf	(___fldiv@b+3)^(0+1280),c
 12103   002C86  6A3E               	clrf	___fldiv@sign^(0+1280),c
 12104   002C88                     l3983:
 12105   002C88  C53F  F545         	movff	___fldiv@new_exp,___fldiv@bexp
 12106   002C8C  A045               	btfss	___fldiv@bexp^(0+1280),0,c
 12107   002C8E  EF4B  F016         	goto	u2831
 12108   002C92  EF4D  F016         	goto	u2830
 12109   002C96                     u2831:
 12110   002C96  EF50  F016         	goto	l3989
 12111   002C9A                     u2830:
 12112   002C9A  8E30               	bsf	(___fldiv@b+2)^(0+1280),7,c
 12113   002C9C  EF51  F016         	goto	l3991
 12114   002CA0                     l3989:
 12115   002CA0  9E30               	bcf	(___fldiv@b+2)^(0+1280),7,c
 12116   002CA2                     l3991:
 12117   002CA2  90D8               	bcf	status,0,c
 12118   002CA4  3045               	rrcf	___fldiv@bexp^(0+1280),w,c
 12119   002CA6  6E31               	movwf	(___fldiv@b+3)^(0+1280),c
 12120   002CA8  EF0A  F015         	goto	l3907
 12121   002CAC                     l1456:
 12122   002CAC  0012               	return		;funcret
 12123   002CAE                     __end_of___fldiv:
 12124                           	callstack 0
 12125                           
 12126 ;; *************** function ___xxtofl *****************
 12127 ;; Defined at:
 12128 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
 12129 ;; Parameters:    Size  Location     Type
 12130 ;;  sign            1    wreg     unsigned char 
 12131 ;;  val             4    6[COMRAM] long 
 12132 ;; Auto vars:     Size  Location     Type
 12133 ;;  sign            1   14[COMRAM] unsigned char 
 12134 ;;  arg             4   16[COMRAM] unsigned long 
 12135 ;;  exp             1   15[COMRAM] unsigned char 
 12136 ;; Return value:  Size  Location     Type
 12137 ;;                  4    6[COMRAM] unsigned char 
 12138 ;; Registers used:
 12139 ;;		wreg, status,2, status,0
 12140 ;; Tracked objects:
 12141 ;;		On entry : 0/0
 12142 ;;		On exit  : 0/0
 12143 ;;		Unchanged: 0/0
 12144 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 12145 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12146 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12147 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12148 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12149 ;;Total ram usage:       14 bytes
 12150 ;; Hardware stack levels used: 1
 12151 ;; Hardware stack levels required when called: 4
 12152 ;; This function calls:
 12153 ;;		Nothing
 12154 ;; This function is called by:
 12155 ;;		_main
 12156 ;; This function uses a non-reentrant model
 12157 ;;
 12158                           
 12159                           	psect	text25
 12160   0030D6                     __ptext25:
 12161                           	callstack 0
 12162   0030D6                     ___xxtofl:
 12163                           	callstack 122
 12164                           
 12165                           ;incstack = 0
 12166                           ;___xxtofl@sign stored from wreg
 12167   0030D6  6E0F               	movwf	___xxtofl@sign^(0+1280),c
 12168   0030D8  500F               	movf	___xxtofl@sign^(0+1280),w,c
 12169   0030DA  B4D8               	btfsc	status,2,c
 12170   0030DC  EF72  F018         	goto	u3871
 12171   0030E0  EF74  F018         	goto	u3870
 12172   0030E4                     u3871:
 12173   0030E4  EF96  F018         	goto	l1529
 12174   0030E8                     u3870:
 12175   0030E8  BE0A               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
 12176   0030EA  EF7B  F018         	goto	u3880
 12177   0030EE  EF79  F018         	goto	u3881
 12178   0030F2                     u3881:
 12179   0030F2  EF96  F018         	goto	l1529
 12180   0030F6                     u3880:
 12181   0030F6  C507  F50B         	movff	___xxtofl@val,??___xxtofl
 12182   0030FA  C508  F50C         	movff	___xxtofl@val+1,??___xxtofl+1
 12183   0030FE  C509  F50D         	movff	___xxtofl@val+2,??___xxtofl+2
 12184   003102  C50A  F50E         	movff	___xxtofl@val+3,??___xxtofl+3
 12185   003106  1E0B               	comf	??___xxtofl^(0+1280),f,c
 12186   003108  1E0C               	comf	(??___xxtofl+1)^(0+1280),f,c
 12187   00310A  1E0D               	comf	(??___xxtofl+2)^(0+1280),f,c
 12188   00310C  1E0E               	comf	(??___xxtofl+3)^(0+1280),f,c
 12189   00310E  2A0B               	incf	??___xxtofl^(0+1280),f,c
 12190   003110  0E00               	movlw	0
 12191   003112  220C               	addwfc	(??___xxtofl+1)^(0+1280),f,c
 12192   003114  220D               	addwfc	(??___xxtofl+2)^(0+1280),f,c
 12193   003116  220E               	addwfc	(??___xxtofl+3)^(0+1280),f,c
 12194   003118  C50B  F511         	movff	??___xxtofl,___xxtofl@arg
 12195   00311C  C50C  F512         	movff	??___xxtofl+1,___xxtofl@arg+1
 12196   003120  C50D  F513         	movff	??___xxtofl+2,___xxtofl@arg+2
 12197   003124  C50E  F514         	movff	??___xxtofl+3,___xxtofl@arg+3
 12198   003128  EF9E  F018         	goto	l4953
 12199   00312C                     l1529:
 12200   00312C  C507  F511         	movff	___xxtofl@val,___xxtofl@arg
 12201   003130  C508  F512         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12202   003134  C509  F513         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12203   003138  C50A  F514         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12204   00313C                     l4953:
 12205   00313C  5007               	movf	___xxtofl@val^(0+1280),w,c
 12206   00313E  1008               	iorwf	(___xxtofl@val+1)^(0+1280),w,c
 12207   003140  1009               	iorwf	(___xxtofl@val+2)^(0+1280),w,c
 12208   003142  100A               	iorwf	(___xxtofl@val+3)^(0+1280),w,c
 12209   003144  A4D8               	btfss	status,2,c
 12210   003146  EFA7  F018         	goto	u3891
 12211   00314A  EFA9  F018         	goto	u3890
 12212   00314E                     u3891:
 12213   00314E  EFB3  F018         	goto	l4959
 12214   003152                     u3890:
 12215   003152  0E00               	movlw	0
 12216   003154  6E07               	movwf	?___xxtofl^(0+1280),c
 12217   003156  0E00               	movlw	0
 12218   003158  6E08               	movwf	(?___xxtofl+1)^(0+1280),c
 12219   00315A  0E00               	movlw	0
 12220   00315C  6E09               	movwf	(?___xxtofl+2)^(0+1280),c
 12221   00315E  0E00               	movlw	0
 12222   003160  6E0A               	movwf	(?___xxtofl+3)^(0+1280),c
 12223   003162  EF44  F019         	goto	l1532
 12224   003166                     l4959:
 12225   003166  0E96               	movlw	150
 12226   003168  6E10               	movwf	___xxtofl@exp^(0+1280),c
 12227   00316A  EFBD  F018         	goto	l4963
 12228   00316E                     l4961:
 12229   00316E  2A10               	incf	___xxtofl@exp^(0+1280),f,c
 12230   003170  90D8               	bcf	status,0,c
 12231   003172  3214               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
 12232   003174  3213               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
 12233   003176  3212               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
 12234   003178  3211               	rrcf	___xxtofl@arg^(0+1280),f,c
 12235   00317A                     l4963:
 12236   00317A  0E00               	movlw	0
 12237   00317C  1411               	andwf	___xxtofl@arg^(0+1280),w,c
 12238   00317E  6E0B               	movwf	??___xxtofl^(0+1280),c
 12239   003180  0E00               	movlw	0
 12240   003182  1412               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
 12241   003184  6E0C               	movwf	(??___xxtofl+1)^(0+1280),c
 12242   003186  0E00               	movlw	0
 12243   003188  1413               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
 12244   00318A  6E0D               	movwf	(??___xxtofl+2)^(0+1280),c
 12245   00318C  0EFE               	movlw	254
 12246   00318E  1414               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
 12247   003190  6E0E               	movwf	(??___xxtofl+3)^(0+1280),c
 12248   003192  500B               	movf	??___xxtofl^(0+1280),w,c
 12249   003194  100C               	iorwf	(??___xxtofl+1)^(0+1280),w,c
 12250   003196  100D               	iorwf	(??___xxtofl+2)^(0+1280),w,c
 12251   003198  100E               	iorwf	(??___xxtofl+3)^(0+1280),w,c
 12252   00319A  A4D8               	btfss	status,2,c
 12253   00319C  EFD2  F018         	goto	u3901
 12254   0031A0  EFD4  F018         	goto	u3900
 12255   0031A4                     u3901:
 12256   0031A4  EFB7  F018         	goto	l4961
 12257   0031A8                     u3900:
 12258   0031A8  EFE2  F018         	goto	l1536
 12259   0031AC                     l4965:
 12260   0031AC  2A10               	incf	___xxtofl@exp^(0+1280),f,c
 12261   0031AE  0E01               	movlw	1
 12262   0031B0  2611               	addwf	___xxtofl@arg^(0+1280),f,c
 12263   0031B2  0E00               	movlw	0
 12264   0031B4  2212               	addwfc	(___xxtofl@arg+1)^(0+1280),f,c
 12265   0031B6  2213               	addwfc	(___xxtofl@arg+2)^(0+1280),f,c
 12266   0031B8  2214               	addwfc	(___xxtofl@arg+3)^(0+1280),f,c
 12267   0031BA  90D8               	bcf	status,0,c
 12268   0031BC  3214               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
 12269   0031BE  3213               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
 12270   0031C0  3212               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
 12271   0031C2  3211               	rrcf	___xxtofl@arg^(0+1280),f,c
 12272   0031C4                     l1536:
 12273   0031C4  0E00               	movlw	0
 12274   0031C6  1411               	andwf	___xxtofl@arg^(0+1280),w,c
 12275   0031C8  6E0B               	movwf	??___xxtofl^(0+1280),c
 12276   0031CA  0E00               	movlw	0
 12277   0031CC  1412               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
 12278   0031CE  6E0C               	movwf	(??___xxtofl+1)^(0+1280),c
 12279   0031D0  0E00               	movlw	0
 12280   0031D2  1413               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
 12281   0031D4  6E0D               	movwf	(??___xxtofl+2)^(0+1280),c
 12282   0031D6  0EFF               	movlw	255
 12283   0031D8  1414               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
 12284   0031DA  6E0E               	movwf	(??___xxtofl+3)^(0+1280),c
 12285   0031DC  500B               	movf	??___xxtofl^(0+1280),w,c
 12286   0031DE  100C               	iorwf	(??___xxtofl+1)^(0+1280),w,c
 12287   0031E0  100D               	iorwf	(??___xxtofl+2)^(0+1280),w,c
 12288   0031E2  100E               	iorwf	(??___xxtofl+3)^(0+1280),w,c
 12289   0031E4  A4D8               	btfss	status,2,c
 12290   0031E6  EFF7  F018         	goto	u3911
 12291   0031EA  EFF9  F018         	goto	u3910
 12292   0031EE                     u3911:
 12293   0031EE  EFD6  F018         	goto	l4965
 12294   0031F2                     u3910:
 12295   0031F2  EF01  F019         	goto	l4973
 12296   0031F6                     l4971:
 12297   0031F6  0610               	decf	___xxtofl@exp^(0+1280),f,c
 12298   0031F8  90D8               	bcf	status,0,c
 12299   0031FA  3611               	rlcf	___xxtofl@arg^(0+1280),f,c
 12300   0031FC  3612               	rlcf	(___xxtofl@arg+1)^(0+1280),f,c
 12301   0031FE  3613               	rlcf	(___xxtofl@arg+2)^(0+1280),f,c
 12302   003200  3614               	rlcf	(___xxtofl@arg+3)^(0+1280),f,c
 12303   003202                     l4973:
 12304   003202  BE13               	btfsc	(___xxtofl@arg+2)^(0+1280),7,c
 12305   003204  EF06  F019         	goto	u3921
 12306   003208  EF08  F019         	goto	u3920
 12307   00320C                     u3921:
 12308   00320C  EF10  F019         	goto	l1543
 12309   003210                     u3920:
 12310   003210  0E02               	movlw	2
 12311   003212  6010               	cpfslt	___xxtofl@exp^(0+1280),c
 12312   003214  EF0E  F019         	goto	u3931
 12313   003218  EF10  F019         	goto	u3930
 12314   00321C                     u3931:
 12315   00321C  EFFB  F018         	goto	l4971
 12316   003220                     u3930:
 12317   003220                     l1543:
 12318   003220  B010               	btfsc	___xxtofl@exp^(0+1280),0,c
 12319   003222  EF15  F019         	goto	u3941
 12320   003226  EF17  F019         	goto	u3940
 12321   00322A                     u3941:
 12322   00322A  EF18  F019         	goto	l4979
 12323   00322E                     u3940:
 12324   00322E  9E13               	bcf	(___xxtofl@arg+2)^(0+1280),7,c
 12325   003230                     l4979:
 12326   003230  90D8               	bcf	status,0,c
 12327   003232  3210               	rrcf	___xxtofl@exp^(0+1280),f,c
 12328   003234  C510  F50B         	movff	___xxtofl@exp,??___xxtofl
 12329   003238  6A0C               	clrf	(??___xxtofl+1)^(0+1280),c
 12330   00323A  6A0D               	clrf	(??___xxtofl+2)^(0+1280),c
 12331   00323C  6A0E               	clrf	(??___xxtofl+3)^(0+1280),c
 12332   00323E  C50B  F50E         	movff	??___xxtofl,??___xxtofl+3
 12333   003242  6A0D               	clrf	(??___xxtofl+2)^(0+1280),c
 12334   003244  6A0C               	clrf	(??___xxtofl+1)^(0+1280),c
 12335   003246  6A0B               	clrf	??___xxtofl^(0+1280),c
 12336   003248  500B               	movf	??___xxtofl^(0+1280),w,c
 12337   00324A  1211               	iorwf	___xxtofl@arg^(0+1280),f,c
 12338   00324C  500C               	movf	(??___xxtofl+1)^(0+1280),w,c
 12339   00324E  1212               	iorwf	(___xxtofl@arg+1)^(0+1280),f,c
 12340   003250  500D               	movf	(??___xxtofl+2)^(0+1280),w,c
 12341   003252  1213               	iorwf	(___xxtofl@arg+2)^(0+1280),f,c
 12342   003254  500E               	movf	(??___xxtofl+3)^(0+1280),w,c
 12343   003256  1214               	iorwf	(___xxtofl@arg+3)^(0+1280),f,c
 12344   003258  500F               	movf	___xxtofl@sign^(0+1280),w,c
 12345   00325A  B4D8               	btfsc	status,2,c
 12346   00325C  EF32  F019         	goto	u3951
 12347   003260  EF34  F019         	goto	u3950
 12348   003264                     u3951:
 12349   003264  EF3C  F019         	goto	l4989
 12350   003268                     u3950:
 12351   003268  BE0A               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
 12352   00326A  EF3B  F019         	goto	u3960
 12353   00326E  EF39  F019         	goto	u3961
 12354   003272                     u3961:
 12355   003272  EF3C  F019         	goto	l4989
 12356   003276                     u3960:
 12357   003276  8E14               	bsf	(___xxtofl@arg+3)^(0+1280),7,c
 12358   003278                     l4989:
 12359   003278  C511  F507         	movff	___xxtofl@arg,?___xxtofl
 12360   00327C  C512  F508         	movff	___xxtofl@arg+1,?___xxtofl+1
 12361   003280  C513  F509         	movff	___xxtofl@arg+2,?___xxtofl+2
 12362   003284  C514  F50A         	movff	___xxtofl@arg+3,?___xxtofl+3
 12363   003288                     l1532:
 12364   003288  0012               	return		;funcret
 12365   00328A                     __end_of___xxtofl:
 12366                           	callstack 0
 12367                           
 12368 ;; *************** function _SYSTEM_Initialize *****************
 12369 ;; Defined at:
 12370 ;;		line 38 in file "mcc_generated_files/system/src/system.c"
 12371 ;; Parameters:    Size  Location     Type
 12372 ;;		None
 12373 ;; Auto vars:     Size  Location     Type
 12374 ;;		None
 12375 ;; Return value:  Size  Location     Type
 12376 ;;                  1    wreg      void 
 12377 ;; Registers used:
 12378 ;;		wreg, status,2, status,0, cstack
 12379 ;; Tracked objects:
 12380 ;;		On entry : 0/0
 12381 ;;		On exit  : 0/0
 12382 ;;		Unchanged: 0/0
 12383 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 12384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12388 ;;Total ram usage:        0 bytes
 12389 ;; Hardware stack levels used: 1
 12390 ;; Hardware stack levels required when called: 6
 12391 ;; This function calls:
 12392 ;;		_ADC_Initialize
 12393 ;;		_CLOCK_Initialize
 12394 ;;		_INTERRUPT_Initialize
 12395 ;;		_PIN_MANAGER_Initialize
 12396 ;;		_UART2_Initialize
 12397 ;; This function is called by:
 12398 ;;		_main
 12399 ;; This function uses a non-reentrant model
 12400 ;;
 12401                           
 12402                           	psect	text26
 12403   003FB2                     __ptext26:
 12404                           	callstack 0
 12405   003FB2                     _SYSTEM_Initialize:
 12406                           	callstack 120
 12407   003FB2                     
 12408                           ;mcc_generated_files/system/src/system.c: 40:     CLOCK_Initialize();
 12409   003FB2  ECCD  F01F         	call	_CLOCK_Initialize	;wreg free
 12410   003FB6                     
 12411                           ;mcc_generated_files/system/src/system.c: 41:     PIN_MANAGER_Initialize();
 12412   003FB6  ECBB  F01C         	call	_PIN_MANAGER_Initialize	;wreg free
 12413   003FBA                     
 12414                           ;mcc_generated_files/system/src/system.c: 42:     ADC_Initialize();
 12415   003FBA  EC8E  F01B         	call	_ADC_Initialize	;wreg free
 12416   003FBE                     
 12417                           ;mcc_generated_files/system/src/system.c: 43:     UART2_Initialize();
 12418   003FBE  EC1D  F01E         	call	_UART2_Initialize	;wreg free
 12419   003FC2                     
 12420                           ;mcc_generated_files/system/src/system.c: 44:     INTERRUPT_Initialize();
 12421   003FC2  EC16  F01F         	call	_INTERRUPT_Initialize	;wreg free
 12422   003FC6  0012               	return		;funcret
 12423   003FC8                     __end_of_SYSTEM_Initialize:
 12424                           	callstack 0
 12425                           
 12426 ;; *************** function _UART2_Initialize *****************
 12427 ;; Defined at:
 12428 ;;		line 100 in file "mcc_generated_files/uart/src/uart2.c"
 12429 ;; Parameters:    Size  Location     Type
 12430 ;;		None
 12431 ;; Auto vars:     Size  Location     Type
 12432 ;;		None
 12433 ;; Return value:  Size  Location     Type
 12434 ;;                  1    wreg      void 
 12435 ;; Registers used:
 12436 ;;		wreg, status,2, status,0, cstack
 12437 ;; Tracked objects:
 12438 ;;		On entry : 0/0
 12439 ;;		On exit  : 0/0
 12440 ;;		Unchanged: 0/0
 12441 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 12442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12446 ;;Total ram usage:        0 bytes
 12447 ;; Hardware stack levels used: 1
 12448 ;; Hardware stack levels required when called: 5
 12449 ;; This function calls:
 12450 ;;		_UART2_FramingErrorCallbackRegister
 12451 ;;		_UART2_OverrunErrorCallbackRegister
 12452 ;;		_UART2_ParityErrorCallbackRegister
 12453 ;; This function is called by:
 12454 ;;		_SYSTEM_Initialize
 12455 ;; This function uses a non-reentrant model
 12456 ;;
 12457                           
 12458                           	psect	text27
 12459   003C3A                     __ptext27:
 12460                           	callstack 0
 12461   003C3A                     _UART2_Initialize:
 12462                           	callstack 120
 12463   003C3A                     
 12464                           ;mcc_generated_files/uart/src/uart2.c: 106:     U2P1L = 0x0;
 12465   003C3A  0102               	movlb	2	; () banked
 12466   003C3C  6BB8               	clrf	184,b	;volatile
 12467                           
 12468                           ;mcc_generated_files/uart/src/uart2.c: 108:     U2P2L = 0x0;
 12469   003C3E  6BBA               	clrf	186,b	;volatile
 12470                           
 12471                           ;mcc_generated_files/uart/src/uart2.c: 110:     U2P3L = 0x0;
 12472   003C40  6BBC               	clrf	188,b	;volatile
 12473   003C42                     
 12474                           ; BSR set to: 2
 12475                           ;mcc_generated_files/uart/src/uart2.c: 112:     U2CON0 = 0xB0;
 12476   003C42  0EB0               	movlw	176
 12477   003C44  6FBE               	movwf	190,b	;volatile
 12478                           
 12479                           ;mcc_generated_files/uart/src/uart2.c: 114:     U2CON1 = 0x80;
 12480   003C46  0E80               	movlw	128
 12481   003C48  6FBF               	movwf	191,b	;volatile
 12482   003C4A                     
 12483                           ; BSR set to: 2
 12484                           ;mcc_generated_files/uart/src/uart2.c: 116:     U2CON2 = 0x0;
 12485   003C4A  6BC0               	clrf	192,b	;volatile
 12486                           
 12487                           ;mcc_generated_files/uart/src/uart2.c: 118:     U2BRGL = 0x8A;
 12488   003C4C  0E8A               	movlw	138
 12489   003C4E  6FC1               	movwf	193,b	;volatile
 12490   003C50                     
 12491                           ; BSR set to: 2
 12492                           ;mcc_generated_files/uart/src/uart2.c: 120:     U2BRGH = 0x0;
 12493   003C50  6BC2               	clrf	194,b	;volatile
 12494                           
 12495                           ;mcc_generated_files/uart/src/uart2.c: 122:     U2FIFO = 0x2E;
 12496   003C52  0E2E               	movlw	46
 12497   003C54  6FC3               	movwf	195,b	;volatile
 12498   003C56                     
 12499                           ; BSR set to: 2
 12500                           ;mcc_generated_files/uart/src/uart2.c: 124:     U2UIR = 0x0;
 12501   003C56  6BC4               	clrf	196,b	;volatile
 12502                           
 12503                           ;mcc_generated_files/uart/src/uart2.c: 126:     U2ERRIR = 0x80;
 12504   003C58  0E80               	movlw	128
 12505   003C5A  6FC5               	movwf	197,b	;volatile
 12506   003C5C                     
 12507                           ; BSR set to: 2
 12508                           ;mcc_generated_files/uart/src/uart2.c: 128:     U2ERRIE = 0x0;
 12509   003C5C  6BC6               	clrf	198,b	;volatile
 12510   003C5E                     
 12511                           ; BSR set to: 2
 12512                           ;mcc_generated_files/uart/src/uart2.c: 130:     UART2_FramingErrorCallbackRegister(UART2
      +                          _DefaultFramingErrorCallback);
 12513   003C5E  0E00               	movlw	0
 12514   003C60  6E03               	movwf	UART2_FramingErrorCallbackRegister@callbackHandler^(0+1280),c
 12515   003C62  0E00               	movlw	0
 12516   003C64  6E04               	movwf	(UART2_FramingErrorCallbackRegister@callbackHandler+1)^(0+1280),c
 12517   003C66  ECB2  F01F         	call	_UART2_FramingErrorCallbackRegister	;wreg free
 12518   003C6A                     
 12519                           ;mcc_generated_files/uart/src/uart2.c: 131:     UART2_OverrunErrorCallbackRegister(UART2
      +                          _DefaultOverrunErrorCallback);
 12520   003C6A  0E00               	movlw	0
 12521   003C6C  6E03               	movwf	UART2_OverrunErrorCallbackRegister@callbackHandler^(0+1280),c
 12522   003C6E  0E00               	movlw	0
 12523   003C70  6E04               	movwf	(UART2_OverrunErrorCallbackRegister@callbackHandler+1)^(0+1280),c
 12524   003C72  ECA4  F01F         	call	_UART2_OverrunErrorCallbackRegister	;wreg free
 12525   003C76                     
 12526                           ;mcc_generated_files/uart/src/uart2.c: 132:     UART2_ParityErrorCallbackRegister(UART2_
      +                          DefaultParityErrorCallback);
 12527   003C76  0E00               	movlw	0
 12528   003C78  6E03               	movwf	UART2_ParityErrorCallbackRegister@callbackHandler^(0+1280),c
 12529   003C7A  0E00               	movlw	0
 12530   003C7C  6E04               	movwf	(UART2_ParityErrorCallbackRegister@callbackHandler+1)^(0+1280),c
 12531   003C7E  EC96  F01F         	call	_UART2_ParityErrorCallbackRegister	;wreg free
 12532   003C82                     
 12533                           ;mcc_generated_files/uart/src/uart2.c: 134:     uart2RxLastError.status = 0;
 12534   003C82  0E00               	movlw	0
 12535   003C84  0105               	movlb	5	; () banked
 12536   003C86  6FD0               	movwf	(_uart2RxLastError+1)& (0+255),b	;volatile
 12537   003C88  0E00               	movlw	0
 12538   003C8A  6FCF               	movwf	_uart2RxLastError& (0+255),b	;volatile
 12539   003C8C                     
 12540                           ; BSR set to: 5
 12541   003C8C  0012               	return		;funcret
 12542   003C8E                     __end_of_UART2_Initialize:
 12543                           	callstack 0
 12544                           
 12545 ;; *************** function _UART2_ParityErrorCallbackRegister *****************
 12546 ;; Defined at:
 12547 ;;		line 340 in file "mcc_generated_files/uart/src/uart2.c"
 12548 ;; Parameters:    Size  Location     Type
 12549 ;;  callbackHand    2    2[COMRAM] PTR FTN()void 
 12550 ;;		 -> UART2_DefaultParityErrorCallback(1), 
 12551 ;; Auto vars:     Size  Location     Type
 12552 ;;		None
 12553 ;; Return value:  Size  Location     Type
 12554 ;;                  1    wreg      void 
 12555 ;; Registers used:
 12556 ;;		wreg, status,2, status,0
 12557 ;; Tracked objects:
 12558 ;;		On entry : 0/0
 12559 ;;		On exit  : 0/0
 12560 ;;		Unchanged: 0/0
 12561 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 12562 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12565 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12566 ;;Total ram usage:        2 bytes
 12567 ;; Hardware stack levels used: 1
 12568 ;; Hardware stack levels required when called: 4
 12569 ;; This function calls:
 12570 ;;		Nothing
 12571 ;; This function is called by:
 12572 ;;		_UART2_Initialize
 12573 ;; This function uses a non-reentrant model
 12574 ;;
 12575                           
 12576                           	psect	text28
 12577   003F2C                     __ptext28:
 12578                           	callstack 0
 12579   003F2C                     _UART2_ParityErrorCallbackRegister:
 12580                           	callstack 120
 12581   003F2C                     
 12582                           ;mcc_generated_files/uart/src/uart2.c: 340: void UART2_ParityErrorCallbackRegister(void 
      +                          (* callbackHandler)(void));mcc_generated_files/uart/src/uart2.c: 341: {;mcc_generated_fi
      +                          les/uart/src/uart2.c: 342:     if(((void*)0) != callbackHandler)
 12583   003F2C  5003               	movf	UART2_ParityErrorCallbackRegister@callbackHandler^(0+1280),w,c
 12584   003F2E  1004               	iorwf	(UART2_ParityErrorCallbackRegister@callbackHandler+1)^(0+1280),w,c
 12585   003F30  B4D8               	btfsc	status,2,c
 12586   003F32  EF9D  F01F         	goto	u3771
 12587   003F36  EF9F  F01F         	goto	u3770
 12588   003F3A                     u3771:
 12589   003F3A  EFA3  F01F         	goto	l512
 12590   003F3E                     u3770:
 12591   003F3E                     
 12592                           ;mcc_generated_files/uart/src/uart2.c: 343:     {;mcc_generated_files/uart/src/uart2.c: 
      +                          344:         UART2_ParityErrorHandler = callbackHandler;
 12593   003F3E  C503  F5C9         	movff	UART2_ParityErrorCallbackRegister@callbackHandler,_UART2_ParityErrorHandler
 12594   003F42  C504  F5CA         	movff	UART2_ParityErrorCallbackRegister@callbackHandler+1,_UART2_ParityErrorHandler+1
 12595   003F46                     l512:
 12596   003F46  0012               	return		;funcret
 12597   003F48                     __end_of_UART2_ParityErrorCallbackRegister:
 12598                           	callstack 0
 12599                           
 12600 ;; *************** function _UART2_OverrunErrorCallbackRegister *****************
 12601 ;; Defined at:
 12602 ;;		line 332 in file "mcc_generated_files/uart/src/uart2.c"
 12603 ;; Parameters:    Size  Location     Type
 12604 ;;  callbackHand    2    2[COMRAM] PTR FTN()void 
 12605 ;;		 -> UART2_DefaultOverrunErrorCallback(1), 
 12606 ;; Auto vars:     Size  Location     Type
 12607 ;;		None
 12608 ;; Return value:  Size  Location     Type
 12609 ;;                  1    wreg      void 
 12610 ;; Registers used:
 12611 ;;		wreg, status,2, status,0
 12612 ;; Tracked objects:
 12613 ;;		On entry : 0/0
 12614 ;;		On exit  : 0/0
 12615 ;;		Unchanged: 0/0
 12616 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 12617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12620 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12621 ;;Total ram usage:        2 bytes
 12622 ;; Hardware stack levels used: 1
 12623 ;; Hardware stack levels required when called: 4
 12624 ;; This function calls:
 12625 ;;		Nothing
 12626 ;; This function is called by:
 12627 ;;		_UART2_Initialize
 12628 ;; This function uses a non-reentrant model
 12629 ;;
 12630                           
 12631                           	psect	text29
 12632   003F48                     __ptext29:
 12633                           	callstack 0
 12634   003F48                     _UART2_OverrunErrorCallbackRegister:
 12635                           	callstack 120
 12636   003F48                     
 12637                           ;mcc_generated_files/uart/src/uart2.c: 332: void UART2_OverrunErrorCallbackRegister(void
      +                           (* callbackHandler)(void));mcc_generated_files/uart/src/uart2.c: 333: {;mcc_generated_f
      +                          iles/uart/src/uart2.c: 334:     if(((void*)0) != callbackHandler)
 12638   003F48  5003               	movf	UART2_OverrunErrorCallbackRegister@callbackHandler^(0+1280),w,c
 12639   003F4A  1004               	iorwf	(UART2_OverrunErrorCallbackRegister@callbackHandler+1)^(0+1280),w,c
 12640   003F4C  B4D8               	btfsc	status,2,c
 12641   003F4E  EFAB  F01F         	goto	u3761
 12642   003F52  EFAD  F01F         	goto	u3760
 12643   003F56                     u3761:
 12644   003F56  EFB1  F01F         	goto	l508
 12645   003F5A                     u3760:
 12646   003F5A                     
 12647                           ;mcc_generated_files/uart/src/uart2.c: 335:     {;mcc_generated_files/uart/src/uart2.c: 
      +                          336:         UART2_OverrunErrorHandler = callbackHandler;
 12648   003F5A  C503  F5CB         	movff	UART2_OverrunErrorCallbackRegister@callbackHandler,_UART2_OverrunErrorHandler
 12649   003F5E  C504  F5CC         	movff	UART2_OverrunErrorCallbackRegister@callbackHandler+1,_UART2_OverrunErrorHandler+1
 12650   003F62                     l508:
 12651   003F62  0012               	return		;funcret
 12652   003F64                     __end_of_UART2_OverrunErrorCallbackRegister:
 12653                           	callstack 0
 12654                           
 12655 ;; *************** function _UART2_FramingErrorCallbackRegister *****************
 12656 ;; Defined at:
 12657 ;;		line 324 in file "mcc_generated_files/uart/src/uart2.c"
 12658 ;; Parameters:    Size  Location     Type
 12659 ;;  callbackHand    2    2[COMRAM] PTR FTN()void 
 12660 ;;		 -> UART2_DefaultFramingErrorCallback(1), 
 12661 ;; Auto vars:     Size  Location     Type
 12662 ;;		None
 12663 ;; Return value:  Size  Location     Type
 12664 ;;                  1    wreg      void 
 12665 ;; Registers used:
 12666 ;;		wreg, status,2, status,0
 12667 ;; Tracked objects:
 12668 ;;		On entry : 0/0
 12669 ;;		On exit  : 0/0
 12670 ;;		Unchanged: 0/0
 12671 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 12672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12676 ;;Total ram usage:        2 bytes
 12677 ;; Hardware stack levels used: 1
 12678 ;; Hardware stack levels required when called: 4
 12679 ;; This function calls:
 12680 ;;		Nothing
 12681 ;; This function is called by:
 12682 ;;		_UART2_Initialize
 12683 ;; This function uses a non-reentrant model
 12684 ;;
 12685                           
 12686                           	psect	text30
 12687   003F64                     __ptext30:
 12688                           	callstack 0
 12689   003F64                     _UART2_FramingErrorCallbackRegister:
 12690                           	callstack 120
 12691   003F64                     
 12692                           ;mcc_generated_files/uart/src/uart2.c: 324: void UART2_FramingErrorCallbackRegister(void
      +                           (* callbackHandler)(void));mcc_generated_files/uart/src/uart2.c: 325: {;mcc_generated_f
      +                          iles/uart/src/uart2.c: 326:     if(((void*)0) != callbackHandler)
 12693   003F64  5003               	movf	UART2_FramingErrorCallbackRegister@callbackHandler^(0+1280),w,c
 12694   003F66  1004               	iorwf	(UART2_FramingErrorCallbackRegister@callbackHandler+1)^(0+1280),w,c
 12695   003F68  B4D8               	btfsc	status,2,c
 12696   003F6A  EFB9  F01F         	goto	u3751
 12697   003F6E  EFBB  F01F         	goto	u3750
 12698   003F72                     u3751:
 12699   003F72  EFBF  F01F         	goto	l504
 12700   003F76                     u3750:
 12701   003F76                     
 12702                           ;mcc_generated_files/uart/src/uart2.c: 327:     {;mcc_generated_files/uart/src/uart2.c: 
      +                          328:         UART2_FramingErrorHandler = callbackHandler;
 12703   003F76  C503  F5CD         	movff	UART2_FramingErrorCallbackRegister@callbackHandler,_UART2_FramingErrorHandler
 12704   003F7A  C504  F5CE         	movff	UART2_FramingErrorCallbackRegister@callbackHandler+1,_UART2_FramingErrorHandler+1
 12705   003F7E                     l504:
 12706   003F7E  0012               	return		;funcret
 12707   003F80                     __end_of_UART2_FramingErrorCallbackRegister:
 12708                           	callstack 0
 12709                           
 12710 ;; *************** function _PIN_MANAGER_Initialize *****************
 12711 ;; Defined at:
 12712 ;;		line 39 in file "mcc_generated_files/system/src/pins.c"
 12713 ;; Parameters:    Size  Location     Type
 12714 ;;		None
 12715 ;; Auto vars:     Size  Location     Type
 12716 ;;		None
 12717 ;; Return value:  Size  Location     Type
 12718 ;;                  1    wreg      void 
 12719 ;; Registers used:
 12720 ;;		wreg, status,2, status,0, cstack
 12721 ;; Tracked objects:
 12722 ;;		On entry : 0/0
 12723 ;;		On exit  : 0/0
 12724 ;;		Unchanged: 0/0
 12725 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 12726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12730 ;;Total ram usage:        0 bytes
 12731 ;; Hardware stack levels used: 1
 12732 ;; Hardware stack levels required when called: 5
 12733 ;; This function calls:
 12734 ;;		_IO_RA0_SetInterruptHandler
 12735 ;; This function is called by:
 12736 ;;		_SYSTEM_Initialize
 12737 ;; This function uses a non-reentrant model
 12738 ;;
 12739                           
 12740                           	psect	text31
 12741   003976                     __ptext31:
 12742                           	callstack 0
 12743   003976                     _PIN_MANAGER_Initialize:
 12744                           	callstack 120
 12745   003976                     
 12746                           ;mcc_generated_files/system/src/pins.c: 44:     LATA = 0x0;
 12747   003976  0101               	movlb	1	; () banked
 12748   003978  6B40               	clrf	64,b	;volatile
 12749                           
 12750                           ;mcc_generated_files/system/src/pins.c: 45:     LATB = 0x0;
 12751   00397A  6B41               	clrf	65,b	;volatile
 12752                           
 12753                           ;mcc_generated_files/system/src/pins.c: 46:     LATC = 0x0;
 12754   00397C  6B42               	clrf	66,b	;volatile
 12755                           
 12756                           ;mcc_generated_files/system/src/pins.c: 47:     LATD = 0x0;
 12757   00397E  6B43               	clrf	67,b	;volatile
 12758                           
 12759                           ;mcc_generated_files/system/src/pins.c: 48:     LATE = 0x0;
 12760   003980  6B44               	clrf	68,b	;volatile
 12761                           
 12762                           ;mcc_generated_files/system/src/pins.c: 49:     LATF = 0x0;
 12763   003982  6B45               	clrf	69,b	;volatile
 12764                           
 12765                           ;mcc_generated_files/system/src/pins.c: 53:     ODCONA = 0x0;
 12766   003984  0104               	movlb	4	; () banked
 12767   003986  6B02               	clrf	2,b	;volatile
 12768                           
 12769                           ;mcc_generated_files/system/src/pins.c: 54:     ODCONB = 0x0;
 12770   003988  6B0A               	clrf	10,b	;volatile
 12771                           
 12772                           ;mcc_generated_files/system/src/pins.c: 55:     ODCONC = 0x0;
 12773   00398A  6B12               	clrf	18,b	;volatile
 12774                           
 12775                           ;mcc_generated_files/system/src/pins.c: 56:     ODCOND = 0x0;
 12776   00398C  6B1A               	clrf	26,b	;volatile
 12777                           
 12778                           ;mcc_generated_files/system/src/pins.c: 57:     ODCONE = 0x0;
 12779   00398E  6B22               	clrf	34,b	;volatile
 12780                           
 12781                           ;mcc_generated_files/system/src/pins.c: 58:     ODCONF = 0x0;
 12782   003990  6B2A               	clrf	42,b	;volatile
 12783                           
 12784                           ;mcc_generated_files/system/src/pins.c: 63:     TRISA = 0xFF;
 12785   003992  0101               	movlb	1	; () banked
 12786   003994  6948               	setf	72,b	;volatile
 12787   003996                     
 12788                           ; BSR set to: 1
 12789                           ;mcc_generated_files/system/src/pins.c: 64:     TRISB = 0xEF;
 12790   003996  0EEF               	movlw	239
 12791   003998  6F49               	movwf	73,b	;volatile
 12792                           
 12793                           ;mcc_generated_files/system/src/pins.c: 65:     TRISC = 0x7F;
 12794   00399A  0E7F               	movlw	127
 12795   00399C  6F4A               	movwf	74,b	;volatile
 12796   00399E                     
 12797                           ; BSR set to: 1
 12798                           ;mcc_generated_files/system/src/pins.c: 66:     TRISD = 0xFF;
 12799   00399E  694B               	setf	75,b	;volatile
 12800                           
 12801                           ;mcc_generated_files/system/src/pins.c: 67:     TRISE = 0xF;
 12802   0039A0  0E0F               	movlw	15
 12803   0039A2  6F4C               	movwf	76,b	;volatile
 12804   0039A4                     
 12805                           ; BSR set to: 1
 12806                           ;mcc_generated_files/system/src/pins.c: 68:     TRISF = 0xFF;
 12807   0039A4  694D               	setf	77,b	;volatile
 12808                           
 12809                           ;mcc_generated_files/system/src/pins.c: 73:     ANSELA = 0xFE;
 12810   0039A6  0EFE               	movlw	254
 12811   0039A8  0104               	movlb	4	; () banked
 12812   0039AA  6F00               	movwf	0,b	;volatile
 12813                           
 12814                           ;mcc_generated_files/system/src/pins.c: 74:     ANSELB = 0xCF;
 12815   0039AC  0ECF               	movlw	207
 12816   0039AE  6F08               	movwf	8,b	;volatile
 12817                           
 12818                           ;mcc_generated_files/system/src/pins.c: 75:     ANSELC = 0x7F;
 12819   0039B0  0E7F               	movlw	127
 12820   0039B2  6F10               	movwf	16,b	;volatile
 12821   0039B4                     
 12822                           ; BSR set to: 4
 12823                           ;mcc_generated_files/system/src/pins.c: 76:     ANSELD = 0xFF;
 12824   0039B4  6918               	setf	24,b	;volatile
 12825                           
 12826                           ;mcc_generated_files/system/src/pins.c: 77:     ANSELE = 0x7;
 12827   0039B6  0E07               	movlw	7
 12828   0039B8  6F20               	movwf	32,b	;volatile
 12829   0039BA                     
 12830                           ; BSR set to: 4
 12831                           ;mcc_generated_files/system/src/pins.c: 78:     ANSELF = 0xFF;
 12832   0039BA  6928               	setf	40,b	;volatile
 12833                           
 12834                           ;mcc_generated_files/system/src/pins.c: 83:     WPUA = 0x1;
 12835   0039BC  0E01               	movlw	1
 12836   0039BE  6F01               	movwf	1,b	;volatile
 12837   0039C0                     
 12838                           ; BSR set to: 4
 12839                           ;mcc_generated_files/system/src/pins.c: 84:     WPUB = 0x0;
 12840   0039C0  6B09               	clrf	9,b	;volatile
 12841   0039C2                     
 12842                           ; BSR set to: 4
 12843                           ;mcc_generated_files/system/src/pins.c: 85:     WPUC = 0x0;
 12844   0039C2  6B11               	clrf	17,b	;volatile
 12845   0039C4                     
 12846                           ; BSR set to: 4
 12847                           ;mcc_generated_files/system/src/pins.c: 86:     WPUD = 0x0;
 12848   0039C4  6B19               	clrf	25,b	;volatile
 12849   0039C6                     
 12850                           ; BSR set to: 4
 12851                           ;mcc_generated_files/system/src/pins.c: 87:     WPUE = 0x0;
 12852   0039C6  6B21               	clrf	33,b	;volatile
 12853   0039C8                     
 12854                           ; BSR set to: 4
 12855                           ;mcc_generated_files/system/src/pins.c: 88:     WPUF = 0x0;
 12856   0039C8  6B29               	clrf	41,b	;volatile
 12857   0039CA                     
 12858                           ; BSR set to: 4
 12859                           ;mcc_generated_files/system/src/pins.c: 94:     SLRCONA = 0xFF;
 12860   0039CA  6903               	setf	3,b	;volatile
 12861   0039CC                     
 12862                           ; BSR set to: 4
 12863                           ;mcc_generated_files/system/src/pins.c: 95:     SLRCONB = 0xFF;
 12864   0039CC  690B               	setf	11,b	;volatile
 12865   0039CE                     
 12866                           ; BSR set to: 4
 12867                           ;mcc_generated_files/system/src/pins.c: 96:     SLRCONC = 0xFF;
 12868   0039CE  6913               	setf	19,b	;volatile
 12869   0039D0                     
 12870                           ; BSR set to: 4
 12871                           ;mcc_generated_files/system/src/pins.c: 97:     SLRCOND = 0xFF;
 12872   0039D0  691B               	setf	27,b	;volatile
 12873                           
 12874                           ;mcc_generated_files/system/src/pins.c: 98:     SLRCONE = 0x7;
 12875   0039D2  0E07               	movlw	7
 12876   0039D4  6F23               	movwf	35,b	;volatile
 12877   0039D6                     
 12878                           ; BSR set to: 4
 12879                           ;mcc_generated_files/system/src/pins.c: 99:     SLRCONF = 0xFF;
 12880   0039D6  692B               	setf	43,b	;volatile
 12881   0039D8                     
 12882                           ; BSR set to: 4
 12883                           ;mcc_generated_files/system/src/pins.c: 104:     INLVLA = 0xFF;
 12884   0039D8  6904               	setf	4,b	;volatile
 12885   0039DA                     
 12886                           ; BSR set to: 4
 12887                           ;mcc_generated_files/system/src/pins.c: 105:     INLVLB = 0xFF;
 12888   0039DA  690C               	setf	12,b	;volatile
 12889   0039DC                     
 12890                           ; BSR set to: 4
 12891                           ;mcc_generated_files/system/src/pins.c: 106:     INLVLC = 0xFF;
 12892   0039DC  6914               	setf	20,b	;volatile
 12893   0039DE                     
 12894                           ; BSR set to: 4
 12895                           ;mcc_generated_files/system/src/pins.c: 107:     INLVLD = 0xFF;
 12896   0039DE  691C               	setf	28,b	;volatile
 12897                           
 12898                           ;mcc_generated_files/system/src/pins.c: 108:     INLVLE = 0xF;
 12899   0039E0  0E0F               	movlw	15
 12900   0039E2  6F24               	movwf	36,b	;volatile
 12901   0039E4                     
 12902                           ; BSR set to: 4
 12903                           ;mcc_generated_files/system/src/pins.c: 109:     INLVLF = 0xFF;
 12904   0039E4  692C               	setf	44,b	;volatile
 12905   0039E6                     
 12906                           ; BSR set to: 4
 12907                           ;mcc_generated_files/system/src/pins.c: 114:     RB1I2C = 0x0;
 12908   0039E6  0102               	movlb	2	; () banked
 12909   0039E8  6B86               	clrf	134,b	;volatile
 12910   0039EA                     
 12911                           ; BSR set to: 2
 12912                           ;mcc_generated_files/system/src/pins.c: 115:     RB2I2C = 0x0;
 12913   0039EA  6B85               	clrf	133,b	;volatile
 12914   0039EC                     
 12915                           ; BSR set to: 2
 12916                           ;mcc_generated_files/system/src/pins.c: 116:     RC3I2C = 0x0;
 12917   0039EC  6B88               	clrf	136,b	;volatile
 12918   0039EE                     
 12919                           ; BSR set to: 2
 12920                           ;mcc_generated_files/system/src/pins.c: 117:     RC4I2C = 0x0;
 12921   0039EE  6B87               	clrf	135,b	;volatile
 12922                           
 12923                           ;mcc_generated_files/system/src/pins.c: 121:     U2RXPPS = 0xD;
 12924   0039F0  0E0D               	movlw	13
 12925   0039F2  6F74               	movwf	116,b	;volatile
 12926                           
 12927                           ;mcc_generated_files/system/src/pins.c: 122:     RB4PPS = 0x18;
 12928   0039F4  0E18               	movlw	24
 12929   0039F6  6F0D               	movwf	13,b	;volatile
 12930                           
 12931                           ;mcc_generated_files/system/src/pins.c: 127:     IOCAP = 0x1;
 12932   0039F8  0E01               	movlw	1
 12933   0039FA  0104               	movlb	4	; () banked
 12934   0039FC  6F05               	movwf	5,b	;volatile
 12935   0039FE                     
 12936                           ; BSR set to: 4
 12937                           ;mcc_generated_files/system/src/pins.c: 128:     IOCAN = 0x0;
 12938   0039FE  6B06               	clrf	6,b	;volatile
 12939   003A00                     
 12940                           ; BSR set to: 4
 12941                           ;mcc_generated_files/system/src/pins.c: 129:     IOCAF = 0x0;
 12942   003A00  6B07               	clrf	7,b	;volatile
 12943   003A02                     
 12944                           ; BSR set to: 4
 12945                           ;mcc_generated_files/system/src/pins.c: 130:     IOCWP = 0x0;
 12946   003A02  6B3D               	clrf	61,b	;volatile
 12947   003A04                     
 12948                           ; BSR set to: 4
 12949                           ;mcc_generated_files/system/src/pins.c: 131:     IOCWN = 0x0;
 12950   003A04  6B3E               	clrf	62,b	;volatile
 12951   003A06                     
 12952                           ; BSR set to: 4
 12953                           ;mcc_generated_files/system/src/pins.c: 132:     IOCWF = 0x0;
 12954   003A06  6B3F               	clrf	63,b	;volatile
 12955   003A08                     
 12956                           ; BSR set to: 4
 12957                           ;mcc_generated_files/system/src/pins.c: 133:     IOCBP = 0x0;
 12958   003A08  6B0D               	clrf	13,b	;volatile
 12959   003A0A                     
 12960                           ; BSR set to: 4
 12961                           ;mcc_generated_files/system/src/pins.c: 134:     IOCBN = 0x0;
 12962   003A0A  6B0E               	clrf	14,b	;volatile
 12963   003A0C                     
 12964                           ; BSR set to: 4
 12965                           ;mcc_generated_files/system/src/pins.c: 135:     IOCBF = 0x0;
 12966   003A0C  6B0F               	clrf	15,b	;volatile
 12967   003A0E                     
 12968                           ; BSR set to: 4
 12969                           ;mcc_generated_files/system/src/pins.c: 136:     IOCCP = 0x0;
 12970   003A0E  6B15               	clrf	21,b	;volatile
 12971   003A10                     
 12972                           ; BSR set to: 4
 12973                           ;mcc_generated_files/system/src/pins.c: 137:     IOCCN = 0x0;
 12974   003A10  6B16               	clrf	22,b	;volatile
 12975   003A12                     
 12976                           ; BSR set to: 4
 12977                           ;mcc_generated_files/system/src/pins.c: 138:     IOCCF = 0x0;
 12978   003A12  6B17               	clrf	23,b	;volatile
 12979   003A14                     
 12980                           ; BSR set to: 4
 12981                           ;mcc_generated_files/system/src/pins.c: 139:     IOCEP = 0x0;
 12982   003A14  6B25               	clrf	37,b	;volatile
 12983   003A16                     
 12984                           ; BSR set to: 4
 12985                           ;mcc_generated_files/system/src/pins.c: 140:     IOCEN = 0x0;
 12986   003A16  6B26               	clrf	38,b	;volatile
 12987   003A18                     
 12988                           ; BSR set to: 4
 12989                           ;mcc_generated_files/system/src/pins.c: 141:     IOCEF = 0x0;
 12990   003A18  6B27               	clrf	39,b	;volatile
 12991   003A1A                     
 12992                           ; BSR set to: 4
 12993                           ;mcc_generated_files/system/src/pins.c: 143:     IO_RA0_SetInterruptHandler(IO_RA0_Defau
      +                          ltInterruptHandler);
 12994   003A1A  0E3E               	movlw	low _IO_RA0_DefaultInterruptHandler
 12995   003A1C  6E03               	movwf	IO_RA0_SetInterruptHandler@InterruptHandler^(0+1280),c
 12996   003A1E  0E40               	movlw	high _IO_RA0_DefaultInterruptHandler
 12997   003A20  6E04               	movwf	(IO_RA0_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 12998   003A22  ECFA  F01F         	call	_IO_RA0_SetInterruptHandler	;wreg free
 12999   003A26                     
 13000                           ;mcc_generated_files/system/src/pins.c: 146:     PIE0bits.IOCIE = 1;
 13001   003A26  8EA7               	bsf	167,7,c	;volatile
 13002   003A28  0012               	return		;funcret
 13003   003A2A                     __end_of_PIN_MANAGER_Initialize:
 13004                           	callstack 0
 13005                           
 13006 ;; *************** function _IO_RA0_SetInterruptHandler *****************
 13007 ;; Defined at:
 13008 ;;		line 176 in file "mcc_generated_files/system/src/pins.c"
 13009 ;; Parameters:    Size  Location     Type
 13010 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 13011 ;;		 -> IO_RA0_DefaultInterruptHandler(1), 
 13012 ;; Auto vars:     Size  Location     Type
 13013 ;;		None
 13014 ;; Return value:  Size  Location     Type
 13015 ;;                  1    wreg      void 
 13016 ;; Registers used:
 13017 ;;		wreg, status,2, status,0
 13018 ;; Tracked objects:
 13019 ;;		On entry : 0/0
 13020 ;;		On exit  : 0/0
 13021 ;;		Unchanged: 0/0
 13022 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 13023 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13026 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13027 ;;Total ram usage:        2 bytes
 13028 ;; Hardware stack levels used: 1
 13029 ;; Hardware stack levels required when called: 4
 13030 ;; This function calls:
 13031 ;;		Nothing
 13032 ;; This function is called by:
 13033 ;;		_PIN_MANAGER_Initialize
 13034 ;; This function uses a non-reentrant model
 13035 ;;
 13036                           
 13037                           	psect	text32
 13038   003FF4                     __ptext32:
 13039                           	callstack 0
 13040   003FF4                     _IO_RA0_SetInterruptHandler:
 13041                           	callstack 120
 13042   003FF4                     
 13043                           ;mcc_generated_files/system/src/pins.c: 177:     IO_RA0_InterruptHandler = InterruptHand
      +                          ler;
 13044   003FF4  C503  F5DA         	movff	IO_RA0_SetInterruptHandler@InterruptHandler,_IO_RA0_InterruptHandler
 13045   003FF8  C504  F5DB         	movff	IO_RA0_SetInterruptHandler@InterruptHandler+1,_IO_RA0_InterruptHandler+1
 13046   003FFC  0012               	return		;funcret
 13047   003FFE                     __end_of_IO_RA0_SetInterruptHandler:
 13048                           	callstack 0
 13049                           
 13050 ;; *************** function _INTERRUPT_Initialize *****************
 13051 ;; Defined at:
 13052 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
 13053 ;; Parameters:    Size  Location     Type
 13054 ;;		None
 13055 ;; Auto vars:     Size  Location     Type
 13056 ;;		None
 13057 ;; Return value:  Size  Location     Type
 13058 ;;                  1    wreg      void 
 13059 ;; Registers used:
 13060 ;;		wreg, status,2, status,0, cstack
 13061 ;; Tracked objects:
 13062 ;;		On entry : 0/0
 13063 ;;		On exit  : 0/0
 13064 ;;		Unchanged: 0/0
 13065 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 13066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13070 ;;Total ram usage:        0 bytes
 13071 ;; Hardware stack levels used: 1
 13072 ;; Hardware stack levels required when called: 5
 13073 ;; This function calls:
 13074 ;;		_INT0_SetInterruptHandler
 13075 ;;		_INT1_SetInterruptHandler
 13076 ;;		_INT2_SetInterruptHandler
 13077 ;; This function is called by:
 13078 ;;		_SYSTEM_Initialize
 13079 ;; This function uses a non-reentrant model
 13080 ;;
 13081                           
 13082                           	psect	text33
 13083   003E2C                     __ptext33:
 13084                           	callstack 0
 13085   003E2C                     _INTERRUPT_Initialize:
 13086                           	callstack 120
 13087   003E2C                     
 13088                           ;mcc_generated_files/system/src/interrupt.c: 45:     INTCON0bits.IPEN = 0;
 13089   003E2C  9AD6               	bcf	214,5,c	;volatile
 13090                           
 13091                           ;mcc_generated_files/system/src/interrupt.c: 49:     (PIR1bits.INT0IF = 0);
 13092   003E2E  90B3               	bcf	179,0,c	;volatile
 13093                           
 13094                           ;mcc_generated_files/system/src/interrupt.c: 50:     (INTCON0bits.INT0EDG = 1);
 13095   003E30  80D6               	bsf	214,0,c	;volatile
 13096   003E32                     
 13097                           ;mcc_generated_files/system/src/interrupt.c: 52:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
 13098   003E32  0E00               	movlw	0
 13099   003E34  6E03               	movwf	INT0_SetInterruptHandler@InterruptHandler^(0+1280),c
 13100   003E36  0E00               	movlw	0
 13101   003E38  6E04               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 13102   003E3A  EC09  F020         	call	_INT0_SetInterruptHandler	;wreg free
 13103   003E3E                     
 13104                           ;mcc_generated_files/system/src/interrupt.c: 57:     (PIR6bits.INT1IF = 0);
 13105   003E3E  90B8               	bcf	184,0,c	;volatile
 13106   003E40                     
 13107                           ;mcc_generated_files/system/src/interrupt.c: 58:     (INTCON0bits.INT1EDG = 1);
 13108   003E40  82D6               	bsf	214,1,c	;volatile
 13109                           
 13110                           ;mcc_generated_files/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
 13111   003E42  0E00               	movlw	0
 13112   003E44  6E03               	movwf	INT1_SetInterruptHandler@InterruptHandler^(0+1280),c
 13113   003E46  0E00               	movlw	0
 13114   003E48  6E04               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 13115   003E4A  EC04  F020         	call	_INT1_SetInterruptHandler	;wreg free
 13116   003E4E                     
 13117                           ;mcc_generated_files/system/src/interrupt.c: 65:     (PIR10bits.INT2IF = 0);
 13118   003E4E  90BC               	bcf	188,0,c	;volatile
 13119   003E50                     
 13120                           ;mcc_generated_files/system/src/interrupt.c: 66:     (INTCON0bits.INT2EDG = 1);
 13121   003E50  84D6               	bsf	214,2,c	;volatile
 13122                           
 13123                           ;mcc_generated_files/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
 13124   003E52  0E00               	movlw	0
 13125   003E54  6E03               	movwf	INT2_SetInterruptHandler@InterruptHandler^(0+1280),c
 13126   003E56  0E00               	movlw	0
 13127   003E58  6E04               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 13128   003E5A  ECFF  F01F         	call	_INT2_SetInterruptHandler	;wreg free
 13129   003E5E  0012               	return		;funcret
 13130   003E60                     __end_of_INTERRUPT_Initialize:
 13131                           	callstack 0
 13132                           
 13133 ;; *************** function _INT2_SetInterruptHandler *****************
 13134 ;; Defined at:
 13135 ;;		line 175 in file "mcc_generated_files/system/src/interrupt.c"
 13136 ;; Parameters:    Size  Location     Type
 13137 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 13138 ;;		 -> INT2_DefaultInterruptHandler(1), 
 13139 ;; Auto vars:     Size  Location     Type
 13140 ;;		None
 13141 ;; Return value:  Size  Location     Type
 13142 ;;                  1    wreg      void 
 13143 ;; Registers used:
 13144 ;;		wreg, status,2, status,0
 13145 ;; Tracked objects:
 13146 ;;		On entry : 0/0
 13147 ;;		On exit  : 0/0
 13148 ;;		Unchanged: 0/0
 13149 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 13150 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13153 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13154 ;;Total ram usage:        2 bytes
 13155 ;; Hardware stack levels used: 1
 13156 ;; Hardware stack levels required when called: 4
 13157 ;; This function calls:
 13158 ;;		Nothing
 13159 ;; This function is called by:
 13160 ;;		_INTERRUPT_Initialize
 13161 ;; This function uses a non-reentrant model
 13162 ;;
 13163                           
 13164                           	psect	text34
 13165   003FFE                     __ptext34:
 13166                           	callstack 0
 13167   003FFE                     _INT2_SetInterruptHandler:
 13168                           	callstack 120
 13169   003FFE                     
 13170                           ;mcc_generated_files/system/src/interrupt.c: 176:     INT2_InterruptHandler = InterruptH
      +                          andler;
 13171   003FFE  C503  F5D3         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
 13172   004002  C504  F5D4         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
 13173   004006  0012               	return		;funcret
 13174   004008                     __end_of_INT2_SetInterruptHandler:
 13175                           	callstack 0
 13176                           
 13177 ;; *************** function _INT1_SetInterruptHandler *****************
 13178 ;; Defined at:
 13179 ;;		line 149 in file "mcc_generated_files/system/src/interrupt.c"
 13180 ;; Parameters:    Size  Location     Type
 13181 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 13182 ;;		 -> INT1_DefaultInterruptHandler(1), 
 13183 ;; Auto vars:     Size  Location     Type
 13184 ;;		None
 13185 ;; Return value:  Size  Location     Type
 13186 ;;                  1    wreg      void 
 13187 ;; Registers used:
 13188 ;;		wreg, status,2, status,0
 13189 ;; Tracked objects:
 13190 ;;		On entry : 0/0
 13191 ;;		On exit  : 0/0
 13192 ;;		Unchanged: 0/0
 13193 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 13194 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13197 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13198 ;;Total ram usage:        2 bytes
 13199 ;; Hardware stack levels used: 1
 13200 ;; Hardware stack levels required when called: 4
 13201 ;; This function calls:
 13202 ;;		Nothing
 13203 ;; This function is called by:
 13204 ;;		_INTERRUPT_Initialize
 13205 ;; This function uses a non-reentrant model
 13206 ;;
 13207                           
 13208                           	psect	text35
 13209   004008                     __ptext35:
 13210                           	callstack 0
 13211   004008                     _INT1_SetInterruptHandler:
 13212                           	callstack 120
 13213   004008                     
 13214                           ;mcc_generated_files/system/src/interrupt.c: 150:     INT1_InterruptHandler = InterruptH
      +                          andler;
 13215   004008  C503  F5D5         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
 13216   00400C  C504  F5D6         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
 13217   004010  0012               	return		;funcret
 13218   004012                     __end_of_INT1_SetInterruptHandler:
 13219                           	callstack 0
 13220                           
 13221 ;; *************** function _INT0_SetInterruptHandler *****************
 13222 ;; Defined at:
 13223 ;;		line 123 in file "mcc_generated_files/system/src/interrupt.c"
 13224 ;; Parameters:    Size  Location     Type
 13225 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 13226 ;;		 -> INT0_DefaultInterruptHandler(1), 
 13227 ;; Auto vars:     Size  Location     Type
 13228 ;;		None
 13229 ;; Return value:  Size  Location     Type
 13230 ;;                  1    wreg      void 
 13231 ;; Registers used:
 13232 ;;		wreg, status,2, status,0
 13233 ;; Tracked objects:
 13234 ;;		On entry : 0/0
 13235 ;;		On exit  : 0/0
 13236 ;;		Unchanged: 0/0
 13237 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 13238 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13241 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13242 ;;Total ram usage:        2 bytes
 13243 ;; Hardware stack levels used: 1
 13244 ;; Hardware stack levels required when called: 4
 13245 ;; This function calls:
 13246 ;;		Nothing
 13247 ;; This function is called by:
 13248 ;;		_INTERRUPT_Initialize
 13249 ;; This function uses a non-reentrant model
 13250 ;;
 13251                           
 13252                           	psect	text36
 13253   004012                     __ptext36:
 13254                           	callstack 0
 13255   004012                     _INT0_SetInterruptHandler:
 13256                           	callstack 120
 13257   004012                     
 13258                           ;mcc_generated_files/system/src/interrupt.c: 124:     INT0_InterruptHandler = InterruptH
      +                          andler;
 13259   004012  C503  F5D7         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 13260   004016  C504  F5D8         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 13261   00401A  0012               	return		;funcret
 13262   00401C                     __end_of_INT0_SetInterruptHandler:
 13263                           	callstack 0
 13264                           
 13265 ;; *************** function _CLOCK_Initialize *****************
 13266 ;; Defined at:
 13267 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 13268 ;; Parameters:    Size  Location     Type
 13269 ;;		None
 13270 ;; Auto vars:     Size  Location     Type
 13271 ;;		None
 13272 ;; Return value:  Size  Location     Type
 13273 ;;                  1    wreg      void 
 13274 ;; Registers used:
 13275 ;;		wreg, status,2
 13276 ;; Tracked objects:
 13277 ;;		On entry : 0/0
 13278 ;;		On exit  : 0/0
 13279 ;;		Unchanged: 0/0
 13280 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 13281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13285 ;;Total ram usage:        0 bytes
 13286 ;; Hardware stack levels used: 1
 13287 ;; Hardware stack levels required when called: 4
 13288 ;; This function calls:
 13289 ;;		Nothing
 13290 ;; This function is called by:
 13291 ;;		_SYSTEM_Initialize
 13292 ;; This function uses a non-reentrant model
 13293 ;;
 13294                           
 13295                           	psect	text37
 13296   003F9A                     __ptext37:
 13297                           	callstack 0
 13298   003F9A                     _CLOCK_Initialize:
 13299                           	callstack 121
 13300   003F9A                     
 13301                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
 13302   003F9A  0E60               	movlw	96
 13303   003F9C  0100               	movlb	0	; () banked
 13304   003F9E  6FAD               	movwf	173,b	;volatile
 13305   003FA0                     
 13306                           ; BSR set to: 0
 13307                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
 13308   003FA0  6BAF               	clrf	175,b	;volatile
 13309   003FA2                     
 13310                           ; BSR set to: 0
 13311                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
 13312   003FA2  6BB3               	clrf	179,b	;volatile
 13313                           
 13314                           ;mcc_generated_files/system/src/clock.c: 53:     OSCFRQ = (8 << 0x0);
 13315   003FA4  0E08               	movlw	8
 13316   003FA6  6FB1               	movwf	177,b	;volatile
 13317   003FA8                     
 13318                           ; BSR set to: 0
 13319                           ;mcc_generated_files/system/src/clock.c: 54:     OSCTUNE = (0 << 0x0);
 13320   003FA8  6BB0               	clrf	176,b	;volatile
 13321   003FAA                     
 13322                           ; BSR set to: 0
 13323                           ;mcc_generated_files/system/src/clock.c: 55:     ACTCON = (0 << 0x7)
 13324   003FAA  6BAC               	clrf	172,b	;volatile
 13325   003FAC                     
 13326                           ; BSR set to: 0
 13327                           ;mcc_generated_files/system/src/clock.c: 57:     FSCMCON = (0 << 0x0)
 13328   003FAC  0104               	movlb	4	; () banked
 13329   003FAE  6B58               	clrf	88,b	;volatile
 13330   003FB0                     
 13331                           ; BSR set to: 4
 13332   003FB0  0012               	return		;funcret
 13333   003FB2                     __end_of_CLOCK_Initialize:
 13334                           	callstack 0
 13335                           
 13336 ;; *************** function _ADC_Initialize *****************
 13337 ;; Defined at:
 13338 ;;		line 46 in file "mcc_generated_files/adc/src/adc.c"
 13339 ;; Parameters:    Size  Location     Type
 13340 ;;		None
 13341 ;; Auto vars:     Size  Location     Type
 13342 ;;		None
 13343 ;; Return value:  Size  Location     Type
 13344 ;;                  1    wreg      void 
 13345 ;; Registers used:
 13346 ;;		wreg, status,2, status,0
 13347 ;; Tracked objects:
 13348 ;;		On entry : 0/0
 13349 ;;		On exit  : 0/0
 13350 ;;		Unchanged: 0/0
 13351 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 13352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13356 ;;Total ram usage:        0 bytes
 13357 ;; Hardware stack levels used: 1
 13358 ;; Hardware stack levels required when called: 4
 13359 ;; This function calls:
 13360 ;;		Nothing
 13361 ;; This function is called by:
 13362 ;;		_SYSTEM_Initialize
 13363 ;; This function uses a non-reentrant model
 13364 ;;
 13365                           
 13366                           	psect	text38
 13367   00371C                     __ptext38:
 13368                           	callstack 0
 13369   00371C                     _ADC_Initialize:
 13370                           	callstack 121
 13371   00371C                     
 13372                           ;mcc_generated_files/adc/src/adc.c: 48:     ADCON0bits.ADON = 0;
 13373   00371C  0103               	movlb	3	; () banked
 13374   00371E  9FF3               	bcf	243,7,b	;volatile
 13375                           
 13376                           ;mcc_generated_files/adc/src/adc.c: 49:     ADACT = (0 << 0x0);
 13377   003720  6BF9               	clrf	249,b	;volatile
 13378   003722                     
 13379                           ; BSR set to: 3
 13380                           ;mcc_generated_files/adc/src/adc.c: 50:     ADCLK = (31 << 0x0);
 13381   003722  0E1F               	movlw	31
 13382   003724  6FFA               	movwf	250,b	;volatile
 13383   003726                     
 13384                           ; BSR set to: 3
 13385                           ;mcc_generated_files/adc/src/adc.c: 51:     ADCGA = (0 << 0x0)
 13386   003726  0101               	movlb	1	; () banked
 13387   003728  6B10               	clrf	16,b	;volatile
 13388   00372A                     
 13389                           ; BSR set to: 1
 13390                           ;mcc_generated_files/adc/src/adc.c: 59:     ADCGB = (0 << 0x0)
 13391   00372A  6B11               	clrf	17,b	;volatile
 13392   00372C                     
 13393                           ; BSR set to: 1
 13394                           ;mcc_generated_files/adc/src/adc.c: 67:     ADCGC = (0 << 0x0)
 13395   00372C  6B12               	clrf	18,b	;volatile
 13396   00372E                     
 13397                           ; BSR set to: 1
 13398                           ;mcc_generated_files/adc/src/adc.c: 75:     ADCGD = (0 << 0x0)
 13399   00372E  6B13               	clrf	19,b	;volatile
 13400   003730                     
 13401                           ; BSR set to: 1
 13402                           ;mcc_generated_files/adc/src/adc.c: 83:     ADCGE = (0 << 0x0)
 13403   003730  6B14               	clrf	20,b	;volatile
 13404                           
 13405                           ;mcc_generated_files/adc/src/adc.c: 92:     ADCTX = 0x1;
 13406   003732  0E01               	movlw	1
 13407   003734  0103               	movlb	3	; () banked
 13408   003736  6FFB               	movwf	251,b	;volatile
 13409   003738                     
 13410                           ; BSR set to: 3
 13411                           ;mcc_generated_files/adc/src/adc.c: 93:     ADLTHL = (0 << 0x0);
 13412   003738  6BD9               	clrf	217,b	;volatile
 13413   00373A                     
 13414                           ; BSR set to: 3
 13415                           ;mcc_generated_files/adc/src/adc.c: 94:     ADLTHH = (0 << 0x0);
 13416   00373A  6BDA               	clrf	218,b	;volatile
 13417   00373C                     
 13418                           ; BSR set to: 3
 13419                           ;mcc_generated_files/adc/src/adc.c: 95:     ADUTHL = (0 << 0x0);
 13420   00373C  6BDB               	clrf	219,b	;volatile
 13421   00373E                     
 13422                           ; BSR set to: 3
 13423                           ;mcc_generated_files/adc/src/adc.c: 96:     ADUTHH = (0 << 0x0);
 13424   00373E  6BDC               	clrf	220,b	;volatile
 13425   003740                     
 13426                           ; BSR set to: 3
 13427                           ;mcc_generated_files/adc/src/adc.c: 97:     ADSTPTL = (0 << 0x0);
 13428   003740  6BDF               	clrf	223,b	;volatile
 13429   003742                     
 13430                           ; BSR set to: 3
 13431                           ;mcc_generated_files/adc/src/adc.c: 98:     ADSTPTH = (0 << 0x0);
 13432   003742  6BE0               	clrf	224,b	;volatile
 13433   003744                     
 13434                           ; BSR set to: 3
 13435                           ;mcc_generated_files/adc/src/adc.c: 99:     ADACCL = (0 << 0x0);
 13436   003744  6BE3               	clrf	227,b	;volatile
 13437   003746                     
 13438                           ; BSR set to: 3
 13439                           ;mcc_generated_files/adc/src/adc.c: 100:     ADACCH = (0 << 0x0);
 13440   003746  6BE4               	clrf	228,b	;volatile
 13441   003748                     
 13442                           ; BSR set to: 3
 13443                           ;mcc_generated_files/adc/src/adc.c: 101:     ADACCU = (0 << 0x0);
 13444   003748  6BE5               	clrf	229,b	;volatile
 13445   00374A                     
 13446                           ; BSR set to: 3
 13447                           ;mcc_generated_files/adc/src/adc.c: 102:     ADCNT = (0 << 0x0);
 13448   00374A  6BE6               	clrf	230,b	;volatile
 13449   00374C                     
 13450                           ; BSR set to: 3
 13451                           ;mcc_generated_files/adc/src/adc.c: 103:     ADRPT = (0 << 0x0);
 13452   00374C  6BE7               	clrf	231,b	;volatile
 13453   00374E                     
 13454                           ; BSR set to: 3
 13455                           ;mcc_generated_files/adc/src/adc.c: 104:     ADRESL = (0 << 0x0);
 13456   00374E  6BEA               	clrf	234,b	;volatile
 13457   003750                     
 13458                           ; BSR set to: 3
 13459                           ;mcc_generated_files/adc/src/adc.c: 105:     ADRESH = (0 << 0x0);
 13460   003750  6BEB               	clrf	235,b	;volatile
 13461                           
 13462                           ;mcc_generated_files/adc/src/adc.c: 106:     ADPCH = (2 << 0x0);
 13463   003752  0E02               	movlw	2
 13464   003754  6FEC               	movwf	236,b	;volatile
 13465                           
 13466                           ;mcc_generated_files/adc/src/adc.c: 107:     ADNCH = (59 << 0x0);
 13467   003756  0E3B               	movlw	59
 13468   003758  6FED               	movwf	237,b	;volatile
 13469                           
 13470                           ;mcc_generated_files/adc/src/adc.c: 108:     ADACQL = (1 << 0x0);
 13471   00375A  0E01               	movlw	1
 13472   00375C  6FEE               	movwf	238,b	;volatile
 13473   00375E                     
 13474                           ; BSR set to: 3
 13475                           ;mcc_generated_files/adc/src/adc.c: 109:     ADACQH = (0 << 0x0);
 13476   00375E  6BEF               	clrf	239,b	;volatile
 13477   003760                     
 13478                           ; BSR set to: 3
 13479                           ;mcc_generated_files/adc/src/adc.c: 110:     ADCAP = (0 << 0x0);
 13480   003760  6BF0               	clrf	240,b	;volatile
 13481   003762                     
 13482                           ; BSR set to: 3
 13483                           ;mcc_generated_files/adc/src/adc.c: 111:     ADPREL = (0 << 0x0);
 13484   003762  6BF1               	clrf	241,b	;volatile
 13485   003764                     
 13486                           ; BSR set to: 3
 13487                           ;mcc_generated_files/adc/src/adc.c: 112:     ADPREH = (0 << 0x0);
 13488   003764  6BF2               	clrf	242,b	;volatile
 13489   003766                     
 13490                           ; BSR set to: 3
 13491                           ;mcc_generated_files/adc/src/adc.c: 113:     ADCON0bits.ADCONT = 0;
 13492   003766  9DF3               	bcf	243,6,b	;volatile
 13493   003768                     
 13494                           ; BSR set to: 3
 13495                           ;mcc_generated_files/adc/src/adc.c: 114:     ADCON1 = (0 << 0x0)
 13496   003768  6BF4               	clrf	244,b	;volatile
 13497                           
 13498                           ;mcc_generated_files/adc/src/adc.c: 119:     ADCON2 = (3 << 0x0)
 13499   00376A  0E1B               	movlw	27
 13500   00376C  6FF5               	movwf	245,b	;volatile
 13501   00376E                     
 13502                           ; BSR set to: 3
 13503                           ;mcc_generated_files/adc/src/adc.c: 123:     ADCON3 = (0 << 0x0)
 13504   00376E  6BF6               	clrf	246,b	;volatile
 13505   003770                     
 13506                           ; BSR set to: 3
 13507                           ;mcc_generated_files/adc/src/adc.c: 126:     ADSTAT = (0 << 0x4);
 13508   003770  6BF7               	clrf	247,b	;volatile
 13509   003772                     
 13510                           ; BSR set to: 3
 13511                           ;mcc_generated_files/adc/src/adc.c: 127:     ADREF = (0 << 0x4)
 13512   003772  6BF8               	clrf	248,b	;volatile
 13513   003774                     
 13514                           ; BSR set to: 3
 13515                           ;mcc_generated_files/adc/src/adc.c: 129:     ADCSEL2 = (0 << 0x6)
 13516   003774  6BFD               	clrf	253,b	;volatile
 13517   003776                     
 13518                           ; BSR set to: 3
 13519                           ;mcc_generated_files/adc/src/adc.c: 135:     ADCTX = 0x0;
 13520   003776  6BFB               	clrf	251,b	;volatile
 13521   003778                     
 13522                           ; BSR set to: 3
 13523                           ;mcc_generated_files/adc/src/adc.c: 136:     ADLTHL = (0 << 0x0);
 13524   003778  6BD9               	clrf	217,b	;volatile
 13525   00377A                     
 13526                           ; BSR set to: 3
 13527                           ;mcc_generated_files/adc/src/adc.c: 137:     ADLTHH = (0 << 0x0);
 13528   00377A  6BDA               	clrf	218,b	;volatile
 13529   00377C                     
 13530                           ; BSR set to: 3
 13531                           ;mcc_generated_files/adc/src/adc.c: 138:     ADUTHL = (0 << 0x0);
 13532   00377C  6BDB               	clrf	219,b	;volatile
 13533   00377E                     
 13534                           ; BSR set to: 3
 13535                           ;mcc_generated_files/adc/src/adc.c: 139:     ADUTHH = (0 << 0x0);
 13536   00377E  6BDC               	clrf	220,b	;volatile
 13537   003780                     
 13538                           ; BSR set to: 3
 13539                           ;mcc_generated_files/adc/src/adc.c: 140:     ADSTPTL = (0 << 0x0);
 13540   003780  6BDF               	clrf	223,b	;volatile
 13541   003782                     
 13542                           ; BSR set to: 3
 13543                           ;mcc_generated_files/adc/src/adc.c: 141:     ADSTPTH = (0 << 0x0);
 13544   003782  6BE0               	clrf	224,b	;volatile
 13545   003784                     
 13546                           ; BSR set to: 3
 13547                           ;mcc_generated_files/adc/src/adc.c: 142:     ADACCL = (0 << 0x0);
 13548   003784  6BE3               	clrf	227,b	;volatile
 13549   003786                     
 13550                           ; BSR set to: 3
 13551                           ;mcc_generated_files/adc/src/adc.c: 143:     ADACCH = (0 << 0x0);
 13552   003786  6BE4               	clrf	228,b	;volatile
 13553   003788                     
 13554                           ; BSR set to: 3
 13555                           ;mcc_generated_files/adc/src/adc.c: 144:     ADACCU = (0 << 0x0);
 13556   003788  6BE5               	clrf	229,b	;volatile
 13557   00378A                     
 13558                           ; BSR set to: 3
 13559                           ;mcc_generated_files/adc/src/adc.c: 145:     ADCNT = (0 << 0x0);
 13560   00378A  6BE6               	clrf	230,b	;volatile
 13561   00378C                     
 13562                           ; BSR set to: 3
 13563                           ;mcc_generated_files/adc/src/adc.c: 146:     ADRPT = (0 << 0x0);
 13564   00378C  6BE7               	clrf	231,b	;volatile
 13565   00378E                     
 13566                           ; BSR set to: 3
 13567                           ;mcc_generated_files/adc/src/adc.c: 147:     ADRESL = (0 << 0x0);
 13568   00378E  6BEA               	clrf	234,b	;volatile
 13569   003790                     
 13570                           ; BSR set to: 3
 13571                           ;mcc_generated_files/adc/src/adc.c: 148:     ADRESH = (0 << 0x0);
 13572   003790  6BEB               	clrf	235,b	;volatile
 13573                           
 13574                           ;mcc_generated_files/adc/src/adc.c: 149:     ADPCH = (1 << 0x0);
 13575   003792  0E01               	movlw	1
 13576   003794  6FEC               	movwf	236,b	;volatile
 13577                           
 13578                           ;mcc_generated_files/adc/src/adc.c: 150:     ADNCH = (59 << 0x0);
 13579   003796  0E3B               	movlw	59
 13580   003798  6FED               	movwf	237,b	;volatile
 13581                           
 13582                           ;mcc_generated_files/adc/src/adc.c: 151:     ADACQL = (1 << 0x0);
 13583   00379A  0E01               	movlw	1
 13584   00379C  6FEE               	movwf	238,b	;volatile
 13585   00379E                     
 13586                           ; BSR set to: 3
 13587                           ;mcc_generated_files/adc/src/adc.c: 152:     ADACQH = (0 << 0x0);
 13588   00379E  6BEF               	clrf	239,b	;volatile
 13589   0037A0                     
 13590                           ; BSR set to: 3
 13591                           ;mcc_generated_files/adc/src/adc.c: 153:     ADCAP = (0 << 0x0);
 13592   0037A0  6BF0               	clrf	240,b	;volatile
 13593   0037A2                     
 13594                           ; BSR set to: 3
 13595                           ;mcc_generated_files/adc/src/adc.c: 154:     ADPREL = (0 << 0x0);
 13596   0037A2  6BF1               	clrf	241,b	;volatile
 13597   0037A4                     
 13598                           ; BSR set to: 3
 13599                           ;mcc_generated_files/adc/src/adc.c: 155:     ADPREH = (0 << 0x0);
 13600   0037A4  6BF2               	clrf	242,b	;volatile
 13601   0037A6                     
 13602                           ; BSR set to: 3
 13603                           ;mcc_generated_files/adc/src/adc.c: 156:     ADCON0bits.ADCONT = 0;
 13604   0037A6  9DF3               	bcf	243,6,b	;volatile
 13605   0037A8                     
 13606                           ; BSR set to: 3
 13607                           ;mcc_generated_files/adc/src/adc.c: 157:     ADCON1 = (0 << 0x0)
 13608   0037A8  6BF4               	clrf	244,b	;volatile
 13609                           
 13610                           ;mcc_generated_files/adc/src/adc.c: 162:     ADCON2 = (3 << 0x0)
 13611   0037AA  0E1B               	movlw	27
 13612   0037AC  6FF5               	movwf	245,b	;volatile
 13613   0037AE                     
 13614                           ; BSR set to: 3
 13615                           ;mcc_generated_files/adc/src/adc.c: 166:     ADCON3 = (0 << 0x0)
 13616   0037AE  6BF6               	clrf	246,b	;volatile
 13617   0037B0                     
 13618                           ; BSR set to: 3
 13619                           ;mcc_generated_files/adc/src/adc.c: 169:     ADSTAT = (0 << 0x4);
 13620   0037B0  6BF7               	clrf	247,b	;volatile
 13621   0037B2                     
 13622                           ; BSR set to: 3
 13623                           ;mcc_generated_files/adc/src/adc.c: 170:     ADREF = (0 << 0x4)
 13624   0037B2  6BF8               	clrf	248,b	;volatile
 13625   0037B4                     
 13626                           ; BSR set to: 3
 13627                           ;mcc_generated_files/adc/src/adc.c: 172:     ADCSEL1 = (0 << 0x6)
 13628   0037B4  6BFC               	clrf	252,b	;volatile
 13629   0037B6                     
 13630                           ; BSR set to: 3
 13631                           ;mcc_generated_files/adc/src/adc.c: 175:     ADC_ConversionDoneCallback = ((void*)0);
 13632   0037B6  0E00               	movlw	0
 13633   0037B8  0105               	movlb	5	; () banked
 13634   0037BA  6FC7               	movwf	_ADC_ConversionDoneCallback& (0+255),b
 13635   0037BC  0E00               	movlw	0
 13636   0037BE  6FC8               	movwf	(_ADC_ConversionDoneCallback+1)& (0+255),b
 13637   0037C0                     
 13638                           ; BSR set to: 5
 13639                           ;mcc_generated_files/adc/src/adc.c: 176:     ADC_Context1ThresholdCallback = ((void*)0);
 13640   0037C0  0E00               	movlw	0
 13641   0037C2  6FC5               	movwf	_ADC_Context1ThresholdCallback& (0+255),b
 13642   0037C4  0E00               	movlw	0
 13643   0037C6  6FC6               	movwf	(_ADC_Context1ThresholdCallback+1)& (0+255),b
 13644   0037C8                     
 13645                           ; BSR set to: 5
 13646                           ;mcc_generated_files/adc/src/adc.c: 177:     ADC_Context2ThresholdCallback = ((void*)0);
 13647   0037C8  0E00               	movlw	0
 13648   0037CA  6FC3               	movwf	_ADC_Context2ThresholdCallback& (0+255),b
 13649   0037CC  0E00               	movlw	0
 13650   0037CE  6FC4               	movwf	(_ADC_Context2ThresholdCallback+1)& (0+255),b
 13651   0037D0                     
 13652                           ; BSR set to: 5
 13653                           ;mcc_generated_files/adc/src/adc.c: 179:     PIR1bits.ADIF = 0;
 13654   0037D0  94B3               	bcf	179,2,c	;volatile
 13655   0037D2                     
 13656                           ; BSR set to: 5
 13657                           ;mcc_generated_files/adc/src/adc.c: 180:     PIE1bits.ADIE = 0;
 13658   0037D2  94A8               	bcf	168,2,c	;volatile
 13659   0037D4                     
 13660                           ; BSR set to: 5
 13661                           ;mcc_generated_files/adc/src/adc.c: 182:     PIR1bits.ADCH1IF = 0;
 13662   0037D4  92B3               	bcf	179,1,c	;volatile
 13663   0037D6                     
 13664                           ; BSR set to: 5
 13665                           ;mcc_generated_files/adc/src/adc.c: 183:     PIE1bits.ADCH1IE = 0;
 13666   0037D6  92A8               	bcf	168,1,c	;volatile
 13667   0037D8                     
 13668                           ; BSR set to: 5
 13669                           ;mcc_generated_files/adc/src/adc.c: 185:     PIR1bits.ADCH2IF = 0;
 13670   0037D8  9AB3               	bcf	179,5,c	;volatile
 13671   0037DA                     
 13672                           ; BSR set to: 5
 13673                           ;mcc_generated_files/adc/src/adc.c: 186:     PIE1bits.ADCH2IE = 0;
 13674   0037DA  9AA8               	bcf	168,5,c	;volatile
 13675   0037DC                     
 13676                           ; BSR set to: 5
 13677                           ;mcc_generated_files/adc/src/adc.c: 188:     PIR1bits.ADCH3IF = 0;
 13678   0037DC  9CB3               	bcf	179,6,c	;volatile
 13679   0037DE                     
 13680                           ; BSR set to: 5
 13681                           ;mcc_generated_files/adc/src/adc.c: 189:     PIE1bits.ADCH3IE = 0;
 13682   0037DE  9CA8               	bcf	168,6,c	;volatile
 13683   0037E0                     
 13684                           ; BSR set to: 5
 13685                           ;mcc_generated_files/adc/src/adc.c: 191:     PIR1bits.ADCH4IF = 0;
 13686   0037E0  9EB3               	bcf	179,7,c	;volatile
 13687   0037E2                     
 13688                           ; BSR set to: 5
 13689                           ;mcc_generated_files/adc/src/adc.c: 192:     PIE1bits.ADCH4IE = 0;
 13690   0037E2  9EA8               	bcf	168,7,c	;volatile
 13691   0037E4                     
 13692                           ; BSR set to: 5
 13693                           ;mcc_generated_files/adc/src/adc.c: 194:     ADCON0 = (0 << 0x0)
 13694   0037E4  0E94               	movlw	148
 13695   0037E6  0103               	movlb	3	; () banked
 13696   0037E8  6FF3               	movwf	243,b	;volatile
 13697   0037EA                     
 13698                           ; BSR set to: 3
 13699   0037EA  0012               	return		;funcret
 13700   0037EC                     __end_of_ADC_Initialize:
 13701                           	callstack 0
 13702                           
 13703 ;; *************** function _ADC_IsConversionDone *****************
 13704 ;; Defined at:
 13705 ;;		line 387 in file "mcc_generated_files/adc/src/adc.c"
 13706 ;; Parameters:    Size  Location     Type
 13707 ;;		None
 13708 ;; Auto vars:     Size  Location     Type
 13709 ;;		None
 13710 ;; Return value:  Size  Location     Type
 13711 ;;                  1    wreg      _Bool 
 13712 ;; Registers used:
 13713 ;;		wreg
 13714 ;; Tracked objects:
 13715 ;;		On entry : 0/0
 13716 ;;		On exit  : 0/0
 13717 ;;		Unchanged: 0/0
 13718 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 13719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13723 ;;Total ram usage:        0 bytes
 13724 ;; Hardware stack levels used: 1
 13725 ;; Hardware stack levels required when called: 4
 13726 ;; This function calls:
 13727 ;;		Nothing
 13728 ;; This function is called by:
 13729 ;;		_main
 13730 ;; This function uses a non-reentrant model
 13731 ;;
 13732                           
 13733                           	psect	text39
 13734   003FC8                     __ptext39:
 13735                           	callstack 0
 13736   003FC8                     _ADC_IsConversionDone:
 13737                           	callstack 122
 13738   003FC8                     
 13739                           ;mcc_generated_files/adc/src/adc.c: 389:     return ((_Bool)(!ADCON0bits.ADGO));
 13740   003FC8  0103               	movlb	3	; () banked
 13741   003FCA  A1F3               	btfss	243,0,b	;volatile
 13742   003FCC  EFEA  F01F         	goto	u3851
 13743   003FD0  EFED  F01F         	goto	u3850
 13744   003FD4                     u3851:
 13745   003FD4  0E01               	movlw	1
 13746   003FD6  EFEE  F01F         	goto	u3860
 13747   003FDA                     u3850:
 13748   003FDA  0E00               	movlw	0
 13749   003FDC                     u3860:
 13750   003FDC                     
 13751                           ; BSR set to: 3
 13752   003FDC  0012               	return		;funcret
 13753   003FDE                     __end_of_ADC_IsConversionDone:
 13754                           	callstack 0
 13755                           
 13756 ;; *************** function _ADC_ConversionStart *****************
 13757 ;; Defined at:
 13758 ;;		line 382 in file "mcc_generated_files/adc/src/adc.c"
 13759 ;; Parameters:    Size  Location     Type
 13760 ;;		None
 13761 ;; Auto vars:     Size  Location     Type
 13762 ;;		None
 13763 ;; Return value:  Size  Location     Type
 13764 ;;                  1    wreg      void 
 13765 ;; Registers used:
 13766 ;;		None
 13767 ;; Tracked objects:
 13768 ;;		On entry : 0/0
 13769 ;;		On exit  : 0/0
 13770 ;;		Unchanged: 0/0
 13771 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 13772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13776 ;;Total ram usage:        0 bytes
 13777 ;; Hardware stack levels used: 1
 13778 ;; Hardware stack levels required when called: 4
 13779 ;; This function calls:
 13780 ;;		Nothing
 13781 ;; This function is called by:
 13782 ;;		_main
 13783 ;; This function uses a non-reentrant model
 13784 ;;
 13785                           
 13786                           	psect	text40
 13787   00402C                     __ptext40:
 13788                           	callstack 0
 13789   00402C                     _ADC_ConversionStart:
 13790                           	callstack 122
 13791   00402C                     
 13792                           ;mcc_generated_files/adc/src/adc.c: 384:     ADCON0bits.ADGO = 1;
 13793   00402C  0103               	movlb	3	; () banked
 13794   00402E  81F3               	bsf	243,0,b	;volatile
 13795   004030                     
 13796                           ; BSR set to: 3
 13797   004030  0012               	return		;funcret
 13798   004032                     __end_of_ADC_ConversionStart:
 13799                           	callstack 0
 13800                           
 13801 ;; *************** function _ADC_ConversionResultGet *****************
 13802 ;; Defined at:
 13803 ;;		line 397 in file "mcc_generated_files/adc/src/adc.c"
 13804 ;; Parameters:    Size  Location     Type
 13805 ;;		None
 13806 ;; Auto vars:     Size  Location     Type
 13807 ;;		None
 13808 ;; Return value:  Size  Location     Type
 13809 ;;                  2    2[COMRAM] short 
 13810 ;; Registers used:
 13811 ;;		wreg, status,2, status,0
 13812 ;; Tracked objects:
 13813 ;;		On entry : 0/0
 13814 ;;		On exit  : 0/0
 13815 ;;		Unchanged: 0/0
 13816 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 13817 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13819 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13820 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13821 ;;Total ram usage:        4 bytes
 13822 ;; Hardware stack levels used: 1
 13823 ;; Hardware stack levels required when called: 4
 13824 ;; This function calls:
 13825 ;;		Nothing
 13826 ;; This function is called by:
 13827 ;;		_main
 13828 ;; This function uses a non-reentrant model
 13829 ;;
 13830                           
 13831                           	psect	text41
 13832   003F80                     __ptext41:
 13833                           	callstack 0
 13834   003F80                     _ADC_ConversionResultGet:
 13835                           	callstack 122
 13836   003F80                     
 13837                           ;mcc_generated_files/adc/src/adc.c: 399:     return ((adc_result_t) ((ADRESH << 8) | ADR
      +                          ESL));
 13838   003F80  0103               	movlb	3	; () banked
 13839   003F82  51EA               	movf	234,w,b	;volatile
 13840   003F84  C3EB F505          	movff	1003,??_ADC_ConversionResultGet	;volatile
 13841   003F88  6A06               	clrf	(??_ADC_ConversionResultGet+1)^(0+1280),c
 13842   003F8A  C505  F506         	movff	??_ADC_ConversionResultGet,??_ADC_ConversionResultGet+1
 13843   003F8E  6A05               	clrf	??_ADC_ConversionResultGet^(0+1280),c
 13844   003F90  1005               	iorwf	??_ADC_ConversionResultGet^(0+1280),w,c
 13845   003F92  6E03               	movwf	?_ADC_ConversionResultGet^(0+1280),c
 13846   003F94  5006               	movf	(??_ADC_ConversionResultGet+1)^(0+1280),w,c
 13847   003F96  6E04               	movwf	(?_ADC_ConversionResultGet+1)^(0+1280),c
 13848   003F98                     
 13849                           ; BSR set to: 3
 13850   003F98  0012               	return		;funcret
 13851   003F9A                     __end_of_ADC_ConversionResultGet:
 13852                           	callstack 0
 13853                           
 13854 ;; *************** function _ADC_ContextSelect *****************
 13855 ;; Defined at:
 13856 ;;		line 367 in file "mcc_generated_files/adc/src/adc.c"
 13857 ;; Parameters:    Size  Location     Type
 13858 ;;  context         1    wreg     enum E16521
 13859 ;; Auto vars:     Size  Location     Type
 13860 ;;  context         1    2[COMRAM] enum E16521
 13861 ;; Return value:  Size  Location     Type
 13862 ;;                  1    wreg      void 
 13863 ;; Registers used:
 13864 ;;		wreg
 13865 ;; Tracked objects:
 13866 ;;		On entry : 0/0
 13867 ;;		On exit  : 0/0
 13868 ;;		Unchanged: 0/0
 13869 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 13870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13871 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13873 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13874 ;;Total ram usage:        1 bytes
 13875 ;; Hardware stack levels used: 1
 13876 ;; Hardware stack levels required when called: 4
 13877 ;; This function calls:
 13878 ;;		Nothing
 13879 ;; This function is called by:
 13880 ;;		_main
 13881 ;; This function uses a non-reentrant model
 13882 ;;
 13883                           
 13884                           	psect	text42
 13885   004024                     __ptext42:
 13886                           	callstack 0
 13887   004024                     _ADC_ContextSelect:
 13888                           	callstack 122
 13889                           
 13890                           ; BSR set to: 3
 13891                           ;incstack = 0
 13892                           ;ADC_ContextSelect@context stored from wreg
 13893   004024  6E03               	movwf	ADC_ContextSelect@context^(0+1280),c
 13894   004026                     
 13895                           ;mcc_generated_files/adc/src/adc.c: 367: void ADC_ContextSelect(adc_context_t context);m
      +                          cc_generated_files/adc/src/adc.c: 368: {;mcc_generated_files/adc/src/adc.c: 369:     ADC
      +                          TX = context;
 13896   004026  C503  F3FB         	movff	ADC_ContextSelect@context,1019	;volatile
 13897   00402A  0012               	return		;funcret
 13898   00402C                     __end_of_ADC_ContextSelect:
 13899                           	callstack 0
 13900                           
 13901 ;; *************** function _INTERRUPT_InterruptManager *****************
 13902 ;; Defined at:
 13903 ;;		line 80 in file "mcc_generated_files/system/src/interrupt.c"
 13904 ;; Parameters:    Size  Location     Type
 13905 ;;		None
 13906 ;; Auto vars:     Size  Location     Type
 13907 ;;		None
 13908 ;; Return value:  Size  Location     Type
 13909 ;;                  1    wreg      void 
 13910 ;; Registers used:
 13911 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 13912 ;; Tracked objects:
 13913 ;;		On entry : 0/0
 13914 ;;		On exit  : 0/0
 13915 ;;		Unchanged: 0/0
 13916 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 13917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13919 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13920 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13921 ;;Total ram usage:        2 bytes
 13922 ;; Hardware stack levels used: 1
 13923 ;; Hardware stack levels required when called: 3
 13924 ;; This function calls:
 13925 ;;		_ADC_Context1ThresholdISR
 13926 ;;		_ADC_Context2ThresholdISR
 13927 ;;		_ADC_ISR
 13928 ;;		_PIN_MANAGER_IOC
 13929 ;; This function is called by:
 13930 ;;		Interrupt level 2
 13931 ;; This function uses a non-reentrant model
 13932 ;;
 13933                           
 13934                           	psect	text43
 13935   003AD4                     __ptext43:
 13936                           	callstack 0
 13937   003AD4                     _INTERRUPT_InterruptManager:
 13938                           	callstack 114
 13939                           
 13940                           ;incstack = 0
 13941   003AD4  C4FA F501          	movff	pclath,??_INTERRUPT_InterruptManager
 13942   003AD8  C4FB F502          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 13943   003ADC                     
 13944                           ;mcc_generated_files/system/src/interrupt.c: 83:     if(PIE0bits.IOCIE == 1 && PIR0bits.
      +                          IOCIF == 1)
 13945   003ADC  AEA7               	btfss	167,7,c	;volatile
 13946   003ADE  EF73  F01D         	goto	i2u397_41
 13947   003AE2  EF75  F01D         	goto	i2u397_40
 13948   003AE6                     i2u397_41:
 13949   003AE6  EF80  F01D         	goto	i2l239
 13950   003AEA                     i2u397_40:
 13951   003AEA  AEB2               	btfss	178,7,c	;volatile
 13952   003AEC  EF7A  F01D         	goto	i2u398_41
 13953   003AF0  EF7C  F01D         	goto	i2u398_40
 13954   003AF4                     i2u398_41:
 13955   003AF4  EF80  F01D         	goto	i2l239
 13956   003AF8                     i2u398_40:
 13957   003AF8                     
 13958                           ;mcc_generated_files/system/src/interrupt.c: 84:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 85:         PIN_MANAGER_IOC();
 13959   003AF8  ECEF  F01F         	call	_PIN_MANAGER_IOC	;wreg free
 13960                           
 13961                           ;mcc_generated_files/system/src/interrupt.c: 86:     }
 13962   003AFC  EFB6  F01D         	goto	i2l247
 13963   003B00                     i2l239:
 13964   003B00  A4A8               	btfss	168,2,c	;volatile
 13965   003B02  EF85  F01D         	goto	i2u399_41
 13966   003B06  EF87  F01D         	goto	i2u399_40
 13967   003B0A                     i2u399_41:
 13968   003B0A  EF92  F01D         	goto	i2l241
 13969   003B0E                     i2u399_40:
 13970   003B0E  A4B3               	btfss	179,2,c	;volatile
 13971   003B10  EF8C  F01D         	goto	i2u400_41
 13972   003B14  EF8E  F01D         	goto	i2u400_40
 13973   003B18                     i2u400_41:
 13974   003B18  EF92  F01D         	goto	i2l241
 13975   003B1C                     i2u400_40:
 13976   003B1C                     
 13977                           ;mcc_generated_files/system/src/interrupt.c: 88:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 89:         ADC_ISR();
 13978   003B1C  EC19  F020         	call	_ADC_ISR	;wreg free
 13979                           
 13980                           ;mcc_generated_files/system/src/interrupt.c: 90:     }
 13981   003B20  EFB6  F01D         	goto	i2l247
 13982   003B24                     i2l241:
 13983   003B24  A2A8               	btfss	168,1,c	;volatile
 13984   003B26  EF97  F01D         	goto	i2u401_41
 13985   003B2A  EF99  F01D         	goto	i2u401_40
 13986   003B2E                     i2u401_41:
 13987   003B2E  EFA4  F01D         	goto	i2l243
 13988   003B32                     i2u401_40:
 13989   003B32  A2B3               	btfss	179,1,c	;volatile
 13990   003B34  EF9E  F01D         	goto	i2u402_41
 13991   003B38  EFA0  F01D         	goto	i2u402_40
 13992   003B3C                     i2u402_41:
 13993   003B3C  EFA4  F01D         	goto	i2l243
 13994   003B40                     i2u402_40:
 13995   003B40                     
 13996                           ;mcc_generated_files/system/src/interrupt.c: 92:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 93:         ADC_Context1ThresholdISR();
 13997   003B40  EC1D  F020         	call	_ADC_Context1ThresholdISR	;wreg free
 13998                           
 13999                           ;mcc_generated_files/system/src/interrupt.c: 94:     }
 14000   003B44  EFB6  F01D         	goto	i2l247
 14001   003B48                     i2l243:
 14002   003B48  AAA8               	btfss	168,5,c	;volatile
 14003   003B4A  EFA9  F01D         	goto	i2u403_41
 14004   003B4E  EFAB  F01D         	goto	i2u403_40
 14005   003B52                     i2u403_41:
 14006   003B52  EFB6  F01D         	goto	i2l242
 14007   003B56                     i2u403_40:
 14008   003B56  AAB3               	btfss	179,5,c	;volatile
 14009   003B58  EFB0  F01D         	goto	i2u404_41
 14010   003B5C  EFB2  F01D         	goto	i2u404_40
 14011   003B60                     i2u404_41:
 14012   003B60  EFB6  F01D         	goto	i2l242
 14013   003B64                     i2u404_40:
 14014   003B64                     
 14015                           ;mcc_generated_files/system/src/interrupt.c: 96:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 97:         ADC_Context2ThresholdISR();
 14016   003B64  EC1B  F020         	call	_ADC_Context2ThresholdISR	;wreg free
 14017                           
 14018                           ;mcc_generated_files/system/src/interrupt.c: 98:     }
 14019   003B68  EFB6  F01D         	goto	i2l247
 14020   003B6C                     i2l242:
 14021   003B6C                     i2l247:
 14022   003B6C  C502  F4FB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 14023   003B70  C501  F4FA         	movff	??_INTERRUPT_InterruptManager,pclath
 14024   003B74  0011               	retfie		f
 14025   003B76                     __end_of_INTERRUPT_InterruptManager:
 14026                           	callstack 0
 14027                           
 14028 ;; *************** function _PIN_MANAGER_IOC *****************
 14029 ;; Defined at:
 14030 ;;		line 149 in file "mcc_generated_files/system/src/pins.c"
 14031 ;; Parameters:    Size  Location     Type
 14032 ;;		None
 14033 ;; Auto vars:     Size  Location     Type
 14034 ;;		None
 14035 ;; Return value:  Size  Location     Type
 14036 ;;                  1    wreg      void 
 14037 ;; Registers used:
 14038 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14039 ;; Tracked objects:
 14040 ;;		On entry : 0/0
 14041 ;;		On exit  : 0/0
 14042 ;;		Unchanged: 0/0
 14043 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 14044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14048 ;;Total ram usage:        0 bytes
 14049 ;; Hardware stack levels used: 1
 14050 ;; Hardware stack levels required when called: 2
 14051 ;; This function calls:
 14052 ;;		_IO_RA0_ISR
 14053 ;; This function is called by:
 14054 ;;		_INTERRUPT_InterruptManager
 14055 ;; This function uses a non-reentrant model
 14056 ;;
 14057                           
 14058                           	psect	text44
 14059   003FDE                     __ptext44:
 14060                           	callstack 0
 14061   003FDE                     _PIN_MANAGER_IOC:
 14062                           	callstack 114
 14063   003FDE                     
 14064                           ;mcc_generated_files/system/src/pins.c: 152:     if(IOCAFbits.IOCAF0 == 1)
 14065   003FDE  0104               	movlb	4	; () banked
 14066   003FE0  A107               	btfss	7,0,b	;volatile
 14067   003FE2  EFF5  F01F         	goto	i2u384_41
 14068   003FE6  EFF7  F01F         	goto	i2u384_40
 14069   003FEA                     i2u384_41:
 14070   003FEA  EFF9  F01F         	goto	i2l145
 14071   003FEE                     i2u384_40:
 14072   003FEE                     
 14073                           ; BSR set to: 4
 14074                           ;mcc_generated_files/system/src/pins.c: 153:     {;mcc_generated_files/system/src/pins.c
      +                          : 154:         IO_RA0_ISR();
 14075   003FEE  EC30  F01F         	call	_IO_RA0_ISR	;wreg free
 14076   003FF2                     i2l145:
 14077   003FF2  0012               	return		;funcret
 14078   003FF4                     __end_of_PIN_MANAGER_IOC:
 14079                           	callstack 0
 14080                           
 14081 ;; *************** function _IO_RA0_ISR *****************
 14082 ;; Defined at:
 14083 ;;		line 161 in file "mcc_generated_files/system/src/pins.c"
 14084 ;; Parameters:    Size  Location     Type
 14085 ;;		None
 14086 ;; Auto vars:     Size  Location     Type
 14087 ;;		None
 14088 ;; Return value:  Size  Location     Type
 14089 ;;                  1    wreg      void 
 14090 ;; Registers used:
 14091 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14092 ;; Tracked objects:
 14093 ;;		On entry : 0/0
 14094 ;;		On exit  : 0/0
 14095 ;;		Unchanged: 0/0
 14096 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 14097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14101 ;;Total ram usage:        0 bytes
 14102 ;; Hardware stack levels used: 1
 14103 ;; Hardware stack levels required when called: 1
 14104 ;; This function calls:
 14105 ;;		NULL
 14106 ;;		_IO_RA0_DefaultInterruptHandler
 14107 ;; This function is called by:
 14108 ;;		_PIN_MANAGER_IOC
 14109 ;; This function uses a non-reentrant model
 14110 ;;
 14111                           
 14112                           	psect	text45
 14113   003E60                     __ptext45:
 14114                           	callstack 0
 14115   003E60                     _IO_RA0_ISR:
 14116                           	callstack 114
 14117   003E60                     
 14118                           ;mcc_generated_files/system/src/pins.c: 166:     if(IO_RA0_InterruptHandler)
 14119   003E60  0105               	movlb	5	; () banked
 14120   003E62  51DA               	movf	_IO_RA0_InterruptHandler& (0+255),w,b
 14121   003E64  11DB               	iorwf	(_IO_RA0_InterruptHandler+1)& (0+255),w,b
 14122   003E66  B4D8               	btfsc	status,2,c
 14123   003E68  EF38  F01F         	goto	i2u381_41
 14124   003E6C  EF3A  F01F         	goto	i2u381_40
 14125   003E70                     i2u381_41:
 14126   003E70  EF46  F01F         	goto	i2l4705
 14127   003E74                     i2u381_40:
 14128   003E74                     
 14129                           ; BSR set to: 5
 14130                           ;mcc_generated_files/system/src/pins.c: 167:     {;mcc_generated_files/system/src/pins.c
      +                          : 168:         IO_RA0_InterruptHandler();
 14131   003E74  D802               	call	i2u382_48
 14132   003E76  EF46  F01F         	goto	i2u382_49
 14133   003E7A                     i2u382_48:
 14134   003E7A  0005               	push	
 14135   003E7C  6EFA               	movwf	pclath,c
 14136   003E7E  51DA               	movf	_IO_RA0_InterruptHandler& (0+255),w,b
 14137   003E80  6EFD               	movwf	tosl,c
 14138   003E82  51DB               	movf	(_IO_RA0_InterruptHandler+1)& (0+255),w,b
 14139   003E84  6EFE               	movwf	tosh,c
 14140   003E86  6AFF               	clrf	tosu,c
 14141   003E88  50FA               	movf	pclath,w,c
 14142   003E8A  0012               	return		;indir
 14143   003E8C                     i2u382_49:
 14144   003E8C                     i2l4705:
 14145                           
 14146                           ;mcc_generated_files/system/src/pins.c: 170:     IOCAFbits.IOCAF0 = 0;
 14147   003E8C  0104               	movlb	4	; () banked
 14148   003E8E  9107               	bcf	7,0,b	;volatile
 14149   003E90                     
 14150                           ; BSR set to: 4
 14151   003E90  0012               	return		;funcret
 14152   003E92                     __end_of_IO_RA0_ISR:
 14153                           	callstack 0
 14154                           
 14155 ;; *************** function _IO_RA0_DefaultInterruptHandler *****************
 14156 ;; Defined at:
 14157 ;;		line 183 in file "mcc_generated_files/system/src/pins.c"
 14158 ;; Parameters:    Size  Location     Type
 14159 ;;		None
 14160 ;; Auto vars:     Size  Location     Type
 14161 ;;		None
 14162 ;; Return value:  Size  Location     Type
 14163 ;;                  1    wreg      void 
 14164 ;; Registers used:
 14165 ;;		None
 14166 ;; Tracked objects:
 14167 ;;		On entry : 0/0
 14168 ;;		On exit  : 0/0
 14169 ;;		Unchanged: 0/0
 14170 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 14171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14175 ;;Total ram usage:        0 bytes
 14176 ;; Hardware stack levels used: 1
 14177 ;; This function calls:
 14178 ;;		Nothing
 14179 ;; This function is called by:
 14180 ;;		_PIN_MANAGER_Initialize
 14181 ;;		_IO_RA0_ISR
 14182 ;; This function uses a non-reentrant model
 14183 ;;
 14184                           
 14185                           	psect	text46
 14186   00403E                     __ptext46:
 14187                           	callstack 0
 14188   00403E                     _IO_RA0_DefaultInterruptHandler:
 14189                           	callstack 114
 14190   00403E  0012               	return		;funcret
 14191   004040                     __end_of_IO_RA0_DefaultInterruptHandler:
 14192                           	callstack 0
 14193                           
 14194 ;; *************** function _ADC_ISR *****************
 14195 ;; Defined at:
 14196 ;;		line 785 in file "mcc_generated_files/adc/src/adc.c"
 14197 ;; Parameters:    Size  Location     Type
 14198 ;;		None
 14199 ;; Auto vars:     Size  Location     Type
 14200 ;;		None
 14201 ;; Return value:  Size  Location     Type
 14202 ;;                  1    wreg      void 
 14203 ;; Registers used:
 14204 ;;		None
 14205 ;; Tracked objects:
 14206 ;;		On entry : 0/0
 14207 ;;		On exit  : 0/0
 14208 ;;		Unchanged: 0/0
 14209 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 14210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14214 ;;Total ram usage:        0 bytes
 14215 ;; Hardware stack levels used: 1
 14216 ;; This function calls:
 14217 ;;		Nothing
 14218 ;; This function is called by:
 14219 ;;		_INTERRUPT_InterruptManager
 14220 ;; This function uses a non-reentrant model
 14221 ;;
 14222                           
 14223                           	psect	text47
 14224   004032                     __ptext47:
 14225                           	callstack 0
 14226   004032                     _ADC_ISR:
 14227                           	callstack 116
 14228   004032                     
 14229                           ;mcc_generated_files/adc/src/adc.c: 787:     PIR1bits.ADIF = 0;
 14230   004032  94B3               	bcf	179,2,c	;volatile
 14231   004034  0012               	return		;funcret
 14232   004036                     __end_of_ADC_ISR:
 14233                           	callstack 0
 14234                           
 14235 ;; *************** function _ADC_Context2ThresholdISR *****************
 14236 ;; Defined at:
 14237 ;;		line 813 in file "mcc_generated_files/adc/src/adc.c"
 14238 ;; Parameters:    Size  Location     Type
 14239 ;;		None
 14240 ;; Auto vars:     Size  Location     Type
 14241 ;;		None
 14242 ;; Return value:  Size  Location     Type
 14243 ;;                  1    wreg      void 
 14244 ;; Registers used:
 14245 ;;		None
 14246 ;; Tracked objects:
 14247 ;;		On entry : 0/0
 14248 ;;		On exit  : 0/0
 14249 ;;		Unchanged: 0/0
 14250 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 14251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14255 ;;Total ram usage:        0 bytes
 14256 ;; Hardware stack levels used: 1
 14257 ;; This function calls:
 14258 ;;		Nothing
 14259 ;; This function is called by:
 14260 ;;		_INTERRUPT_InterruptManager
 14261 ;; This function uses a non-reentrant model
 14262 ;;
 14263                           
 14264                           	psect	text48
 14265   004036                     __ptext48:
 14266                           	callstack 0
 14267   004036                     _ADC_Context2ThresholdISR:
 14268                           	callstack 116
 14269   004036                     
 14270                           ;mcc_generated_files/adc/src/adc.c: 815:     PIR1bits.ADCH2IF = 0;
 14271   004036  9AB3               	bcf	179,5,c	;volatile
 14272   004038  0012               	return		;funcret
 14273   00403A                     __end_of_ADC_Context2ThresholdISR:
 14274                           	callstack 0
 14275                           
 14276 ;; *************** function _ADC_Context1ThresholdISR *****************
 14277 ;; Defined at:
 14278 ;;		line 799 in file "mcc_generated_files/adc/src/adc.c"
 14279 ;; Parameters:    Size  Location     Type
 14280 ;;		None
 14281 ;; Auto vars:     Size  Location     Type
 14282 ;;		None
 14283 ;; Return value:  Size  Location     Type
 14284 ;;                  1    wreg      void 
 14285 ;; Registers used:
 14286 ;;		None
 14287 ;; Tracked objects:
 14288 ;;		On entry : 0/0
 14289 ;;		On exit  : 0/0
 14290 ;;		Unchanged: 0/0
 14291 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 14292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14296 ;;Total ram usage:        0 bytes
 14297 ;; Hardware stack levels used: 1
 14298 ;; This function calls:
 14299 ;;		Nothing
 14300 ;; This function is called by:
 14301 ;;		_INTERRUPT_InterruptManager
 14302 ;; This function uses a non-reentrant model
 14303 ;;
 14304                           
 14305                           	psect	text49
 14306   00403A                     __ptext49:
 14307                           	callstack 0
 14308   00403A                     _ADC_Context1ThresholdISR:
 14309                           	callstack 116
 14310   00403A                     
 14311                           ;mcc_generated_files/adc/src/adc.c: 801:     PIR1bits.ADCH1IF = 0;
 14312   00403A  92B3               	bcf	179,1,c	;volatile
 14313   00403C  0012               	return		;funcret
 14314   00403E                     __end_of_ADC_Context1ThresholdISR:
 14315                           	callstack 0
 14316                           
 14317                           ;
 14318                           ; H/W Interrupt Vector Table @ 0x8
 14319                           ;
 14320                           
 14321                           	psect	ivt0x8
 14322   000008                     __pivt0x8:
 14323                           	callstack 0
 14324   000008                     ivt0x8_base:
 14325                           	callstack 0
 14326                           
 14327                           ; high-priority vector
 14328   000008  EF6A  F01D         	goto	_INTERRUPT_InterruptManager
 14329   000018                     	org	16
 14330                           
 14331                           ; low-priority vector
 14332   000018  00FF               	reset	
 14333                           
 14334                           	psect	rparam
 14335   000001                     ___rparam_used  equ	1
 14336   000000                     ___param_bank   equ	0
 14337   000000                     __Lparam        equ	__Lrparam
 14338   000000                     __Hparam        equ	__Hrparam
 14339                           
 14340                           	psect	config
 14341                           
 14342                           ;Config register CONFIG1 @ 0x300000
 14343                           ;	External Oscillator Selection
 14344                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
 14345                           ;	Reset Oscillator Selection
 14346                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 14347   300000                     	org	3145728
 14348   300000  8F                 	db	143
 14349                           
 14350                           ;Config register CONFIG2 @ 0x300001
 14351                           ;	Clock out Enable bit
 14352                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 14353                           ;	PRLOCKED One-Way Set Enable bit
 14354                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 14355                           ;	Boot Block enable bit
 14356                           ;	BBEN = OFF, Boot block disabled
 14357                           ;	Clock Switch Enable bit
 14358                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 14359                           ;	Fail-Safe Clock Monitor Enable bit
 14360                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 14361                           ;	Fail-Safe Clock Monitor - Primary XTAL Enable bit
 14362                           ;	FCMENP = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on EXTOSC failure.
 14363                           ;	Fail-Safe Clock Monitor - Secondary XTAL Enable bit
 14364                           ;	FCMENS = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on SOSC failure.
 14365   300001                     	org	3145729
 14366   300001  FF                 	db	255
 14367                           
 14368                           ;Config register CONFIG3 @ 0x300002
 14369                           ;	MCLR Enable bit
 14370                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 14371                           ;	Power-up timer selection bits
 14372                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 14373                           ;	Multi-vector enable bit
 14374                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
 14375                           ;	IVTLOCK bit One-way set enable bit
 14376                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 14377                           ;	Low Power BOR Enable bit
 14378                           ;	LPBOREN = OFF, Low-Power BOR disabled
 14379                           ;	Brown-out Reset Enable bits
 14380                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 14381   300002                     	org	3145730
 14382   300002  F7                 	db	247
 14383                           
 14384                           ;Config register CONFIG4 @ 0x300003
 14385                           ;	Brown-out Reset Voltage Selection bits
 14386                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
 14387                           ;	ZCD Disable bit
 14388                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 14389                           ;	PPSLOCK bit One-Way Set Enable bit
 14390                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
 14391                           ;	Stack Full/Underflow Reset Enable bit
 14392                           ;	STVREN = ON, Stack full/underflow will cause Reset
 14393                           ;	Low Voltage Programming Enable bit
 14394                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 14395                           ;	Background Debugger
 14396                           ;	DEBUG = 0x1, unprogrammed default
 14397                           ;	Extended Instruction Set Enable bit
 14398                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 14399   300003                     	org	3145731
 14400   300003  FF                 	db	255
 14401                           
 14402                           ;Config register CONFIG5 @ 0x300004
 14403                           ;	WDT Period selection bits
 14404                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14405                           ;	WDT operating mode
 14406                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 14407   300004                     	org	3145732
 14408   300004  9F                 	db	159
 14409                           
 14410                           ;Config register CONFIG6 @ 0x300005
 14411                           ;	WDT Window Select bits
 14412                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 14413                           ;	WDT input clock selector
 14414                           ;	WDTCCS = SC, Software Control
 14415   300005                     	org	3145733
 14416   300005  FF                 	db	255
 14417                           
 14418                           ;Config register CONFIG7 @ 0x300006
 14419                           ;	Boot Block Size Selection bits
 14420                           ;	BBSIZE = BBSIZE_16384, Boot Block size is 16384 words
 14421   300006                     	org	3145734
 14422   300006  7F                 	db	127
 14423                           
 14424                           ;Config register CONFIG8 @ 0x300007
 14425                           ;	SAF Block Size Selection bits
 14426                           ;	SAFSZ = SAFSZ_NONE, NONE
 14427   300007                     	org	3145735
 14428   300007  FF                 	db	255
 14429                           
 14430                           ;Config register CONFIG9 @ 0x300008
 14431                           ;	Boot Block Write Protection bit
 14432                           ;	WRTB = OFF, Boot Block not Write protected
 14433                           ;	Configuration Register Write Protection bit
 14434                           ;	WRTC = OFF, Configuration registers not Write protected
 14435                           ;	Data EEPROM Write Protection bit
 14436                           ;	WRTD = OFF, Data EEPROM not Write protected
 14437                           ;	SAF Write protection bit
 14438                           ;	WRTSAF = OFF, SAF not Write Protected
 14439                           ;	Application Block write protection bit
 14440                           ;	WRTAPP = OFF, Application Block not write protected
 14441   300008                     	org	3145736
 14442   300008  FF                 	db	255
 14443                           
 14444                           ;Config register CONFIG10 @ 0x300009
 14445                           ;	Data EEPROM Code Protection bit
 14446                           ;	CPD = OFF, Data EEPROM code protection disabled
 14447   300009                     	org	3145737
 14448   300009  FF                 	db	255
 14449                           
 14450                           ;Config register CONFIG11 @ 0x30000A
 14451                           ;	PFM Code Protection bit
 14452                           ;	CP = OFF, PFM code protection disabled
 14453   30000A                     	org	3145738
 14454   30000A  FF                 	db	255
 14455                           tosu	equ	0x4FF
 14456                           tosh	equ	0x4FE
 14457                           tosl	equ	0x4FD
 14458                           stkptr	equ	0x4FC
 14459                           pclatu	equ	0x4FB
 14460                           pclath	equ	0x4FA
 14461                           pcl	equ	0x4F9
 14462                           tblptru	equ	0x4F8
 14463                           tblptrh	equ	0x4F7
 14464                           tblptrl	equ	0x4F6
 14465                           tablat	equ	0x4F5
 14466                           prodh	equ	0x4F4
 14467                           prodl	equ	0x4F3
 14468                           indf0	equ	0x4EF
 14469                           postinc0	equ	0x4EE
 14470                           postdec0	equ	0x4ED
 14471                           preinc0	equ	0x4EC
 14472                           plusw0	equ	0x4EB
 14473                           fsr0h	equ	0x4EA
 14474                           fsr0l	equ	0x4E9
 14475                           wreg	equ	0x4E8
 14476                           indf1	equ	0x4E7
 14477                           postinc1	equ	0x4E6
 14478                           postdec1	equ	0x4E5
 14479                           preinc1	equ	0x4E4
 14480                           plusw1	equ	0x4E3
 14481                           fsr1h	equ	0x4E2
 14482                           fsr1l	equ	0x4E1
 14483                           bsr	equ	0x4E0
 14484                           indf2	equ	0x4DF
 14485                           postinc2	equ	0x4DE
 14486                           postdec2	equ	0x4DD
 14487                           preinc2	equ	0x4DC
 14488                           plusw2	equ	0x4DB
 14489                           fsr2h	equ	0x4DA
 14490                           fsr2l	equ	0x4D9
 14491                           status	equ	0x4D8

Data Sizes:
    Strings     36
    Constant    48
    Data        0
    BSS         117
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     91      93
    BANK5           160     87     124
    BANK6           256      0      80
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0

Pointer List with Targets:

    ADC_Context1ThresholdCallback	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(NULL[0]), NULL(), 

    ADC_Context2ThresholdCallback	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(NULL[0]), NULL(), 

    ADC_ConversionDoneCallback	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(NULL[0]), NULL(), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    IO_RA0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IO_RA0_DefaultInterruptHandler(), NULL(), 

    IO_RA0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IO_RA0_DefaultInterruptHandler(), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK5[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[14]), 

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S2173$buffer	PTR unsigned char  size(2) Largest target is 0

    S2173$source	PTR const unsigned char  size(2) Largest target is 0

    S576$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultFramingErrorCallback(), 

    S576$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultOverrunErrorCallback(), 

    S576$22$0	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultParityErrorCallback(), 

    S576$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S576$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART2_AutoBaudQuery(), 

    S576$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> UART2_AutoBaudSet(), 

    S576$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S576$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S576$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S576$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S576$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_Deinitialize(), 

    S576$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> UART2_ErrorGet(), 

    S576$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S576$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> UART2_FramingErrorCallbackRegister(), 

    S576$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_Initialize(), 

    S576$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART2_IsRxReady(), 

    S576$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART2_IsTxDone(), 

    S576$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART2_IsTxReady(), 

    S576$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> UART2_OverrunErrorCallbackRegister(), 

    S576$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> UART2_ParityErrorCallbackRegister(), 

    S576$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> UART2_Read(), 

    S576$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S576$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_TransmitDisable(), 

    S576$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_TransmitEnable(), 

    S576$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S576$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S576$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> UART2_Write(), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_6(CODE[4]), 

    UART2$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART2$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART2_AutoBaudQuery(), 

    UART2$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> UART2_AutoBaudSet(), 

    UART2$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART2$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART2$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART2$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART2$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_Deinitialize(), 

    UART2$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> UART2_ErrorGet(), 

    UART2$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART2$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> UART2_FramingErrorCallbackRegister(), 

    UART2$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_Initialize(), 

    UART2$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART2_IsRxReady(), 

    UART2$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART2_IsTxDone(), 

    UART2$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART2_IsTxReady(), 

    UART2$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> UART2_OverrunErrorCallbackRegister(), 

    UART2$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> UART2_ParityErrorCallbackRegister(), 

    UART2$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> UART2_Read(), 

    UART2$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART2$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_TransmitDisable(), 

    UART2$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_TransmitEnable(), 

    UART2$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART2$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART2$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> UART2_Write(), 

    UART2_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultFramingErrorCallback(), 

    UART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultFramingErrorCallback(), NULL(), 

    UART2_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultOverrunErrorCallback(), 

    UART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultOverrunErrorCallback(), NULL(), 

    UART2_ParityErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultParityErrorCallback(), 

    UART2_ParityErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART2_DefaultParityErrorCallback(), NULL(), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[14]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[14]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[14]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART2_IsTxReady
    _putch->_UART2_Write
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    ___xxtofl->_ADC_ConversionResultGet
    _UART2_Initialize->_UART2_FramingErrorCallbackRegister
    _UART2_Initialize->_UART2_OverrunErrorCallbackRegister
    _UART2_Initialize->_UART2_ParityErrorCallbackRegister
    _PIN_MANAGER_Initialize->_IO_RA0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK5

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   17019
                                             79 BANK5      8     8      0
                  _ADC_ContextSelect
            _ADC_ConversionResultGet
                _ADC_ConversionStart
               _ADC_IsConversionDone
                  _SYSTEM_Initialize
                            ___fldiv
                            ___flmul
                           ___xxtofl
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               9     4      5   13672
                                             72 BANK5      7     2      5
            _ADC_ConversionResultGet (ARG)
                           ___xxtofl (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5   13573
                                             90 COMRAM     1     1      0
                                             67 BANK5      5     0      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           15     9      6   13346
                                             53 BANK5     14     8      6
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     5      4     182
                                              2 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   12107
                                              0 BANK5     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3      77
                                              2 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     3      6     871
                                             20 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     413
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     314
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      82
                                              3 COMRAM     1     1      0
                    _UART2_IsTxReady
                        _UART2_Write
 ---------------------------------------------------------------------------------
 (6) _UART2_Write                                          1     1      0      29
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _UART2_IsTxReady                                      1     1      0      24
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     146
                                              2 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4      69
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     340
                                             70 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     137
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     232
                                              2 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2037
                                             45 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    1988
                                              2 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      46
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    1482
                                             20 COMRAM    25    17      8
            _ADC_ConversionResultGet (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     190
                                             45 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8      94
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    1135
                                             45 COMRAM    25    17      8
            _ADC_ConversionResultGet (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     338
                                              6 COMRAM    14    10      4
            _ADC_ConversionResultGet (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     227
                     _ADC_Initialize
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0     135
 _UART2_FramingErrorCallbackRegister
 _UART2_OverrunErrorCallbackRegister
  _UART2_ParityErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _UART2_ParityErrorCallbackRegister                    2     0      2      45
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART2_OverrunErrorCallbackRegister                   2     0      2      45
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART2_FramingErrorCallbackRegister                   2     0      2      45
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0      23
         _IO_RA0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IO_RA0_SetInterruptHandler                           2     0      2      23
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      69
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      23
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      23
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      23
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_ConversionStart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_ConversionResultGet                              4     2      2       0
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_ContextSelect                                    1     1      0      29
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0       0
                                              0 COMRAM     2     2      0
           _ADC_Context1ThresholdISR
           _ADC_Context2ThresholdISR
                            _ADC_ISR
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IO_RA0_ISR
 ---------------------------------------------------------------------------------
 (12) _IO_RA0_ISR                                          0     0      0       0
                                NULL *
     _IO_RA0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _IO_RA0_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_Context2ThresholdISR                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_Context1ThresholdISR                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_ContextSelect
   _ADC_ConversionResultGet
   _ADC_ConversionStart
   _ADC_IsConversionDone
   _SYSTEM_Initialize
     _ADC_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _PIN_MANAGER_Initialize
       _IO_RA0_SetInterruptHandler
     _UART2_Initialize
       _UART2_FramingErrorCallbackRegister
       _UART2_OverrunErrorCallbackRegister
       _UART2_ParityErrorCallbackRegister
   ___fldiv
     _ADC_ConversionResultGet (ARG)
     ___flmul (ARG)
       _ADC_ConversionResultGet (ARG)
       ___xxtofl (ARG)
         _ADC_ConversionResultGet (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _printf
     _ADC_ConversionResultGet (ARG)
     ___xxtofl (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
                 _UART2_IsTxReady
                 _UART2_Write
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_Context1ThresholdISR
   _ADC_Context2ThresholdISR
   _ADC_ISR
   _PIN_MANAGER_IOC
     _IO_RA0_ISR
       NULL(Fake) *
       _IO_RA0_DefaultInterruptHandler *

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            4095      0       0      0.0%
BITBIGSFRh         577      0       0      0.0%
BITBIGSFRllh       516      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0      80     31.2%
BITBIGSFRllll      172      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160     87     124     77.5%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     91      93     97.9%
BITBIGSFRlllh        5      0       0      0.0%
BITBIGSFRlh          5      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     297      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Jul 08 11:50:14 2025

                                     ___fldiv@aexp 0546                                       ___fldiv@bexp 0545  
                                     ___fldiv@sign 053E                         ??_ADC_Context2ThresholdISR 0501  
                                              l141 3A28                                                l152 3FFC  
                                              l234 3E5E                                                l172 3FB0  
                                              l270 4010                                                l504 3F7E  
                                              l512 3F46                                                l257 401A  
                                              l409 3C8C                                                l185 3FC6  
                                              l283 4006                                                l508 3F62  
                                              l460 3EE6                                                l461 3EE8  
                                              l623 37EA                                                l635 402A  
                                              l491 3F2A                                                l644 4030  
                                              l653 3F98                                                l647 3FDC  
                                              l479 4022                         ??_INT0_SetInterruptHandler 0505  
                                              _pad 3B76         __end_of_UART2_FramingErrorCallbackRegister 3F80  
             ??_UART2_FramingErrorCallbackRegister 0505                ?_UART2_FramingErrorCallbackRegister 0503  
               _UART2_FramingErrorCallbackRegister 3F64                                    __end_of_ADC_ISR 4036  
                                              tosl 04FD                                                wreg 04E8  
                                     ___flmul@aexp 0526                                       ___flmul@bexp 0527  
                                     ___flmul@sign 0521                                       ___flmul@temp 052C  
                                     ___flmul@prod 0528                                     _UART2_IsTxDone 0000  
                                     ___fltol@exp1 050C                                               l1133 3AD2  
                                             l1144 361C                                               l1402 222A  
                                             l1139 35D6                                               l1411 24F6  
                                             l1403 2218                                               l1171 3518  
                                             l1148 3E2A                                               l1404 21DE  
                                             l1416 23D2                                               l1505 28DE  
                                             l4001 2504                                               l4011 2544  
                                             l4003 2512                                               l1435 24BA  
                                             l1419 2344                                               l1532 3288  
                                             l1428 2412                                               l1444 3D72  
                                             l1461 2AD4                                               l4101 287C  
                                             l4021 2574                                               l4013 254A  
                                             l4005 2514                                               l1429 2400  
                                             l1701 3C38                                               l1470 2BBA  
                                             l1543 3220                                               l4111 28D8  
                                             l4103 2880                                               l4031 25AC  
                                             l4023 2576                                               l4015 255A  
                                             l4007 2524                                               l1536 31C4  
                                             l1456 2CAC                                               l1552 3F0C  
                                             l1529 312C                                               l4113 28E2  
                                             l4121 2908                                               l4105 289A  
                                             l4041 25FC                                               l4033 25CC  
                                             l4025 2586                                               l4017 2560  
                                             l4009 2534                                               l4201 34A4  
                                             l1458 2B10                                               l1467 2B56  
                                             l4123 290C                                               l4115 28F2  
                                             l4107 28AE                                               l4051 264C  
                                             l4043 2606                                               l4035 25DC  
                                             l4027 2596                                               l4019 2566  
                                             l4211 34CC                                               l4203 34AE  
                                             l1707 3D2C                                               l1627 1E24  
                                             l1643 3974                                               l1468 2B74  
                                             l1492 291C                                               l1469 2BCC  
                                             l4141 3AA6                                               l4133 3A2A  
                                             l4117 2900                                               l4109 28C8  
                                             l4061 268E                                               l4053 2658  
                                             l4045 261C                                               l4029 25A6  
                                             l4213 34D8                                               l4205 34B8  
                                             l4301 3CFE                                               l1733 3DF2  
                                             l1653 2D6C                                               l1670 3CDC  
                                             l4143 3ACA                                               l4135 3A58  
                                             l4151 3548                                               l4119 2902  
                                             l1495 27B2                                               l4071 26F0  
                                             l4063 269E                                               l4055 2666  
                                             l4047 2628                                               l4039 25F0  
                                             l4127 3D2E                                               l4215 34E8  
                                             l4303 3D02                                               l1719 38B4  
                                             l1727 3DB6                                               l1583 3BE2  
                                             l4231 3BB0                                               l4223 3B76  
                                             l1639 396C                                               l1663 2EC2  
                                             l1496 27D0                                               l1488 25BC  
                                             l1680 371A                                               l4145 3AD0  
                                             l4137 3A68                                               l4161 35B6  
                                             l4153 3558                                               l1497 2828  
                                             l4081 2798                                               l4073 270C  
                                             l4065 26B8                                               l4057 2672  
                                             l4049 2640                                               l4129 3D3E  
                                             l4217 34F8                                               l4241 36A4  
                                             l4305 3D0E                                               l4233 3BCE  
                                             l4225 3B84                                               l5201 19E6  
                                             l5121 167C                                               l1498 2816  
                                             l1690 3018                                               l1594 2040  
                                             l4139 3A96                                               l4163 35C4  
                                             l4155 3586                                               l4091 280E  
                                             l4083 27A2                                               l4075 2736  
                                             l4067 26C8                                               l4059 2682  
                                             l4171 3DF4                                               l4219 3508  
                                             l4243 36B0                                               l4235 361E  
                                             l4307 3D12                                               l4227 3B98  
                                             l1579 3B8C                                               l5211 1A16  
                                             l5203 19F6                                               l5131 16D2  
                                             l5123 16A0                                               l5115 1656  
                                             l4165 3614                                               l4157 3596  
                                             l4149 351A                                               l4085 27B0  
                                             l4077 276C                                               l4069 26E4  
                                             l4173 3E0A                                               l3701 210E  
                                             l4181 342A                                               l4253 3712  
                                             l4237 363E                                               l4261 3BE4  
                                             l4229 3BAC                                               l5301 1EAE  
                                             l5213 1A28                                               l5221 1A68  
                                             l5205 1A02                                               l1597 19DE  
                                             l5141 1722                                               l5133 16DE  
                                             l5125 16AA                                               l5117 166A  
                                             l4167 361A                                               l4159 35A4  
                                             l4095 2838                                               l4087 27C2  
                                             l4079 277A                                               l4175 3E1A  
                                             l3711 2146                                               l3703 211E  
                                             l4191 347A                                               l4239 367C  
                                             l4247 36BC                                               l1687 30D4  
                                             l4271 2EE4                                               l4263 3BF2  
                                             l3631 3ED4                                               l5303 1EB4  
                                             l5311 1F4C                                               l5231 1B50  
                                             l5223 1A70                                               l5215 1A36  
                                             l5207 1A0A                                               l1599 1824  
                                             l5151 1752                                               l5143 1726  
                                             l5135 16E6                                               l5127 16B2  
                                             l5119 1678                                               l4097 2844  
                                             l4089 27E0                                               l3801 237E  
                                             l3721 215A                                               l3713 214A  
                                             l3705 2130                                               l4193 347E  
                                             l4185 343E                                               l4249 36CE  
                                             l4281 2FCC                                               l4273 2F3A  
                                             l4265 3C06                                               l3633 3EE2  
                                             l3641 3F10                                               l4257 3DB8  
                                             l5321 1FCC                                               l5313 1F6A  
                                             l5305 1F0C                                               l5241 1C0E  
                                             l5233 1B84                                               l5225 1A80  
                                             l5217 1A4E                                               l5209 1A12  
                                             l5161 17AE                                               l5145 172C  
                                             l5129 16C2                                               l5137 16EA  
                                             l5401 3EEA                                               l4099 2852  
                                             l3811 23AE                                               l3803 2388  
                                             l3731 216E                                               l3723 215E  
                                             l3715 214E                                               l3707 213E  
                                             l4195 348C                                               l4187 3468  
                                             l4179 3414                                               l4291 30B4  
                                             l4283 3008                                               l4275 2F4E  
                                             l3643 3F24                                               l3651 3810  
                                             l4259 3DC0                                               l5331 2020  
                                             l5323 1FDA                                               l5315 1F86  
                                             l5307 1F40                                               l5251 1CAA  
                                             l5243 1C24                                               l5227 1A94  
                                             l5235 1B8A                                               l5219 1A60  
                                             l5163 17B4                                               l5147 1734  
                                             l5139 1710                                               l5155 1772  
                                             l4531 38BE                                               l5403 3EF4  
                                             l5411 3290                                               l4621 3996  
                                             l3901 29E6                                               l3821 23F8  
                                             l3813 23B2                                               l3805 2396  
                                             l3741 21AA                                               l3733 2172  
                                             l3725 2162                                               l3717 2152  
                                             l3709 2142                                               l3661 2042  
                                             l4189 346A                                               l4293 30C4  
                                             l4277 2F5C                                               l4285 303C  
                                             l4269 2EC4                                               l3629 3EC2  
                                             l3637 401E                                               l3653 381A  
                                             l5325 1FF2                                               l5317 1F8E  
                                             l5309 1F48                                               l5253 1D00  
                                             l5261 1D52                                               l5245 1C56  
                                             l5237 1BA8                                               l5229 1AF8  
                                             l5181 183A                                               l5165 17BC  
                                             l5157 1798                                               l5173 17D4  
                                             l5149 1748                                               l4533 38E4  
                                             l4541 3942                                               l5341 2CEC  
                                             l5421 32B8                                               l5413 3294  
                                             ?_pad 0515                                               l4711 3FA2  
                                             l4543 3FF4                                               l4631 39C0  
                                             l4623 399E                                               l4551 3F64  
                                             l3903 29FC                                               l3831 2476  
                                             l3815 23C2                                               l3807 2398  
                                             l3751 21FC                                               l3743 21C6  
                                             l3735 2176                                               l3727 2166  
                                             l3719 2156                                               l3671 207E  
                                             l3663 204E                                               l4287 3078  
                                             l3639 3F10                                               l3655 3838  
                                             l3647 37EC                                               l5327 2002  
                                             l5319 1F9C                                               l5271 1D82  
                                             l5263 1D62                                               l5255 1D06  
                                             l5247 1C66                                               l5239 1BDC  
                                             l5191 1930                                               l5183 186E  
                                             l5175 17EE                                               l5159 17AA  
                                             l4535 38EE                                               l5351 2D4A  
                                             l5343 2CF0                                               l5335 2CAE  
                                             l5431 3366                                               l5423 332C  
                                             l5415 3298                                               l5407 328A  
                                             l4801 378C                                               l4721 3722  
                                             l4713 3FA8                                               l4545 4012  
                                             l4641 39CA                                               l4633 39C2  
                                             l4625 39A4                                               l4553 3F76  
                                             l4561 3F3E                                               l3921 2A50  
                                             l3905 2A0C                                               l3913 2A2C  
                                             l3841 24C8                                               l3825 2422  
                                             l3833 2478                                               l3809 23A6  
                                             l3817 23C4                                               l3761 2248  
                                             l3753 220A                                               l3745 21D6  
                                             l3737 217A                                               l3729 216A  
                                             l3681 20AC                                               l3673 208E  
                                             l3665 205C                                               l4289 308C  
                                             l4297 3CDE                                               l3657 386E  
                                             l3649 37FE                                               l5329 2018  
                                             l5281 1E54                                               l5273 1DFA  
                                             l5265 1D6A                                               l5257 1D3A  
                                             l5249 1C76                                               l5193 1964  
                                             l5185 18AC                                               l4537 391A  
                                             l4529 38B6                                               l5361 2D90  
                                             l5353 2D5E                                               l5345 2D16  
                                             l5337 2CD4                                               l5433 33DA  
                                             l5425 3346                                               l5417 32A0  
                                             l5409 328E                                               l4811 37A2  
                                             l4803 378E                                               l4731 3730  
                                             l4723 3726                                               l4715 3FAA  
                                             l4707 3F9A                                               l4547 4008  
                                             l4651 39D8                                               l4643 39CC  
                                             l4635 39C4                                               l4627 39B4  
                                             l4619 3976                                               l4555 3F48  
                                             l3931 2AA0                                               l3923 2A6A  
                                             l3915 2A3C                                               l3907 2A14  
                                             l3851 24E6                                               l3843 24CE  
                                             l3835 2488                                               l3827 242E  
                                             l3819 23E2                                               l3771 2288  
                                             l3755 220C                                               l3747 21EC  
                                             l3739 217E                                               l3691 20D6  
                                             l3683 20BE                                               l3675 2090  
                                             l3667 205E                                               l4299 3CF2  
                                             l5291 1E7A                                               l5283 1E58  
                                             l5275 1E1A                                               l5267 1D6E  
                                             l5259 1D4E                                               l5195 196C  
                                             l5187 18DE                                               l5179 1834  
                                             l4539 3938                                               l5371 2E30  
                                             l5363 2DB2                                               l5355 2D64  
                                             l5347 2D20                                               l5339 2CDE  
                                             l5435 33F4                                               l5427 334E  
                                             l5419 32A4                                               l4821 37B0  
                                             l4813 37A4                                               l4805 3790  
                                             l4741 3740                                               l4733 3738  
                                             l4725 372A                                               l4717 3FAC  
                                             l4709 3FA0                                               l4549 3FFE  
                                             l4661 39E6                                               l4653 39DA  
                                             l4645 39CE                                               l4637 39C6  
                                             l4629 39BA                                               l4557 3F5A  
                                             l4901 3FB2                                               l3941 2AFC  
                                             l3933 2AB0                                               l3925 2A7A  
                                             l3917 2A3C                                               l3909 2A18  
                                             l3845 24D0                                               l3837 2498  
                                             l3829 243C                                               l3781 22B2  
                                             l3773 2294                                               l3765 225C  
                                             l3757 2216                                               l3749 21F8  
                                             l3693 20E6                                               l3685 20C0  
                                             l3669 206E                                               l3677 2096  
                                             l3861 3D96                                               l5293 1E80  
                                             l5285 1E5E                                               l5277 1E36  
                                             l5269 1D76                                               l5189 191C  
                                             l5373 2E40                                               l5365 2DE6  
                                             l5381 2E8A                                               l5349 2D3C  
                                             l5429 3352                                               l4831 37C8  
                                             l4823 37B2                                               l4815 37A6  
                                             l4807 379E                                               l4751 374A  
                                             l4743 3742                                               l4735 373A  
                                             l4727 372C                                               l4719 371C  
                                             l4671 3A00                                               l4663 39EA  
                                             l4655 39DC                                               l4647 39D0  
                                             l4639 39C8                                               l4559 3F2C  
                                             l4903 3FB6                                               l3951 2B3C  
                                             l3943 2AFE                                               l3935 2AC4  
                                             l3927 2A8A                                               l3871 294A  
                                             l3863 291E                                               l3847 24D6  
                                             l3839 24B8                                               l3791 2324  
                                             l3775 2298                                               l3767 226C  
                                             l3759 2238                                               l3783 22B8  
                                             l3695 20F6                                               l3687 20C6  
                                             l3679 20A6                                               l3855 3D74  
                                             l5287 1E66                                               l5279 1E44  
                                             l5295 1E86                                               l5199 19AC  
                                             l5359 2D72                                               l5391 3C8E  
                                             l4841 37D8                                               l4833 37D0  
                                             l4825 37B4                                               l4817 37A8  
                                             l4809 37A0                                               l4761 3760  
                                             l4753 374C                                               l4745 3744  
                                             l4737 373C                                               l4729 372E  
                                             l4681 3A0A                                               l4673 3A02  
                                             l4665 39EC                                               l4657 39DE  
                                             l4649 39D6                                               l4905 3FBA  
                                             l3961 2BB2                                               l3953 2B46  
                                             l3945 2B0E                                               l3937 2AD2  
                                             l3929 2A9A                                               l3881 2982  
                                             l3873 295A                                               l3865 292A  
                                             l3849 24E4                                               l3785 22DE  
                                             l3793 2334                                               l3777 22A6  
                                             l3769 227A                                               l3697 2106  
                                             l3689 20D4                                               l3857 3D80  
                                             l5297 1E98                                               l5289 1E76  
                                             l5369 2E1A                                               l5385 2E98  
                                             l5393 3C96                                               l4931 402C  
                                             l4851 37E2                                               l4843 37DA  
                                             l4835 37D2                                               l4827 37B6  
                                             l4819 37AE                                               l4771 376E  
                                             l4763 3762                                               l4755 374E  
                                             l4747 3746                                               l4739 373E  
                                             l4691 3A14                                               l4683 3A0C  
                                             l4675 3A04                                               l4667 39EE  
                                             l4659 39E4                                               l4907 3FBE  
                                             l3971 2C20                                               l3955 2B54  
                                             l3947 2B20                                               l3939 2ADE  
                                             l3891 29AE                                               l3883 2988  
                                             l3875 296A                                               l3867 2938  
                                             l3795 235A                                               l3787 2312  
                                             l3779 22A8                                               l3699 2108  
                                             l3859 3D92                                               l5299 1EAA  
                                             l5379 2E70                                               l5395 3CB4  
                                             l4933 3FC8                                               l4853 37E4  
                                             l4845 37DC                                               l4837 37D4  
                                             l4829 37C0                                               l4781 3778  
                                             l4773 3770                                               l4765 3764  
                                             l4757 3750                                               l4749 3748  
                                             l4693 3A16                                               l4685 3A0E  
                                             l4677 3A06                                               l4669 39FE  
                                             l4861 3C50                                               l4909 3FC2  
                                             l3981 2C86                                               l3965 2BDC  
                                             l3973 2C24                                               l3949 2B36  
                                             l3957 2B66                                               l3893 29BE  
                                             l3885 298E                                               l3877 296C  
                                             l3869 293A                                               l3797 236A  
                                             l3789 2314                                               l5397 3CD2  
                                             l4847 37DE                                               l4839 37D6  
                                             l4791 3782                                               l4783 377A  
                                             l4775 3772                                               l4767 3766  
                                             l4759 375E                                               l4695 3A18  
                                             l4687 3A10                                               l4679 3A08  
                                             l4871 3C76                                               l4863 3C56  
                                             l4855 3C3A                                               l4951 30F6  
                                             l3991 2CA2                                               l3983 2C88  
                                             l3975 2C3E                                               l3967 2BE8  
                                             l3959 2B84                                               l3895 29CE  
                                             l3887 299C                                               l3879 2972  
                                             l4929 4026                                               l4937 3F80  
                                             l4849 37E0                                               l4793 3784  
                                             l4785 377C                                               l4777 3774  
                                             l4769 3768                                               l4881 3E40  
                                             l4697 3A1A                                               l4689 3A12  
                                             l4873 3C82                                               l4865 3C5C  
                                             l4857 3C42                                               l4961 316E  
                                             l4953 313C                                               l3985 2C8C  
                                             l3977 2C54                                               l3969 2BF6  
                                             l3897 29D0                                               l3889 299E  
                                             l4795 3786                                               l4787 377E  
                                             l4779 3776                                               l4883 3E4E  
                                             l4875 3E2C                                               l4699 3A26  
                                             l4867 3C5E                                               l4859 3C4A  
                                             l4971 31F6                                               l4963 317A  
                                             l4955 3152                                               l4947 30D8  
                                             l3987 2C9A                                               l3979 2C6E  
                                             l3899 29D6                                               l4797 3788  
                                             l4789 3780                                               l4885 3E50  
                                             l4877 3E32                                               l4869 3C6A  
                                             l4981 3234                                               l4973 3202  
                                             l4965 31AC                                               l4949 30E8  
                                             l3989 2CA0                                               l4799 378A  
                                             l4879 3E3E                                               l4983 3258  
                                             l4975 3210                                               l4967 31AE  
                                             l4959 3166                                               l3999 24F8  
                                             l4985 3268                                               l4977 322E  
                                             l4969 31BA                                               l4987 3276  
                                             l4979 3230                                               l4989 3278  
                                             STR_1 1631                                               STR_2 163F  
                                             STR_3 164D                                               STR_6 1651  
                                             u3000 289A                                               u2200 386E  
                                             u3001 2896                                               u2201 386A  
                                             u3010 28C8                                               u2210 205C  
                                             u3011 28C4                                               u2211 2058  
                                             u3100 3614                                               u3020 2900  
                                             u2300 21AA                                               u2220 206E  
                                             u2140 3ED4                                               u3101 3610  
                                             u3021 28FC                                               u2301 21A6  
                                             u2221 206A                                               u2141 3ED0  
                                             _LATA 0140                                               u3030 3A58  
                                             u3110 3E0A                                               u2310 21C2  
                                             u2230 207E                                               u2150 3EE2  
                                             _LATB 0141                                               u3031 3A54  
                                             u3111 3E06                                               u2311 21BC  
                                             u2231 207A                                               u2151 3EDE  
                                             _LATC 0142                                               u3040 3A96  
                                             u2400 22A6                                               u2320 21C4  
                                             u2240 20BE                                               u3120 342A  
                                             u2160 3F24                                               u3200 3BCE  
                                             _LATD 0143                                               u3041 3A92  
                                             u2401 22A2                                               u2241 20BA  
                                             u3121 3426                                               u2161 3F20  
                                             u3201 3BCA                                               _LATE 0144  
                                             u3050 3ACA                                               u2410 22DE  
                                             u2330 21EC                                               u2250 20D4  
                                             u3130 345E                                               u3210 365E  
                                             u2170 37FE                                               _LATF 0145  
                                             u3051 3AC6                                               u2411 22DA  
                                             u2331 21E8                                               u2251 20D0  
                                             u2171 37FA                                               u3060 3548  
                                             u2500 23F8                                               u2420 2324  
                                             u2340 220A                                               u2260 20E6  
                                             u3140 348C                                               u3220 367C  
                                             u3300 2F0C                                               u2180 3810  
                                             u3061 3544                                               u2501 23F4  
                                             u2421 2320                                               u2341 2206  
                                             u2261 20E2                                               u3141 3488  
                                             u3221 3678                                               u2181 380C  
                                             u3070 3586                                               u2510 240E  
                                             u2430 235A                                               u2350 222A  
                                             u2270 20F6                                               u3150 34A0  
                                             u3230 36A4                                               u3310 2F3A  
                                             u2190 3838                                               u3071 3582  
                                             u2511 240A                                               u2431 2356  
                                             u2351 2226                                               u2271 20F2  
                                             u3151 349C                                               u3135 3454  
                                             u3231 36A0                                               u3215 3654  
                                             u3311 2F36                                               u2191 3834  
                                             u3080 35A4                                               u2520 2422  
                                             u2440 236A                                               u2360 2238  
                                             u2280 2130                                               u3160 34C8  
                                             u3240 36CE                                               u3320 2F5C  
                                             u3400 3D2C                                               u2600 3DB6  
                                             u3081 35A0                                               u2521 241E  
                                             u2441 2366                                               u2361 2234  
                                             u2281 212C                                               u3161 34C4  
                                             u3241 36CA                                               u3321 2F58  
                                             u3305 2F02                                               u3401 3D28  
                                             u2601 3DB2                                               u2610 2938  
                                             u3090 35C4                                               u2530 243C  
                                             u2450 2396                                               u2370 2248  
                                             u2290 213E                                               u3170 34E8  
                                             u2611 2934                                               u3091 35C0  
                                             u2531 2438                                               u2451 2392  
                                             u2371 2244                                               u2291 213A  
                                             u3171 34E4                                               u2700 2AD2  
                                             u2620 294A                                               u2540 2476  
                                             u2460 23A6                                               u2380 227A  
                                             u3180 34F8                                               u3260 3708  
                                             u3340 2FC8                                               u4300 18AC  
                                             u4220 1678                                               u2701 2ACE  
                                             u2621 2946                                               u2541 2472  
                                             u2461 23A2                                               u2381 2276  
                                             u3181 34F4                                               u3261 3702  
                                             u3341 2FC4                                               u4301 18A8  
                                             u4221 1674                                               u2710 2AFC  
                                             u2630 295A                                               u2550 2488  
                                             u2470 23C2                                               u2390 2288  
                                             u3270 370A                                               u3350 2FEC  
                                             u3190 3B84                                               u4310 18DE  
                                             u4230 16C2                                               u2711 2AF8  
                                             u2631 2956                                               u2551 2484  
                                             u2471 23BE                                               u2391 2284  
                                             u3255 36E0                                               u3335 2F70  
                                             u3191 3B80                                               u4311 18DA  
                                             u4231 16BE                                               u2800 2BF6  
                                             u2720 2B20                                               u2640 299C  
                                             u2560 2498                                               u2480 23D2  
                                             u3360 3008                                               u3336 2F7A  
                                             u3280 3DF2                                               u4400 1C0E  
                                             u4320 191C                                               u4240 16D2  
                                             u2801 2BF2                                               u2721 2B1C  
                                             u2641 2998                                               u2561 2494  
                                             u2481 23CE                                               u3361 3004  
                                             u3337 2F8A                                               u3281 3DEE  
                                             u4401 1C0A                                               u4321 1918  
                                             u4241 16CE                                               u2810 2C3E  
                                             u2730 2B36                                               u2650 29AE  
                                             u2570 24B8                                               u2490 23E2  
                                             u3370 305C                                               u3290 3BF2  
                                             u4410 1C56                                               u4330 19A8  
                                             u4250 1710                                               u2811 2C3A  
                                             u2731 2B32                                               u2651 29AA  
                                             u2571 24B4                                               u2491 23DE  
                                             u3355 2FE2                                               u3291 3BEE  
                                             u4411 1C52                                               u4331 19A4  
                                             u4251 170C                                               u2820 2C6E  
                                             u2740 2B54                                               u2660 29BE  
                                             u2900 25CC                                               u2580 24C8  
                                             u3380 3078                                               u4500 1F86  
                                             u4420 1C66                                               u4340 19DE  
                                             u4260 1722                                               u2821 2C6A  
                                             u2741 2B50                                               u2661 29BA  
                                             u2901 25C8                                               u2581 24C4  
                                             u3381 3074                                               u4501 1F82  
                                             u4421 1C62                                               u4341 19DA  
                                             u4261 171E                                               u2830 2C9A  
                                             u2750 2B74                                               u2670 29FC  
                                             u2910 25DC                                               u2590 24E4  
                                             u3390 30B4                                               u4510 1FEC  
                                             u4430 1D00                                               u4350 19F6  
                                             u4270 1798                                               u2831 2C96  
                                             u2751 2B70                                               u2671 29F8  
                                             u2911 25D8                                               u2591 24E0  
                                             u3391 30B0                                               u3375 3052  
                                             u4511 1FE6                                               u4431 1CFC  
                                             u4351 19F2                                               u4271 1794  
                                             u2760 2B84                                               u2680 2A3C  
                                             u2920 2756                                               u2840 2512  
                                             u4520 1FEE                                               u4440 1D4E  
                                             u4360 1A28                                               u4280 17AA  
                                             u2761 2B80                                               u2681 2A38  
                                             u2841 250E                                               u4441 1D4A  
                                             u4361 1A24                                               u4281 17A6  
                                             u2770 2BB2                                               u2690 2AB0  
                                             u2930 27B0                                               u2850 2524  
                                             u4530 2002                                               u4450 1DFA  
                                             u4370 1A36                                               u4290 1820  
                                             u3730 38E4                                               u2771 2BAE  
                                             u2691 2AAC                                               u2931 27AC  
                                             u2851 2520                                               u4531 1FFE  
                                             u4451 1DF6                                               u4371 1A32  
                                             u4291 181C                                               u3731 38E0  
                                             u3900 31A8                                               u2780 2BC8  
                                             u2940 27D0                                               u2860 2534  
                                             u4460 1E36                                               u4380 1A60  
                                             u3740 396C                                               u4540 2CD4  
                                             u3901 31A4                                               u2781 2BC4  
                                             u2941 27CC                                               u2925 274C  
                                             u2861 2530                                               u4461 1E32  
                                             u4381 1A5C                                               u3741 3968  
                                             u4541 2CD0                                               u3750 3F76  
                                             u3910 31F2                                               u2790 2BDC  
                                             u2950 27E0                                               u2870 2574  
                                             u4470 1E44                                               u4390 1BA8  
                                             u4550 2D16                                               u3751 3F72  
                                             u3911 31EE                                               u2791 2BD8  
                                             u2951 27DC                                               u2871 2570  
                                             u4471 1E40                                               u4391 1BA4  
                                             u4551 2D12                                               u4607 3400  
                                             u3760 3F5A                                               u3920 3210  
                                             u2960 280E                                               u2880 2586  
                                             u4480 1E98                                               u4560 2DAE  
                                             u3761 3F56                                               u3921 320C  
                                             u2961 280A                                               u2881 2582  
                                             u4481 1E94                                               u4561 2DAA  
                                             u3850 3FDA                                               u3770 3F3E  
                                             u3930 3220                                               u2970 2824  
                                             u2890 2596                                               u4490 1F6A  
                                             u4570 3CD2                                               u3851 3FD4  
                                             u3771 3F3A                                               u3931 321C  
                                             u2971 2820                                               u2891 2592  
                                             u4491 1F66                                               u4571 3CCE  
                                             u3860 3FDC                                               u3940 322E  
                                             u2980 2838                                               u4580 32B8  
                                             u3941 322A                                               u2981 2834  
                                             u4581 32B4                                               u3950 3268  
                                             u3870 30E8                                               u2990 2852  
                                             u4590 3366                                               u3951 3264  
                                             u3871 30E4                                               u2991 284E  
                                             u4591 3362                                               u3960 3276  
                                             u3880 30F6                                               u3961 3272  
                                             u3881 30F2                                               u3890 3152  
                                             u3891 314E                                               _WPUA 0401  
                                             _WPUB 0409                                               _WPUC 0411  
                                             _WPUD 0419                                               _WPUE 0421  
                                             _WPUF 0429                                     _UART2_ErrorGet 0000  
                                      ?_IO_RA0_ISR 0501                                               _dbuf 0600  
                                             _labs 3BE4                                               _main 328A  
                                             _prec 05C1                                               pad@i 051C  
                                             pad@p 0519                                               fsr1h 04E2  
                                             fsr2h 04DA                                               indf2 04DF  
                                             fsr1l 04E1                                               fsr2l 04D9  
                                    ___fpclassifyf 361E                          ?_INT2_SetInterruptHandler 0503  
                                             prodh 04F4                                               prodl 04F3  
                                             start 001A                        __end_of_ADC_ConversionStart 4032  
                                  ___fldiv@new_exp 053F                      _ADC_Context1ThresholdCallback 05C5  
                                     ___param_bank 0000                                              ??_pad 051B  
                                  _UART2_IsRxReady 0000                                    _UART2_IsTxReady 3EC2  
                                    ___fltol@sign1 050B                                              ?_labs 0503  
                                            _ADCGA 0110                                              _ADCGB 0111  
                                            _ADCGC 0112                                              _ADACT 03F9  
                                            _ADCAP 03F0                                              _ADCGD 0113  
                                            _ADCGE 0114                                    __end_of___fladd 24F8  
                                            ?_main 0501                                              _ADCLK 03FA  
                                            _ADCNT 03E6                                              _ADNCH 03ED  
                                            _ADCTX 03FB                                              _ADPCH 03EC  
                                  __end_of___fldiv 2CAE                                              _ADREF 03F8  
                                     main@context1 05B1                                       main@context2 05B2  
                                  __end_of___flneg 3E2C                                              _ADRPT 03E7  
                                  __end_of___flmul 291E                                    __end_of___flsub 3D74  
                                  __end_of___fltol 351A                           ADC_ContextSelect@context 0503  
                                            _U2P1L 02B8                                              _U2P2L 02BA  
                                            _U2P3L 02BC                                              _IOCAF 0407  
                                            _IOCBF 040F                                              _IOCCF 0417  
                                            _IOCAN 0406                                              _IOCEF 0427  
                                            _IOCAP 0405                                              _IOCBN 040E  
                                            _IOCBP 040D                                              _IOCCN 0416  
                                            _IOCCP 0415                                              _IOCEN 0426  
                                            _IOCEP 0425                                              _IOCWF 043F  
                                            _IOCWN 043E                                              _IOCWP 043D  
                                            _U2UIR 02C4                                              _U2RXB 02B4  
                                            i2l145 3FF2                                              i2l241 3B24  
                                            i2l242 3B6C                                              _U2TXB 02B6  
                                            i2l155 403E                                              i2l243 3B48  
                                            i2l149 3E90                                              i2l247 3B6C  
                                            i2l239 3B00                                              i2l861 4034  
                                            i2l871 4038                                              i2l866 403C  
                                            _OSCEN 00B3                                              _UART2 1601  
                                     vfpfcnvrt@fmt 0597                                              _TRISA 0148  
                                            _TRISB 0149                                              _TRISC 014A  
                                            _TRISD 014B                                              _TRISE 014C  
                                            _TRISF 014D                            __end_of_PIN_MANAGER_IOC 3FF4  
                                            _flags 05D9                                read_prec_or_width@c 0509  
                              read_prec_or_width@n 050A                                              _fputc 37EC  
                                            _fputs 3D74                                              labs@a 0503  
                                            pad@fp 0515                                              _width 05BF  
                                            _putch 3F0E                           _INT1_SetInterruptHandler 4008  
                                            pclath 04FA                                              pclatu 04FB  
                                            tablat 04F5                                              status 04D8  
                                   ?___fpclassifyf 0503                                    __initialization 3E92  
                                     __end_of_labs 3C3A                                       __end_of_main 3414  
                                _ADC_ContextSelect 4024                                          ??_ADC_ISR 0501  
                      ?_INTERRUPT_InterruptManager 0501                                       ?_UART2_Write 0501  
                                           ??_labs 0507                                 ?_ADC_ContextSelect 0501  
                                           ??_main 05AF                                      __activetblptr 0003  
       __end_of_UART2_OverrunErrorCallbackRegister 3F64               ??_UART2_OverrunErrorCallbackRegister 0505  
              ?_UART2_OverrunErrorCallbackRegister 0503                 _UART2_OverrunErrorCallbackRegister 3F48  
                       __end_of_read_prec_or_width 3976   UART2_ParityErrorCallbackRegister@callbackHandler 0503  
UART2_OverrunErrorCallbackRegister@callbackHandler 0503  UART2_FramingErrorCallbackRegister@callbackHandler 0503  
                              ??_ADC_ContextSelect 0503                                             _ADACCH 03E4  
                                           _ADACCL 03E3                                             _ADACCU 03E5  
                                           _ADACQH 03EF                                             _ADACQL 03EE  
                                           _ADCON0 03F3                                             _ADCON1 03F4  
                                           _ADCON2 03F5                                             _ADCON3 03F6  
                                           _ADERRH 03DE                                             _ADERRL 03DD  
                                           ?_fputc 0505                                             _ADLTHH 03DA  
                                           _ACTCON 00AC                                             _ADLTHL 03D9  
                                           ?_fputs 050E                                             _ADRESH 03EB  
                                           _ADRESL 03EA                                             _ADPREH 03F2  
                                           _ADPREL 03F1                                             _ADSTAT 03F7  
                                           _ADUTHH 03DC                                             _ADUTHL 03DB  
                                           _ANSELA 0400                                             ?_putch 0501  
                                           _ANSELB 0408                                             _ANSELC 0410  
                                           _ANSELD 0418                                             _ANSELE 0420  
                                           _ANSELF 0428                                             _RB1I2C 0286  
                                           _RB2I2C 0285                                             _RC3I2C 0288  
                                           _RC4I2C 0287                                             _U2CON0 02BE  
                                           _U2CON1 02BF                                             _U2CON2 02C0  
                                           _U2BRGH 02C2                                             _U2FIFO 02C3  
                                           _U2BRGL 02C1                                             _RB4PPS 020D  
                                           _ODCONA 0402                                             _ODCONB 040A  
                                           _ODCONC 0412                                             _ODCOND 041A  
                                           _ODCONE 0422                                             _ODCONF 042A  
                                           i2l5001 3B1C                                             i2l5003 3B32  
                                           i2l5005 3B40                                             i2l5007 3B56  
                                           i2l5009 3B64                                             i2l4701 3E60  
                                           i2l4703 3E74                                             i2l4705 3E8C  
                                           _INLVLA 0404                                             _INLVLB 040C  
                                           _INLVLC 0414                                             _INLVLD 041C  
                                           _INLVLE 0424                                             _INLVLF 042C  
                                           i2l4911 4032                                             i2l4923 4036  
                                           i2l4917 403A                                             i2l4897 3FDE  
                                           i2l4993 3ADC                                             i2l4899 3FEE  
                                           i2l4995 3AEA                                             i2l4997 3AF8  
                                           i2l4999 3B0E                                             _OSCFRQ 00B1  
                                 __end_of___xxtofl 328A                                   _UART2_Initialize 3C3A  
                          __end_of_UART2_IsTxReady 3EEA                          _UART2_OverrunErrorHandler 05CB  
                                     vfprintf@cfmt 055B                          __end_of_ADC_ContextSelect 402C  
                                           ___flge 351A                                             ___fleq 3A2A  
                                        ??___fladd 050B                                          ??___fldiv 0536  
                                        ??___flneg 0507                                          ??___flmul 051D  
                                        ??___flsub 0536                                          ??___fltol 0507  
                                           _efgtoa 1656                                             _floorf 2EC4  
                                           _memcpy 3CDE                               read_prec_or_width@ap 0505  
                                           clear_0 3E98                                             clear_1 3EA4  
                 _UART2_DefaultParityErrorCallback 0000                                             isa$std 0001  
                                           _printf 3EEA                                             pad@buf 0517  
                                ?_CLOCK_Initialize 0501                                             _strcpy 3DB8  
                                           fputc@c 0505                       _INT2_DefaultInterruptHandler 0000  
                                           fputs@c 0512                                             fputs@i 0513  
                                           fputs@s 050E                                 ??_CLOCK_Initialize 0503  
                                  ___fpclassifyf@e 050B                                    ___fpclassifyf@u 050D  
                                  ___fpclassifyf@x 0503                      _ADC_Context2ThresholdCallback 05C3  
                                     __mediumconst 1600                                             tblptrh 04F7  
                                           tblptrl 04F6                                             tblptru 04F8  
                                 __end_of_vfprintf 3CDE           INT2_SetInterruptHandler@InterruptHandler 0503  
         INT1_SetInterruptHandler@InterruptHandler 0503           INT0_SetInterruptHandler@InterruptHandler 0503  
       IO_RA0_SetInterruptHandler@InterruptHandler 0503                                   ?_PIN_MANAGER_IOC 0501  
                                       ___flge@ff1 052E                                         ___flge@ff2 0532  
                                  ??___fpclassifyf 0507                                       ___xxtofl@arg 0511  
                                     ___xxtofl@exp 0510                                  _SYSTEM_Initialize 3FB2  
                                     ___xxtofl@val 0507                                         ___fleq@ff1 0503  
                                       ___fleq@ff2 0507                                         __accesstop 0560  
                          __end_of__initialization 3EBC                                         ___flneg@f1 0503  
                               ?_SYSTEM_Initialize 0501                                      ___rparam_used 0001  
                                       ___fltol@f1 0503                                _UART2_AutoBaudQuery 0000  
                                    __end_of_UART2 1631                                     __pcstackCOMRAM 0501  
                              ??_SYSTEM_Initialize 0505                                      __end_of_fputc 38B6  
                                    __end_of_fputs 3DB8                                      __end_of_putch 3F2C  
                       _ADC_ConversionDoneCallback 05C7                  _UART2_DefaultFramingErrorCallback 0000  
                 __end_of_INT2_SetInterruptHandler 4008                                            ??_fputc 0509  
                        __end_of_SYSTEM_Initialize 3FC8                                            ??_fputs 0512  
                        ?_ADC_Context1ThresholdISR 0501                                            ??_putch 0504  
                     ??_IO_RA0_SetInterruptHandler 0505                                         __pbssBANK5 05B7  
                                       __pbssBANK6 0600                                  _UART2_AutoBaudSet 0000  
                                     ??_IO_RA0_ISR 0501                              _INT0_InterruptHandler 05D7  
                          _ADC_ConversionResultGet 3F80                                            IVTBASEH 045E  
                                          IVTBASEL 045D                                            IVTBASEU 045F  
                                 ?_UART2_IsTxReady 0501                                            ?___flge 052E  
                                          ?___fleq 0503                                            ?_efgtoa 0560  
                                          _ADCSEL1 03FC                                            _ADCSEL2 03FD  
                                          _ADFLTRH 03E2                                            ?_floorf 0547  
                                          _ADFLTRL 03E1                                            ?_memcpy 0503  
                                          _ADC_ISR 4032                                            _ADPREVH 03E9  
                                          _ADPREVL 03E8                                            _ADSTPTH 03E0  
                                          _ADSTPTL 03DF                                            ?_printf 05A8  
                                          ?_strcpy 0503                              _UART2_TransmitDisable 0000  
                                          _FSCMCON 0458                                            _U2ERRIE 02C6  
                                          _U2ERRIR 02C5                         ??_INT1_SetInterruptHandler 0505  
                               __end_of_IO_RA0_ISR 3E92                                          ?___xxtofl 0507  
                                          _U2RXPPS 0274                                            _OSCCON1 00AD  
                                          _OSCCON3 00AF                                            _OSCTUNE 00B0  
                                          _SLRCONA 0403                                            _SLRCONB 040B  
                                          _SLRCONC 0413                                            _SLRCOND 041B  
                                          _SLRCONE 0423                                            _SLRCONF 042B  
                        ?_ADC_Context2ThresholdISR 0501                          ?_INT0_SetInterruptHandler 0503  
                                          __Hparam 0000                                            __Lparam 0000  
                                          ___fladd 2042                                            ___fldiv 291E  
                                          ___flneg 3DF4                                            ___flmul 24F8  
                                          ___flsub 3D2E                                            ___fltol 3414  
                                        ?_vfprintf 05A3                                       __psmallconst 1600  
                                          __pcinit 3E92                                            __ramtop 1600  
                                          __ptext0 328A                                            __ptext1 3EEA  
                                          __ptext2 3C8E                                            __ptext3 2CAE  
                                          __ptext4 38B6                                            __ptext5 1656  
                                          __ptext6 3DB8                                            __ptext7 3B76  
                                          __ptext8 3D74                                            __ptext9 37EC  
                                          _context 05D1                              read_prec_or_width@fmt 0503  
                                       ??___xxtofl 050B                  _UART2_DefaultOverrunErrorCallback 0000  
                         ??_PIN_MANAGER_Initialize 0505                                          _IOCAFbits 0407  
                         __end_of_UART2_Initialize 3C8E                                            efgtoa@c 0566  
                                          efgtoa@d 0574                                            efgtoa@e 0578  
                                          efgtoa@f 0562                                            efgtoa@g 058B  
                                          efgtoa@h 0582                                            efgtoa@i 0580  
                                          efgtoa@l 0586                                            efgtoa@m 0576  
                                          efgtoa@n 058F                                            efgtoa@p 056B  
                                          efgtoa@t 056D                                            efgtoa@u 0591  
                                          efgtoa@w 057A                               end_of_initialization 3EBC  
                                          floorf@e 0555                                            floorf@m 0551  
                         _INT2_SetInterruptHandler 3FFE                                            floorf@u 0557  
                                          floorf@x 0547                                          _U2UIRbits 02C4  
        __end_of_UART2_ParityErrorCallbackRegister 3F48                ??_UART2_ParityErrorCallbackRegister 0505  
               ?_UART2_ParityErrorCallbackRegister 0503                  _UART2_ParityErrorCallbackRegister 3F2C  
                        ??_ADC_ConversionResultGet 0505                                            memcpy@d 0509  
                                          memcpy@n 0507                                          _PIR10bits 04BC  
                                          memcpy@s 050B                                            fputc@fp 0507  
                                          fputs@fp 0510                                 _read_prec_or_width 38B6  
                     __end_of_ADC_IsConversionDone 3FDE                                 _UART2_Deinitialize 0000  
                                __end_of_vfpfcnvrt 2EC4                                         efgtoa@mode 0572  
                                       efgtoa@sign 058A                                            postdec2 04DD  
                              ?_read_prec_or_width 0503                                            postinc0 04EE  
                                          postinc1 04E6                                            postinc2 04DE  
                                 vfpfcnvrt@convarg 059D                                         ??_vfprintf 055B  
                                          strcpy@d 0507                              _INT1_InterruptHandler 05D5  
                                      ___fladd@grs 0512                   ??_IO_RA0_DefaultInterruptHandler 0501  
                  ?_IO_RA0_DefaultInterruptHandler 0501                                      ___xxtofl@sign 050F  
                             ??_read_prec_or_width 0507                                        ___fldiv@grs 0541  
                                      ___fldiv@rem 053A                                        _ADCSEL1bits 03FC  
                                      _ADCSEL2bits 03FD                 __end_of_IO_RA0_SetInterruptHandler 3FFE  
                       _IO_RA0_SetInterruptHandler 3FF4                            _IO_RA0_InterruptHandler 05DA  
                                      ___flmul@grs 0522                       __end_of_INTERRUPT_Initialize 3E60  
                                   __end_of___flge 361E                                     __end_of___fleq 3AD4  
                     _INT0_DefaultInterruptHandler 0000                                        vfpfcnvrt@ap 0599  
                                      vfpfcnvrt@cp 05A2                                        vfpfcnvrt@fp 0595  
                 __end_of_ADC_Context1ThresholdISR 403E                                     __end_of_efgtoa 2042  
                                   _ADC_Initialize 371C                                     __end_of_floorf 30D6  
                                   __end_of_memcpy 3D2E                                         floorf@F521 05B7  
                                   __end_of_printf 3F0E                                     __end_of_strcpy 3DF4  
                              start_initialization 3E92                                        __end_of_pad 3BE4  
                                      putch@txData 0504                                         ivt0x8_base 0008  
                            __end_of___fpclassifyf 371C                                        vfprintf@fmt 05A5  
                                         ??___flge 0536                                           ??___fleq 050B  
                                         ??_efgtoa 0567                             __end_of_ADC_Initialize 37EC  
                                         ??_floorf 054B                                           ??_memcpy 0509  
                                         ?_ADC_ISR 0501                                  UART2_Write@txData 0503  
                 __end_of_ADC_Context2ThresholdISR 403A                                           ??_printf 055C  
                                         ??_strcpy 0506                                          ___fladd@a 0507  
                                        ___fladd@b 0503                                          ___fldiv@a 0532  
                                        ___fldiv@b 052E                                          ___flmul@a 0519  
                                        ___flmul@b 0515                                        __pbssCOMRAM 055C  
                                        ___flsub@a 0532                                          ___flsub@b 052E  
                 __end_of_INT0_SetInterruptHandler 401C                          _UART2_FramingErrorHandler 05CD  
                                    __pcstackBANK5 0560                               _ADC_IsConversionDone 3FC8  
                             _UART2_IsTxReady$1067 0503                                _ADC_ConversionStart 402C  
                            _INT2_InterruptHandler 05D3                                          __pnvBANK5 05DA  
                                      _efgtoa$2284 056F                                          _main$2808 05B3  
                           _PIN_MANAGER_Initialize 3976                                           ?___fladd 0503  
                                         ?___fldiv 052E                                           ?___flneg 0503  
                                         ?___flmul 0515                                           ?___flsub 052E  
                                         ?___fltol 0503                                    ?_ADC_Initialize 0501  
                             _UART2_TransmitEnable 0000                               ?_ADC_ConversionStart 0501  
                                    ??_UART2_Write 0503                       ??_INTERRUPT_InterruptManager 0501  
                                      __smallconst 1600                         ??_INT2_SetInterruptHandler 0505  
                         _ADC_Context1ThresholdISR 403A                              ?_ADC_IsConversionDone 0501  
                                ?_UART2_Initialize 0501                           _UART2_ParityErrorHandler 05C9  
                               ??_UART2_Initialize 0505                               _INTERRUPT_Initialize 3E2C  
                                 _uart2RxLastError 05CF                                   _CLOCK_Initialize 3F9A  
                                      _U2ERRIRbits 02C5                          ?_INT1_SetInterruptHandler 0503  
                                         _PIE0bits 04A7                                           _PIE1bits 04A8  
                                         i2u400_40 3B1C                                           i2u400_41 3B18  
                                         i2u401_40 3B32                                           i2u401_41 3B2E  
                                         i2u402_40 3B40                                           i2u402_41 3B3C  
                                         i2u403_40 3B56                                           i2u403_41 3B52  
                                         i2u404_40 3B64                                           i2u404_41 3B60  
                                         _PIR0bits 04B2                                           _PIR1bits 04B3  
                                         i2u381_40 3E74                                           i2u381_41 3E70  
                                         i2u382_48 3E7A                                           i2u382_49 3E8C  
                                         i2u384_40 3FEE                                           i2u384_41 3FEA  
                                         _PIR6bits 04B8                                           i2u397_40 3AEA  
                                         i2u397_41 3AE6                                           i2u398_40 3AF8  
                                         i2u398_41 3AF4                                           i2u399_40 3B0E  
                                         i2u399_41 3B0A                              ??_ADC_ConversionStart 0503  
                                ??_PIN_MANAGER_IOC 0501                                          _vfpfcnvrt 2CAE  
                                       _ADCON0bits 03F3                                         _ADCON1bits 03F4  
                                       _ADCON2bits 03F5                                         _ADCON3bits 03F6  
                         _ADC_Context2ThresholdISR 4036                                __end_of_UART2_Write 4024  
                                       vfpfcnvrt@c 05A1                                        _INTCON0bits 04D6  
                      ?_IO_RA0_SetInterruptHandler 0503                              ?_INTERRUPT_Initialize 0501  
                         _INT0_SetInterruptHandler 4012             __end_of_IO_RA0_DefaultInterruptHandler 4040  
                   _IO_RA0_DefaultInterruptHandler 403E                                         _ADSTATbits 03F7  
                                         __Hrparam 0000                                          memcpy@tmp 050D  
                                       vfprintf@ap 05A6                                           __Lrparam 0000  
                                       vfprintf@fp 05A3                                         ?_vfpfcnvrt 0595  
                               ___fpclassifyf@F465 05BB                             ??_ADC_IsConversionDone 0503  
                                         ___xxtofl 30D6                                           __pivt0x8 0008  
                         ?_ADC_ConversionResultGet 0503                                           __ptext10 3F0E  
                                         __ptext11 401C                                           __ptext20 3DF4  
                                         __ptext12 3EC2                                           __ptext21 24F8  
                                         __ptext13 3CDE                                           __ptext30 3F64  
                                         __ptext22 351A                                           __ptext14 3BE4  
                                         __ptext31 3976                                           __ptext23 3A2A  
                                         __ptext15 2EC4                                           __ptext40 402C  
                                         __ptext32 3FF4                                           __ptext24 291E  
                                         __ptext16 361E                                           __ptext41 3F80  
                                         __ptext33 3E2C                                           __ptext25 30D6  
                                         __ptext17 3414                                           __ptext42 4024  
                                         __ptext34 3FFE                                           __ptext26 3FB2  
                                         __ptext18 3D2E                                           __ptext43 3AD4  
                                         __ptext35 4008                                           __ptext27 3C3A  
                                         __ptext19 2042                                           __ptext44 3FDE  
                                         __ptext36 4012                                           __ptext28 3F2C  
                                         __ptext45 3E60                                           __ptext37 3F9A  
                                         __ptext29 3F48                                           __ptext46 403E  
                                         __ptext38 371C                                           __ptext47 4032  
                                         __ptext39 3FC8                                           __ptext48 4036  
                                         __ptext49 403A                                  ??_UART2_IsTxReady 0503  
                                         _context1 055D                                           _context2 055C  
                                       _U2CON0bits 02BE                                         _U2CON1bits 02BF  
                                       strcpy@dest 0503                                         _U2FIFObits 02C3  
                                         efgtoa@fp 0560                                           efgtoa@ne 0569  
                                         efgtoa@pp 0571                                           efgtoa@ou 057C  
                                         isa$xinst 0000                                           _vfprintf 3C8E  
               __end_of_INTERRUPT_InterruptManager 3B76                         _INTERRUPT_InterruptManager 3AD4  
                                        printf@fmt 05A8                       _INT1_DefaultInterruptHandler 0000  
                                      _UART2_Write 401C                                           memcpy@d1 0503  
                                         memcpy@s1 0505                             ??_INTERRUPT_Initialize 0505  
                                         intlevel2 0000                                         _IO_RA0_ISR 3E60  
                          ?_PIN_MANAGER_Initialize 0501                                          strcpy@src 0505  
                                 ??_ADC_Initialize 0503                                        efgtoa@nmode 0573  
                                         printf@ap 05AD                                         _UART2_Read 0000  
                       ??_ADC_Context1ThresholdISR 0501                                        ??_vfpfcnvrt 059B  
                         __end_of_CLOCK_Initialize 3FB2                    __end_of_ADC_ConversionResultGet 3F9A  
                 __end_of_INT1_SetInterruptHandler 4012                                      ___fladd@signs 050F  
                   __end_of_PIN_MANAGER_Initialize 3A2A                                       ___fladd@aexp 0510  
                                     ___fladd@bexp 0511                                    _PIN_MANAGER_IOC 3FDE  
